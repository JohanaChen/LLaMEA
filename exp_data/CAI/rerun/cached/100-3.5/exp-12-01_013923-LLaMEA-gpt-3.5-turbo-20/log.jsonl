{"id": "a76da83d-718d-4c97-b00c-7e849d555bcd", "solution": "import numpy as np\n\nclass ParticleAccelerationOptimization:\n    def __init__(self, budget, dim, num_particles=30, inertia_weight=0.5, cognitive_weight=1.5, social_weight=1.5, acceleration_coefficient=2.0):\n        self.budget = budget\n        self.dim = dim\n        self.num_particles = num_particles\n        self.inertia_weight = inertia_weight\n        self.cognitive_weight = cognitive_weight\n        self.social_weight = social_weight\n        self.acceleration_coefficient = acceleration_coefficient\n\n    def __call__(self, func):\n        def initialize_particles():\n            return np.random.uniform(-5.0, 5.0, size=(self.num_particles, self.dim))\n\n        particles = initialize_particles()\n        velocities = np.zeros((self.num_particles, self.dim))\n        personal_bests = particles.copy()\n        global_best = particles[np.argmin([func(p) for p in particles])]\n\n        for _ in range(self.budget):\n            for i in range(self.num_particles):\n                r1, r2 = np.random.rand(self.dim), np.random.rand(self.dim)\n                velocities[i] = self.inertia_weight * velocities[i] + \\\n                                self.cognitive_weight * r1 * (personal_bests[i] - particles[i]) + \\\n                                self.social_weight * r2 * (global_best - particles[i])\n                particles[i] = particles[i] + velocities[i]\n\n                if func(particles[i]) < func(personal_bests[i]):\n                    personal_bests[i] = particles[i]\n                    if func(particles[i]) < func(global_best):\n                        global_best = particles[i]\n\n        return global_best", "name": "ParticleAccelerationOptimization", "description": "Particle Acceleration Optimization (PAO) algorithm inspired by physical laws, where particles are accelerated towards the global best solution while considering personal and social influences.", "configspace": "", "generation": 0, "fitness": 0.2652570609306758, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.7555836204692712, 0.7663392739870905, 0.7948183366488244, 0.7399902867019126, 0.7511061418361077, 0.7846262987350541, 0.7727206875686029, 0.7666307806292401, 0.7467414681121292, 0.5798221863520692, 0.46664390174703063, 0.45198666495160855, 0.5072088384305744, 0.4878827850025881, 0.5398208330599483, 0.5358518627330024, 0.5128997687726875, 0.5147441212469298, 0.11658095827547588, 0.11027465824169702, 0.11581110906406211, 0.11075076074714707, 0.09774326396156485, 0.08779684834109869, 0.11895778709021088, 0.09649739433399895, 0.11677818424960895, 0.09770452173261768, 0.11795971223734103, 0.09311253973884304, 0.10146681296361437, 0.0853655724178185, 0.08547359742989591, 0.0801463881969463, 0.09220452547044622, 0.08512326867629472, 0.9801722212728002, 0.9826926198651356, 0.983047958020037, 0.9753745342891512, 0.9841859170733878, 0.9755619555406672, 0.9779453266123357, 0.9849684877528131, 0.9767520005090399, 0.41194675314861073, 0.23521230418934835, 0.3734905247995832, 0.38582150081733557, 0.34520178265348367, 0.3815195529370514, 0.3818610029357403, 0.31625831057341114, 0.21116724128903075, 0.5397605358424706, 0.16028124196401627, 0.5387894097157122, 0.26174337364529576, 0.33379773853454653, 0.20438892832619604, 0.4710382772242365, 0.22358961170241198, 0.2332669978220251, 0.18792084179330026, 0.1931915787879429, 0.1793190329791745, 0.203638997753549, 0.17299843285268401, 0.181131255097992, 0.2019263599747675, 0.17458457172313158, 0.1933190696652889, 0.1853983097207651, 0.11581958137020576, 0.11012416683875381, 0.14597480207255653, 0.1726817771265311, 0.1869498118719427, 0.1830215828456322, 0.11914135315412422, 0.2157952409082683, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0006799223797930853, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05234373581493368, 0.03965820946823406, 0.04336836003039879, 0.05871268571878796, 9.999999999998899e-05, 0.03854523769805562, 0.033946125589565224, 0.040544713008422884, 0.014224103952993006, 0.09836182455524689, 0.08011546351842769, 0.1894775767221606, 0.08391221926285397, 0.08343566252784473, 0.09676401150583702, 0.09780131592962771, 0.20291550801263625, 0.007781575321288758, 0.1084449896215205, 0.19512073787413642, 0.0945472899799501, 0.09571280586818343, 0.09838821754121285, 0.25297118312826194, 0.0879115188622096, 0.1920984921225357, 0.09833600498197359, 0.4624629989874064, 0.4801096859911207, 0.4895841111100876, 0.48462023104470253, 0.4714966048317608, 0.4738142588796861, 0.5022362921134103, 0.470551501255964, 0.4760950207847229, 0.1180969997461343, 0.08214757896261049, 0.08079899292272019, 0.08829143674624151, 0.09455472659471742, 0.10174163961538851, 0.10642915745031134, 0.09798073526905715, 0.10902136165095089, 0.15176837155545653, 0.13498689039383494, 0.14299955272543952, 0.15111724521735248, 0.1413851935121183, 0.1195977187562487, 0.11604834865932823, 0.09436001981583064, 0.1501050894295286, 0.34081266186874914, 0.3472244175672885, 0.44197428411618855, 0.4370514026855513, 0.3895425770289792, 0.3879252168230649, 0.3936568085151111, 0.3572302804821512, 0.34766044042042255, 0.24398233095216215, 0.2886137704619175, 0.2932478278486005, 0.2571079597982705, 0.21129303132125, 0.29195482167298425, 0.28565005711282954, 0.29459521741746364, 0.25800386094360706, 0.19428242225406123, 0.1707779621006883, 0.18541397018845995, 0.21315385507546658, 0.20938889209024691, 0.17606431589736493, 0.23855567850550707, 0.19256456702621794, 0.19181145921226084, 0.18113963620192464, 0.3971830905212562, 0.2126274051176531, 0.19536101314621934, 0.21581296142682727, 0.1934544995344074, 0.18434527151161362, 0.17679436393405124, 0.1987453902125198, 0.7453351583212263, 0.17720068170621872, 0.1418858832452501, 0.8525980521864833, 0.20027620189013606, 0.21974992588696474, 0.12085891509716806, 0.1688261236216858, 0.1805405645774446, 0.5711653731637176, 0.1558492613298309, 0.3212936151980845, 0.20437248923084217, 0.16701354269629487, 0.2222266022624163, 0.1047889203856448, 0.10475533550312666, 0.6564008740784353, 0.17062731701390244, 0.18227127975692847, 0.18313290503958046, 0.16491239537629576, 0.16266666303714028, 0.18609473337772742, 0.1767247924162555, 0.1680158045548642, 0.1683322343560023, 0.10382815422921299, 0.07808413268804015, 0.07494605676300203, 0.07277416252046276, 0.07184694930591917, 0.08021104164764259, 0.07302389127551889, 0.0751120109989244, 0.07541950452918778]}, "mutation_prompt": null}
{"id": "e68b4ee0-a751-4876-b398-e461c4da9589", "solution": "import numpy as np\n\nclass EnhancedParticleAccelerationOptimization:\n    def __init__(self, budget, dim, num_particles=30, inertia_weight=0.5, cognitive_weight=1.5, social_weight=1.5, acceleration_coefficient=2.0, inertia_decay=0.99):\n        self.budget = budget\n        self.dim = dim\n        self.num_particles = num_particles\n        self.inertia_weight = inertia_weight\n        self.cognitive_weight = cognitive_weight\n        self.social_weight = social_weight\n        self.acceleration_coefficient = acceleration_coefficient\n        self.inertia_decay = inertia_decay\n\n    def __call__(self, func):\n        def initialize_particles():\n            return np.random.uniform(-5.0, 5.0, size=(self.num_particles, self.dim))\n\n        particles = initialize_particles()\n        velocities = np.zeros((self.num_particles, self.dim))\n        personal_bests = particles.copy()\n        global_best = particles[np.argmin([func(p) for p in particles])]\n\n        for _ in range(self.budget):\n            for i in range(self.num_particles):\n                r1, r2 = np.random.rand(self.dim), np.random.rand(self.dim)\n                adaptive_inertia = self.inertia_weight * self.inertia_decay\n                velocities[i] = adaptive_inertia * velocities[i] + \\\n                                self.cognitive_weight * r1 * (personal_bests[i] - particles[i]) + \\\n                                self.social_weight * r2 * (global_best - particles[i])\n                particles[i] = particles[i] + velocities[i]\n\n                if func(particles[i]) < func(personal_bests[i]):\n                    personal_bests[i] = particles[i]\n                    if func(particles[i]) < func(global_best):\n                        global_best = particles[i]\n\n        return global_best", "name": "EnhancedParticleAccelerationOptimization", "description": "Enhanced Particle Acceleration Optimization (EPAO) algorithm by incorporating adaptive inertia weight to balance exploration and exploitation.", "configspace": "", "generation": 1, "fitness": 0.2672994965085942, "feedback": "", "error": "", "parent_id": "a76da83d-718d-4c97-b00c-7e849d555bcd", "metadata": {"aucs": [0.7509743379870555, 0.7653357819463115, 0.7774978884133497, 0.7547553255793712, 0.7463469499551374, 0.7577590198880392, 0.804160953516202, 0.774135604021191, 0.7747410953881295, 0.5434951869400535, 0.5203003825055179, 0.4824095153392728, 0.5062626121937484, 0.5358278834653301, 0.4824220959271406, 0.5004791436157823, 0.5359758310481681, 0.5450649133092194, 0.12556053150280566, 0.10663611097386916, 0.15183800048671525, 0.1177371047670509, 0.09286196992593543, 0.08968785967802417, 0.10337097694915698, 0.11243958782744135, 0.08254536189228778, 0.08497499178678702, 0.1001321707876528, 0.09414854463616318, 0.09822488250188977, 0.07960000494637132, 0.10003649219551392, 0.09393214325259092, 0.08847646912301188, 0.08473445221790077, 0.9801438430850514, 0.982691377200506, 0.9830452830051906, 0.9753713736400322, 0.9841896302757331, 0.9755538632725084, 0.9779436193074452, 0.9839070479062968, 0.9767404005754512, 0.4000906799437446, 0.28375482468634405, 0.3437420307203217, 0.37793028713804444, 0.3781614571515214, 0.3506428398878847, 0.3418747466911498, 0.3300620659097534, 0.34824886544762057, 0.2367381716866701, 0.43311110228051053, 0.21865519602151617, 0.31344947259329814, 0.2726569124547795, 0.26123608191118497, 0.6389686914825072, 0.41545422751989614, 0.21742484546465424, 0.1987635475669718, 0.18319401008631442, 0.1578992297052757, 0.306439082996647, 0.1958938157792569, 0.1682016432241591, 0.1772844707274337, 0.2072143145435894, 0.1821407576095898, 0.20500438773169982, 0.163173000693989, 0.15982327523689488, 0.19786075526377844, 0.23904147852710367, 0.21399262534419405, 0.12475061746819394, 0.19830481366335906, 0.18898757112705267, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0004568283959892616, 0.014800183069913153, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.06770715038030173, 0.05390436390534581, 0.0749806721638071, 0.06328987188129687, 0.010599786166063718, 0.061953237050651255, 0.06388011992633802, 0.033777387585470775, 0.00931144058022404, 0.10446654610838013, 0.08950176235979213, 0.13347395531479056, 0.030261618312252492, 0.1342241394388911, 0.11866044350606153, 0.10759893591620762, 0.09818645040542229, 0.04021856636976395, 0.2154846799863409, 0.10809214877054019, 0.10135061570884096, 0.10173732474394437, 0.1509523153362088, 0.14746343689060182, 0.0562490309799798, 0.10680043041458853, 0.1567675790482379, 0.5099701859975738, 0.47182784722074567, 0.47769988654573825, 0.481529183475067, 0.4648856510157152, 0.47299621409528203, 0.4889191080030759, 0.5067166472977396, 0.47707474383798276, 0.09470833592006966, 0.09438809392216063, 0.0870454699697415, 0.09593254778989635, 0.07155986204490217, 0.10466665784528828, 0.09340616928847556, 0.08910209188175067, 0.09609787339816189, 0.12501113464743396, 0.12670322518810828, 0.13113215290015834, 0.15628393823428433, 0.13406714714036094, 0.16579489020796467, 0.16741710236659146, 0.11957297779718756, 0.13013499779384674, 0.3151777729648074, 0.353797362380876, 0.3911231649870738, 0.38355408013875947, 0.3920608901284247, 0.3392425879947528, 0.3714160501611632, 0.42987456677860925, 0.4230209496786439, 0.23316901641682197, 0.2286217336890889, 0.24130199955332188, 0.2437785367442964, 0.2052526073444757, 0.2667148784978637, 0.28824923952489767, 0.29891987307610957, 0.24173804439876356, 0.19096880691337936, 0.18985747017176002, 0.1839402383351869, 0.20364117434398832, 0.1927544400611234, 0.18655813134205534, 0.18883736779323979, 0.19218212381079047, 0.18413869491209955, 0.21978585604126688, 0.18651804074083767, 0.18042444841193317, 0.1999251626299079, 0.18309616015145036, 0.21281474619116347, 0.18459401772900985, 0.17716602568515682, 0.1769365424052054, 0.175824687973539, 0.11348128174883765, 0.14879583861039114, 0.8399469513191175, 0.20032320186750552, 0.1845018431380675, 0.644234762972103, 0.16877424427070709, 0.5234161461096223, 0.420408738193788, 0.15433354947903066, 0.45575489489079357, 0.20538497368712993, 0.16492600914972777, 0.3807698583159601, 0.10475168172856208, 0.10474662896527065, 0.6248143033007363, 0.1706836988014253, 0.19045481747276138, 0.17588186005573314, 0.1758387678524579, 0.16604729915246297, 0.16683023008952347, 0.17714423853764916, 0.1934743387217398, 0.17263302280024595, 0.08174433099464018, 0.09172045693160558, 0.08643141013127442, 0.07791810127534538, 0.07587583522074581, 0.08253282336482426, 0.0960538569823346, 0.07602465826530747, 0.07692343377021649]}, "mutation_prompt": null}
