{"id": "6a5c0cc9-7903-4486-8096-be9eeda9bed5", "solution": "import numpy as np\n\nclass HFADE:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n\n    def __call__(self, func):\n        pop_size = 30\n        alpha = 0.1\n        beta_min = 0.2\n        beta_max = 1.0\n        scale = 0.01\n        \n        def levy_flight():\n            beta = beta_min + (beta_max - beta_min) * np.random.rand()\n            b = np.random.normal(0.0, scale, self.dim)\n            l = np.random.normal(0.0, 1.0, self.dim)\n            levy = b / np.power(np.abs(l), 1.0 / beta)\n            return levy\n        \n        def de(x, a, b, c):\n            return np.clip(a + beta_min * (b - c), -5.0, 5.0)\n        \n        def firefly_swarm():\n            swarm = np.random.uniform(-5.0, 5.0, (pop_size, self.dim))\n            best_point = swarm[np.argmin([func(p) for p in swarm])]\n            \n            for _ in range(self.budget):\n                for i in range(pop_size):\n                    for j in range(pop_size):\n                        if func(swarm[j]) < func(swarm[i]):\n                            step = alpha * levy_flight()\n                            swarm[i] += step * (swarm[j] - swarm[i])\n                            swarm[i] = np.array([de(swarm[i, d], swarm[i, d], best_point[d], swarm[j, d]) for d in range(self.dim)])\n                \n            return best_point\n\n        return firefly_swarm()", "name": "HFADE", "description": "A novel Hybrid Firefly Algorithm with Differential Evolution (HFA-DE) that combines the exploration ability of fireflies with the exploitation capability of differential evolution for effective global optimization.", "configspace": "", "generation": 0, "fitness": 0.05458307405021764, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.09351607250159633, 0.07821937336477491, 0.10736681077716204, 0.12062300709575069, 0.10107647860202162, 0.09049776125355913, 0.09479761402545794, 0.08339301434044888, 0.10097344528177421, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.009121968274595882, 0.015527270053940279, 0.005375109906600173, 0.020583168880084157, 0.0052408467479874155, 0.008729630465508453, 0.02093002016504364, 0.010063187238761206, 0.01342501843669397, 0.0009514085193078614, 0.0024424912735269144, 0.0025158924958356144, 0.01959972157639278, 0.0004952459975243739, 9.999999999998899e-05, 9.999999999998899e-05, 0.007444166615940828, 9.999999999998899e-05, 0.07417167497234167, 0.09522519980867805, 0.07491073879193177, 0.09155050051809999, 0.07504081786508598, 0.07721185106334649, 0.3303040526529931, 0.08760041626825299, 0.09602188777822485, 0.0645573734408641, 0.023533801230515516, 0.0057277033587269655, 0.045068156828868444, 0.0012821237226069426, 0.11224620873822422, 9.999999999998899e-05, 0.02325610120479482, 9.999999999998899e-05, 0.10027683525177622, 0.038801813661096474, 0.052233822106523387, 0.10401032962794887, 0.04163650525473617, 0.0043721895322867965, 0.05587386679859496, 0.07388416372219964, 0.03579808735634393, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.008263025289045989, 0.0008720507708512848, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0034388567283509808, 0.010907586274455427, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.11430451071582626, 0.13879659513922615, 0.14946398244818082, 0.1338579782067052, 0.10372755752170693, 0.10142819575684847, 0.16112956940342849, 0.12052443573107807, 0.1210557193025883, 0.01994920940090983, 0.004412001295834633, 0.005563849623510531, 0.014073268948736617, 9.999999999998899e-05, 0.029580643160796338, 0.009198458545248811, 0.004904534588471732, 0.03186847453546582, 0.10372784233635235, 0.10492155555720784, 0.10139815664527874, 0.12530249677521788, 0.10885999556781667, 0.12267071625082393, 0.09948813842960991, 0.1439929779000202, 0.12753962112190598, 0.14234035559539004, 0.11717279939106284, 0.14352810184653642, 0.14029567087442552, 0.1172422764199691, 0.13612578407875786, 0.12695552655468068, 0.17377774300845283, 0.12180724950166455, 0.05696510388189435, 0.06542764732884243, 0.0663171531991229, 0.07959156374332599, 0.06592749337484005, 0.06897391222610605, 0.08647096108074892, 0.0997711199450243, 0.07434773309163445, 0.12460230936070615, 0.10106542887940317, 0.13345086981233123, 0.1143912271826466, 0.10901090972019933, 0.1107049886689272, 0.12245976138762271, 0.09704248979086039, 0.1261963614278906, 0.011905396365214593, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.00640176890622457, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.1118462165152112, 0.11172721249928141, 0.1512802731019376, 0.09426796704159657, 0.1432285260723909, 0.1647255487244612, 0.1133720200409376, 0.10394223270704028, 0.12304163041605021, 0.11040265245322212, 0.11528385104351602, 0.07458907624483602, 0.06473456809240796, 0.10008132984991025, 0.0780970288791113, 0.08881089537437148, 0.09495308031014815, 0.060363095764737085, 0.1654791814148764, 0.19331633226243583, 0.18114998377691127, 0.17919609520907742, 0.16795027838392051, 0.1541412895373454, 0.1669307288463231, 0.16185285489346823, 0.1766195977082432, 0.02809810749022834, 0.023849203251603113, 0.0358979056792339, 0.03584061285729934, 0.03928424519967688, 0.037799861795128176, 0.026174790444585594, 0.009858777926756379, 0.031560286977371343]}, "mutation_prompt": null}
{"id": "b4d86adc-38ea-4012-809c-e1ea536e6892", "solution": "import numpy as np\n\nclass HFADE:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n\n    def __call__(self, func):\n        pop_size = 30\n        alpha = 0.1\n        beta_min = 0.2\n        beta_max = 1.0\n        scale = 0.01\n        \n        def levy_flight():\n            beta = beta_min + (beta_max - beta_min) * np.random.rand()\n            b = np.random.normal(0.0, scale, self.dim)\n            l = np.random.normal(0.0, 1.0, self.dim)\n            levy = b / np.power(np.abs(l), 1.0 / beta)\n            return levy\n        \n        def de(x, a, b, c):\n            return np.clip(a + beta_min * (b - c), -5.0, 5.0)\n        \n        def firefly_swarm():\n            swarm = np.random.uniform(-5.0, 5.0, (pop_size, self.dim))\n            best_point = swarm[np.argmin([func(p) for p in swarm])]\n            \n            for _ in range(self.budget):\n                for i in range(pop_size):\n                    for j in range(pop_size):\n                        if func(swarm[j]) < func(swarm[i]):\n                            step = alpha * levy_flight()\n                            swarm[i] += step * (swarm[j] - swarm[i])\n                            swarm[i] = np.array([de(swarm[i, d], swarm[i, d], best_point[d], swarm[j, d]) for d in range(self.dim)])\n                \n            return best_point\n\n        return firefly_swarm()", "name": "HFADE", "description": "A novel Hybrid Firefly Algorithm with Differential Evolution (HFA-DE) that combines the exploration ability of fireflies with the exploitation capability of differential evolution for effective global optimization.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "6a5c0cc9-7903-4486-8096-be9eeda9bed5", "metadata": {"aucs": [0.09351607250159633, 0.07821937336477491, 0.10736681077716204, 0.12062300709575069, 0.10107647860202162, 0.09049776125355913, 0.09479761402545794, 0.08339301434044888, 0.10097344528177421, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.009121968274595882, 0.015527270053940279, 0.005375109906600173, 0.020583168880084157, 0.0052408467479874155, 0.008729630465508453, 0.02093002016504364, 0.010063187238761206, 0.01342501843669397, 0.0009514085193078614, 0.0024424912735269144, 0.0025158924958356144, 0.01959972157639278, 0.0004952459975243739, 9.999999999998899e-05, 9.999999999998899e-05, 0.007444166615940828, 9.999999999998899e-05, 0.07417167497234167, 0.09522519980867805, 0.07491073879193177, 0.09155050051809999, 0.07504081786508598, 0.07721185106334649, 0.3303040526529931, 0.08760041626825299, 0.09602188777822485, 0.0645573734408641, 0.023533801230515516, 0.0057277033587269655, 0.045068156828868444, 0.0012821237226069426, 0.11224620873822422, 9.999999999998899e-05, 0.02325610120479482, 9.999999999998899e-05, 0.10027683525177622, 0.038801813661096474, 0.052233822106523387, 0.10401032962794887, 0.04163650525473617, 0.0043721895322867965, 0.05587386679859496, 0.07388416372219964, 0.03579808735634393, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.008263025289045989, 0.0008720507708512848, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0034388567283509808, 0.010907586274455427, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.11430451071582626, 0.13879659513922615, 0.14946398244818082, 0.1338579782067052, 0.10372755752170693, 0.10142819575684847, 0.16112956940342849, 0.12052443573107807, 0.1210557193025883, 0.01994920940090983, 0.004412001295834633, 0.005563849623510531, 0.014073268948736617, 9.999999999998899e-05, 0.029580643160796338, 0.009198458545248811, 0.004904534588471732, 0.03186847453546582, 0.10372784233635235, 0.10492155555720784, 0.10139815664527874, 0.12530249677521788, 0.10885999556781667, 0.12267071625082393, 0.09948813842960991, 0.1439929779000202, 0.12753962112190598, 0.14234035559539004, 0.11717279939106284, 0.14352810184653642, 0.14029567087442552, 0.1172422764199691, 0.13612578407875786, 0.12695552655468068, 0.17377774300845283, 0.12180724950166455, 0.05696510388189435, 0.06542764732884243, 0.0663171531991229, 0.07959156374332599, 0.06592749337484005, 0.06897391222610605, 0.08647096108074892, 0.0997711199450243, 0.07434773309163445, 0.12460230936070615, 0.10106542887940317, 0.13345086981233123, 0.1143912271826466, 0.10901090972019933, 0.1107049886689272, 0.12245976138762271, 0.09704248979086039, 0.1261963614278906, 0.011905396365214593, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.00640176890622457, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.1118462165152112, 0.11172721249928141, 0.1512802731019376, 0.09426796704159657, 0.1432285260723909, 0.1647255487244612, 0.1133720200409376, 0.10394223270704028, 0.12304163041605021, 0.11040265245322212, 0.11528385104351602, 0.07458907624483602, 0.06473456809240796, 0.10008132984991025, 0.0780970288791113, 0.08881089537437148, 0.09495308031014815, 0.060363095764737085, 0.1654791814148764, 0.19331633226243583, 0.18114998377691127, 0.17919609520907742, 0.16795027838392051, 0.1541412895373454, 0.1669307288463231, 0.16185285489346823, 0.1766195977082432, 0.02809810749022834, 0.023849203251603113, 0.0358979056792339, 0.03584061285729934, 0.03928424519967688, 0.037799861795128176, 0.026174790444585594, 0.009858777926756379, 0.031560286977371343]}, "mutation_prompt": null}
