{"id": "3a7e796d-749f-467e-a342-41165e75e43f", "solution": "import numpy as np\n\nclass DynamicEvoAlgorithm:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.population_size = 10\n        self.crossover_rate = 0.9\n\n    def __call__(self, func):\n        population = np.random.uniform(-5.0, 5.0, (self.population_size, self.dim))\n        fitness_values = [func(individual) for individual in population]\n        \n        for _ in range(self.budget // self.population_size):\n            new_population = []\n            for i in range(self.population_size):\n                idxs = np.random.choice(range(self.population_size), 3, replace=False)\n                mutant = population[idxs[0]] + 0.5 * (population[idxs[1]] - population[idxs[2]])\n                crossover_mask = np.random.rand(self.dim) < self.crossover_rate\n                offspring = np.where(crossover_mask, mutant, population[i])\n                new_population.append(offspring)\n            \n            new_fitness_values = [func(individual) for individual in new_population]\n            combined_population = list(zip(population, fitness_values)) + list(zip(new_population, new_fitness_values))\n            combined_population.sort(key=lambda x: x[1])\n            population = [ind for ind, _ in combined_population[:self.population_size]]\n            fitness_values = [fit for _, fit in combined_population[:self.population_size]]\n\n        return population[np.argmin(fitness_values)]", "name": "DynamicEvoAlgorithm", "description": "An Evolutionary Algorithm with Dynamic Population and Adaptive Crossover Rate for black box optimization.", "configspace": "", "generation": 0, "fitness": 0.15614889547299352, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.3696196663227188, 0.27901207553691687, 0.4480447742775303, 0.1137696733803627, 0.18346643405017182, 0.08413978010331902, 0.23752213466597027, 0.4816115469186931, 0.3251555201421322, 0.024906985746590227, 0.01348122024091114, 0.11613347290411691, 9.999999999998899e-05, 0.14630222711604768, 0.0654403067969086, 9.999999999998899e-05, 9.999999999998899e-05, 0.07626320404494236, 0.1534402808013947, 0.1161594181207718, 0.11112302290458542, 0.11272140905035088, 0.13605643237018683, 0.11188607972346687, 0.0981956298180654, 0.11156376015099045, 0.13770216246122524, 0.07546283612902949, 0.08483246327485106, 0.11199020267117554, 0.10431814727339639, 0.11146969241650295, 0.07546961298989885, 0.11336790170859568, 0.05934063912292076, 0.07156284429216087, 0.990746352672585, 0.12208557531424669, 0.19569098243081895, 0.0825911981465357, 0.9886606209253863, 0.08854195205729753, 0.1264102760387017, 0.26113036198258865, 0.06605547970251335, 0.04548704079751875, 0.03558203362206713, 0.18361836680406285, 0.10800136141742955, 0.062264999841185054, 0.013158525666869925, 0.05373581342961842, 0.0565820611889114, 0.061909104998110864, 0.16766357865257597, 0.11338797288312652, 0.20485773431157472, 0.3418544177406525, 0.2152125854465733, 0.2115805622187643, 0.09853142873909781, 0.41196340221542593, 0.23908035215580437, 0.15899098654512822, 0.03777925816677308, 0.14817924022050866, 0.1518189727675643, 0.12201806459888032, 9.999999999998899e-05, 0.11161608914963994, 0.0860060200430276, 0.1414263796076901, 0.20068973462374828, 0.13567748246136058, 0.15225463607426304, 0.1300023993028141, 0.13200293679797892, 0.004373195866204549, 0.16415295237308924, 0.1362975220323025, 0.1329801666407513, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.004562421641795988, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.19533938809474216, 0.08147858311883571, 0.10187711082867668, 0.055731964034293924, 0.06293833731401188, 0.0701630456216803, 0.06943860551531489, 0.08577740057345906, 0.1762191098606125, 9.999999999998899e-05, 0.09722708113285794, 0.2506715420240089, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.14138188601955481, 0.06702696402568542, 9.999999999998899e-05, 0.11635189639324561, 9.999999999998899e-05, 0.007664499596917951, 0.0512272738311349, 0.04699772447578521, 0.4240144711812769, 0.3986227496201935, 0.4456152301126972, 0.1316321318362509, 0.18396912262619136, 0.19873796970346425, 0.2921649746112228, 0.25601253253803713, 0.2086802944344982, 0.0773362387654366, 0.19412258659567339, 0.032233135291158566, 0.11561771445151425, 0.1297109114003775, 0.10659180259354051, 0.1548416008399015, 0.1564642071421054, 0.09337380601744294, 0.1341682042078457, 0.35359028603907583, 0.4419405150559206, 0.13709587915739285, 0.16378402311133067, 0.21584807836088815, 0.18853320451789124, 0.28258319434199186, 0.15525253786546778, 0.17203801664344887, 0.32769844137509585, 0.2738018317566986, 0.30937634859201535, 0.25767988906787886, 0.4253091138918409, 0.2254415050256534, 0.2596490130234309, 0.2861612566054429, 0.13970950904323143, 0.2708821133885395, 0.16501847216792576, 0.24684535660138407, 0.14753620098600417, 0.2812868671990345, 0.2444747953251385, 0.3461302531947267, 0.259658218751712, 0.17114759350785258, 0.2014298030044419, 0.2820413783010829, 0.1970561751436144, 0.17340680704165623, 0.16612083543279677, 0.1943976632008555, 0.18761219285070552, 0.22224864554301793, 0.19830392355645543, 0.1881490567452394, 0.19616559091308805, 0.21960139764232767, 0.21685546063085404, 0.19896855932883983, 0.18845380296783176, 0.18879339939192064, 0.20724456118446233, 0.15049143994973269, 0.13470781631336448, 0.1590714733859402, 0.36626261269692517, 0.16932466331829077, 0.16675332115526653, 0.1589955301000362, 0.10987950919371581, 0.14957184604857432, 0.2801060620073488, 0.16437936350174098, 0.22793667154840436, 0.20889755652620268, 0.16672569208243926, 0.17477634137407583, 0.14244658001115984, 0.1041903574724432, 0.15702582767902384, 0.19346334849348334, 0.17133246513421163, 0.18015442082654065, 0.19711496899980174, 0.16723656864415748, 0.18672797035772692, 0.20472788483817284, 0.14623007801393617, 0.1847736910745137, 0.08275161392342434, 0.06247311735087091, 0.058552520260108376, 0.10092105010560048, 0.08416081234060058, 0.08665989033275145, 0.08677911869495458, 0.08454231642248555, 0.11032890024225739]}, "mutation_prompt": null}
{"id": "bcaf94d9-30cd-4c75-b32b-93a72ee2a17c", "solution": "import numpy as np\n\nclass DynamicEvoAlgorithm:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.population_size = 10\n        self.crossover_rate = 0.9\n\n    def __call__(self, func):\n        population = np.random.uniform(-5.0, 5.0, (self.population_size, self.dim))\n        fitness_values = [func(individual) for individual in population]\n        \n        for _ in range(self.budget // self.population_size):\n            new_population = []\n            for i in range(self.population_size):\n                idxs = np.random.choice(range(self.population_size), 3, replace=False)\n                mutant = population[idxs[0]] + 0.5 * (population[idxs[1]] - population[idxs[2]])\n                crossover_mask = np.random.rand(self.dim) < self.crossover_rate\n                offspring = np.where(crossover_mask, mutant, population[i])\n                new_population.append(offspring)\n            \n            new_fitness_values = [func(individual) for individual in new_population]\n            combined_population = list(zip(population, fitness_values)) + list(zip(new_population, new_fitness_values))\n            combined_population.sort(key=lambda x: x[1])\n            population = [ind for ind, _ in combined_population[:self.population_size]]\n            fitness_values = [fit for _, fit in combined_population[:self.population_size]]\n\n        return population[np.argmin(fitness_values)]", "name": "DynamicEvoAlgorithm", "description": "An Evolutionary Algorithm with Dynamic Population and Adaptive Crossover Rate for black box optimization.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "An exception occurred: IndexError('list index out of range').", "error": "IndexError('list index out of range')", "parent_id": "3a7e796d-749f-467e-a342-41165e75e43f", "metadata": {"aucs": [0.3696196663227188, 0.27901207553691687, 0.4480447742775303, 0.1137696733803627, 0.18346643405017182, 0.08413978010331902, 0.23752213466597027, 0.4816115469186931, 0.3251555201421322, 0.024906985746590227, 0.01348122024091114, 0.11613347290411691, 9.999999999998899e-05, 0.14630222711604768, 0.0654403067969086, 9.999999999998899e-05, 9.999999999998899e-05, 0.07626320404494236, 0.1534402808013947, 0.1161594181207718, 0.11112302290458542, 0.11272140905035088, 0.13605643237018683, 0.11188607972346687, 0.0981956298180654, 0.11156376015099045, 0.13770216246122524, 0.07546283612902949, 0.08483246327485106, 0.11199020267117554, 0.10431814727339639, 0.11146969241650295, 0.07546961298989885, 0.11336790170859568, 0.05934063912292076, 0.07156284429216087, 0.990746352672585, 0.12208557531424669, 0.19569098243081895, 0.0825911981465357, 0.9886606209253863, 0.08854195205729753, 0.1264102760387017, 0.26113036198258865, 0.06605547970251335, 0.04548704079751875, 0.03558203362206713, 0.18361836680406285, 0.10800136141742955, 0.062264999841185054, 0.013158525666869925, 0.05373581342961842, 0.0565820611889114, 0.061909104998110864, 0.16766357865257597, 0.11338797288312652, 0.20485773431157472, 0.3418544177406525, 0.2152125854465733, 0.2115805622187643, 0.09853142873909781, 0.41196340221542593, 0.23908035215580437, 0.15899098654512822, 0.03777925816677308, 0.14817924022050866, 0.1518189727675643, 0.12201806459888032, 9.999999999998899e-05, 0.11161608914963994, 0.0860060200430276, 0.1414263796076901, 0.20068973462374828, 0.13567748246136058, 0.15225463607426304, 0.1300023993028141, 0.13200293679797892, 0.004373195866204549, 0.16415295237308924, 0.1362975220323025, 0.1329801666407513, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.004562421641795988, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.19533938809474216, 0.08147858311883571, 0.10187711082867668, 0.055731964034293924, 0.06293833731401188, 0.0701630456216803, 0.06943860551531489, 0.08577740057345906, 0.1762191098606125, 9.999999999998899e-05, 0.09722708113285794, 0.2506715420240089, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.14138188601955481, 0.06702696402568542, 9.999999999998899e-05, 0.11635189639324561, 9.999999999998899e-05, 0.007664499596917951, 0.0512272738311349, 0.04699772447578521, 0.4240144711812769, 0.3986227496201935, 0.4456152301126972, 0.1316321318362509, 0.18396912262619136, 0.19873796970346425, 0.2921649746112228, 0.25601253253803713, 0.2086802944344982, 0.0773362387654366, 0.19412258659567339, 0.032233135291158566, 0.11561771445151425, 0.1297109114003775, 0.10659180259354051, 0.1548416008399015, 0.1564642071421054, 0.09337380601744294, 0.1341682042078457, 0.35359028603907583, 0.4419405150559206, 0.13709587915739285, 0.16378402311133067, 0.21584807836088815, 0.18853320451789124, 0.28258319434199186, 0.15525253786546778, 0.17203801664344887, 0.32769844137509585, 0.2738018317566986, 0.30937634859201535, 0.25767988906787886, 0.4253091138918409, 0.2254415050256534, 0.2596490130234309, 0.2861612566054429, 0.13970950904323143, 0.2708821133885395, 0.16501847216792576, 0.24684535660138407, 0.14753620098600417, 0.2812868671990345, 0.2444747953251385, 0.3461302531947267, 0.259658218751712, 0.17114759350785258, 0.2014298030044419, 0.2820413783010829, 0.1970561751436144, 0.17340680704165623, 0.16612083543279677, 0.1943976632008555, 0.18761219285070552, 0.22224864554301793, 0.19830392355645543, 0.1881490567452394, 0.19616559091308805, 0.21960139764232767, 0.21685546063085404, 0.19896855932883983, 0.18845380296783176, 0.18879339939192064, 0.20724456118446233, 0.15049143994973269, 0.13470781631336448, 0.1590714733859402, 0.36626261269692517, 0.16932466331829077, 0.16675332115526653, 0.1589955301000362, 0.10987950919371581, 0.14957184604857432, 0.2801060620073488, 0.16437936350174098, 0.22793667154840436, 0.20889755652620268, 0.16672569208243926, 0.17477634137407583, 0.14244658001115984, 0.1041903574724432, 0.15702582767902384, 0.19346334849348334, 0.17133246513421163, 0.18015442082654065, 0.19711496899980174, 0.16723656864415748, 0.18672797035772692, 0.20472788483817284, 0.14623007801393617, 0.1847736910745137, 0.08275161392342434, 0.06247311735087091, 0.058552520260108376, 0.10092105010560048, 0.08416081234060058, 0.08665989033275145, 0.08677911869495458, 0.08454231642248555, 0.11032890024225739]}, "mutation_prompt": null}
