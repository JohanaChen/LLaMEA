{"id": "aee575d1-bb83-4170-b7af-e8d6b6f0f8af", "solution": "import numpy as np\n\nclass QuantumHarmonySearch:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.harmony_memory = np.random.uniform(-5, 5, (budget, dim))\n        self.harmony_memory_consideration_rate = 0.95\n        self.bandwidth = 0.01\n        \n    def __call__(self, func):\n        for _ in range(self.budget):\n            new_solution = np.zeros(self.dim)\n            for d in range(self.dim):\n                if np.random.uniform() < self.harmony_memory_consideration_rate:\n                    new_solution[d] = self.harmony_memory[np.random.randint(self.budget)][d]\n                else:\n                    new_solution[d] = np.random.uniform(-5, 5)\n                if np.random.uniform() < self.bandwidth:\n                    new_solution[d] += np.random.normal(0, 1)\n            if func(new_solution) < func(self.harmony_memory[-1]):\n                self.harmony_memory[-1] = new_solution\n                self.harmony_memory = self.harmony_memory[np.argsort([func(sol) for sol in self.harmony_memory])]\n        return self.harmony_memory[0]", "name": "QuantumHarmonySearch", "description": "A novel metaheuristic algorithm called Quantum Harmony Search (QHS) that combines quantum-inspired operators with the Harmony Search algorithm to efficiently explore and exploit the search space.", "configspace": "", "generation": 0, "fitness": 0.0913839149989742, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.17757928415602053, 0.17575397565555562, 0.17005811068878518, 0.17168479137909687, 0.18810148383102454, 0.17557820936337998, 0.17853218534026039, 0.16272479037372323, 0.19002450008613747, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.042026743609039685, 0.046529939915608165, 0.03683495922995916, 0.04101926048678728, 0.037312911435916085, 0.03948023545883572, 0.052832173927772064, 0.06700968355571746, 0.058697959752307516, 0.025723884069471903, 0.032498640406570356, 0.048134712890314235, 0.026707465451354384, 0.049256295938478245, 0.05697615623855268, 0.037669292071820015, 0.03990438314797795, 0.029814722597398813, 0.0874103400647045, 0.07415928260010152, 0.09084826214474306, 0.08821105012213792, 0.08031074385691028, 0.08635801513230967, 0.08214952382499618, 0.08618988619160117, 0.07930314970745711, 0.07956803323336714, 0.08041758554917722, 0.10169819758183984, 0.06781535700304142, 0.06225128420433812, 0.06127909879417914, 0.09464601946966156, 0.06095560386169763, 0.09990373396969643, 0.12542905802593474, 0.19300766514440593, 0.1476018745101575, 0.10464712274617538, 0.09682896132841556, 0.13119070748591877, 0.1258447004283305, 0.13681759466789645, 0.11597311261395693, 0.004306812682238537, 0.004556434473971471, 0.006135122764173162, 0.004152444623262808, 9.999999999998899e-05, 0.00043290697986964055, 9.999999999998899e-05, 9.999999999998899e-05, 0.0198680208659765, 0.008094661257066926, 0.06954064325917297, 9.999999999998899e-05, 0.011966607354852221, 0.035332806043050335, 0.011851606717287022, 0.017989636894567007, 0.006564729640205047, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.052923383700472004, 0.06851752281593038, 0.04526471128876741, 0.06940319587850263, 0.03257561955378663, 0.055757365452125285, 0.05634229771881105, 0.05007345650130268, 0.0642009244907471, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0067482245607907165, 9.999999999998899e-05, 0.2207747527501891, 0.19297130452238342, 0.19492277921402545, 0.20168138810536673, 0.18919652991677982, 0.20716944366722412, 0.1994184459029309, 0.1785430116441512, 0.20387817373518946, 0.04981332335680855, 0.042495165125572165, 0.04399755988726317, 0.043170459610778145, 0.040436389620021496, 0.0459998166282749, 0.07324504181335756, 0.04396324109199845, 0.052274244422367167, 0.13752129367883936, 0.1273552379885734, 0.13703628444813398, 0.1412653844816989, 0.14097253728047054, 0.130032848067011, 0.150318315156718, 0.14858922216997328, 0.13372670938505327, 0.17177329584563372, 0.16053867300280433, 0.1759107012478669, 0.16729567218341268, 0.18212405293014322, 0.17691999182785711, 0.16543884849976764, 0.17373271486219433, 0.15369860217624942, 0.11392484841169248, 0.10380101252338081, 0.11836841244750163, 0.11201236581177176, 0.13608173455706496, 0.11668753436349, 0.10549920427659343, 0.12369369024677523, 0.12263867357420533, 0.14093857620836603, 0.1624030013417096, 0.15825123683404418, 0.15979767272498446, 0.1450124064722511, 0.16234151087477056, 0.15531397464732322, 0.17352346568024202, 0.18275077491092995, 0.14191959121740005, 0.14584938604755793, 0.14257438881905604, 0.14098597531777268, 0.1440858041752554, 0.1527902130303268, 0.14074241999769133, 0.14172381942597645, 0.16191523230779892, 0.18398534734980165, 0.1667384582247725, 0.16630987293904798, 0.1595524375449382, 0.15101974202284385, 0.1411615076558974, 0.16136951649661735, 0.1631242280744687, 0.1764658286678008, 0.1576521621874537, 0.1583019908504646, 0.1647045992026258, 0.15023400394430575, 0.18882720276225007, 0.1604212496449039, 0.16852783622167644, 0.1733132952444888, 0.20283141036702224, 0.17571145277147793, 0.19093219299267117, 0.17560625832001187, 0.1868098253913255, 0.21387291160051258, 0.18379878603604316, 0.17595903924911582, 0.1893069277385484, 0.20564677110133023, 0.058292190951268474, 0.05551931225752538, 0.06563966598547688, 0.0516017115278824, 0.059336308689276085, 0.05587153262224198, 0.07521553604150599, 0.05490519083582679, 0.06064910293404968]}, "mutation_prompt": null}
{"id": "9bd4c9fa-82f0-4688-8ea1-77396b2a69ad", "solution": "import numpy as np\n\nclass QuantumHarmonySearch:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.harmony_memory = np.random.uniform(-5, 5, (budget, dim))\n        self.harmony_memory_consideration_rate = 0.95\n        self.bandwidth = 0.01\n        \n    def __call__(self, func):\n        for _ in range(self.budget):\n            new_solution = np.zeros(self.dim)\n            for d in range(self.dim):\n                if np.random.uniform() < self.harmony_memory_consideration_rate:\n                    new_solution[d] = self.harmony_memory[np.random.randint(self.budget)][d]\n                else:\n                    new_solution[d] = np.random.uniform(-5, 5)\n                if np.random.uniform() < self.bandwidth:\n                    new_solution[d] += np.random.normal(0, 1)\n            if func(new_solution) < func(self.harmony_memory[-1]):\n                self.harmony_memory[-1] = new_solution\n                self.harmony_memory = self.harmony_memory[np.argsort([func(sol) for sol in self.harmony_memory])]\n        return self.harmony_memory[0]", "name": "QuantumHarmonySearch", "description": "A novel metaheuristic algorithm called Quantum Harmony Search (QHS) that combines quantum-inspired operators with the Harmony Search algorithm to efficiently explore and exploit the search space.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "aee575d1-bb83-4170-b7af-e8d6b6f0f8af", "metadata": {"aucs": [0.17757928415602053, 0.17575397565555562, 0.17005811068878518, 0.17168479137909687, 0.18810148383102454, 0.17557820936337998, 0.17853218534026039, 0.16272479037372323, 0.19002450008613747, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.042026743609039685, 0.046529939915608165, 0.03683495922995916, 0.04101926048678728, 0.037312911435916085, 0.03948023545883572, 0.052832173927772064, 0.06700968355571746, 0.058697959752307516, 0.025723884069471903, 0.032498640406570356, 0.048134712890314235, 0.026707465451354384, 0.049256295938478245, 0.05697615623855268, 0.037669292071820015, 0.03990438314797795, 0.029814722597398813, 0.0874103400647045, 0.07415928260010152, 0.09084826214474306, 0.08821105012213792, 0.08031074385691028, 0.08635801513230967, 0.08214952382499618, 0.08618988619160117, 0.07930314970745711, 0.07956803323336714, 0.08041758554917722, 0.10169819758183984, 0.06781535700304142, 0.06225128420433812, 0.06127909879417914, 0.09464601946966156, 0.06095560386169763, 0.09990373396969643, 0.12542905802593474, 0.19300766514440593, 0.1476018745101575, 0.10464712274617538, 0.09682896132841556, 0.13119070748591877, 0.1258447004283305, 0.13681759466789645, 0.11597311261395693, 0.004306812682238537, 0.004556434473971471, 0.006135122764173162, 0.004152444623262808, 9.999999999998899e-05, 0.00043290697986964055, 9.999999999998899e-05, 9.999999999998899e-05, 0.0198680208659765, 0.008094661257066926, 0.06954064325917297, 9.999999999998899e-05, 0.011966607354852221, 0.035332806043050335, 0.011851606717287022, 0.017989636894567007, 0.006564729640205047, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.052923383700472004, 0.06851752281593038, 0.04526471128876741, 0.06940319587850263, 0.03257561955378663, 0.055757365452125285, 0.05634229771881105, 0.05007345650130268, 0.0642009244907471, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0067482245607907165, 9.999999999998899e-05, 0.2207747527501891, 0.19297130452238342, 0.19492277921402545, 0.20168138810536673, 0.18919652991677982, 0.20716944366722412, 0.1994184459029309, 0.1785430116441512, 0.20387817373518946, 0.04981332335680855, 0.042495165125572165, 0.04399755988726317, 0.043170459610778145, 0.040436389620021496, 0.0459998166282749, 0.07324504181335756, 0.04396324109199845, 0.052274244422367167, 0.13752129367883936, 0.1273552379885734, 0.13703628444813398, 0.1412653844816989, 0.14097253728047054, 0.130032848067011, 0.150318315156718, 0.14858922216997328, 0.13372670938505327, 0.17177329584563372, 0.16053867300280433, 0.1759107012478669, 0.16729567218341268, 0.18212405293014322, 0.17691999182785711, 0.16543884849976764, 0.17373271486219433, 0.15369860217624942, 0.11392484841169248, 0.10380101252338081, 0.11836841244750163, 0.11201236581177176, 0.13608173455706496, 0.11668753436349, 0.10549920427659343, 0.12369369024677523, 0.12263867357420533, 0.14093857620836603, 0.1624030013417096, 0.15825123683404418, 0.15979767272498446, 0.1450124064722511, 0.16234151087477056, 0.15531397464732322, 0.17352346568024202, 0.18275077491092995, 0.14191959121740005, 0.14584938604755793, 0.14257438881905604, 0.14098597531777268, 0.1440858041752554, 0.1527902130303268, 0.14074241999769133, 0.14172381942597645, 0.16191523230779892, 0.18398534734980165, 0.1667384582247725, 0.16630987293904798, 0.1595524375449382, 0.15101974202284385, 0.1411615076558974, 0.16136951649661735, 0.1631242280744687, 0.1764658286678008, 0.1576521621874537, 0.1583019908504646, 0.1647045992026258, 0.15023400394430575, 0.18882720276225007, 0.1604212496449039, 0.16852783622167644, 0.1733132952444888, 0.20283141036702224, 0.17571145277147793, 0.19093219299267117, 0.17560625832001187, 0.1868098253913255, 0.21387291160051258, 0.18379878603604316, 0.17595903924911582, 0.1893069277385484, 0.20564677110133023, 0.058292190951268474, 0.05551931225752538, 0.06563966598547688, 0.0516017115278824, 0.059336308689276085, 0.05587153262224198, 0.07521553604150599, 0.05490519083582679, 0.06064910293404968]}, "mutation_prompt": null}
