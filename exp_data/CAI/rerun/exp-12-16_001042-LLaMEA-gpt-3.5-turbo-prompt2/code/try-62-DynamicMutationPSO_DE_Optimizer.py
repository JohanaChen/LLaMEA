class DynamicMutationPSO_DE_Optimizer(EnhancedOppositionBasedExplorationPSO_DE_Optimizer):
    def __call__(self, func):
        ...
        
        for _ in range(self.budget):
            ...
                mutation_factor = np.clip(np.random.normal(self.mutation_factor, 0.1), 0.1, 0.9) + 0.1*(new_score - pbest_scores[i])
            ...