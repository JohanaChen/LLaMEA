{"id": "2231b8cd-f368-4e97-8fa4-10c77eb31fa6", "solution": "import numpy as np\n\nclass HybridPSOSA:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n    \n    def __call__(self, func):\n        def pso(x, v, pbest, gbest, c1, c2):\n            for i in range(len(x)):\n                r1, r2 = np.random.random(), np.random.random()\n                v[i] = 0.5 * v[i] + c1 * r1 * (pbest[i] - x[i]) + c2 * r2 * (gbest[i] - x[i])\n                x[i] = np.clip(x[i] + v[i], -5.0, 5.0)\n            return x, v\n        \n        def sa(x, best_x, T, alpha):\n            new_x = x + np.random.uniform(-1, 1, len(x)) * T\n            new_x = np.clip(new_x, -5.0, 5.0)\n            old_cost, new_cost = func(x), func(new_x)\n            if new_cost < old_cost or np.random.rand() < np.exp((old_cost - new_cost) / T):\n                return new_x if new_cost < func(best_x) else best_x\n            return x\n        \n        x = np.random.uniform(-5.0, 5.0, self.dim)\n        v = np.zeros(self.dim)\n        pbest = x.copy()\n        gbest = x.copy()\n        \n        for _ in range(self.budget):\n            c1, c2 = 2.0, 2.0\n            x, v = pso(x, v, pbest, gbest, c1, c2)\n            pbest = x if func(x) < func(pbest) else pbest\n            gbest = x if func(x) < func(gbest) else gbest\n            T = 5.0 * (1 - _ / self.budget)\n            x = sa(x, gbest, T, 0.95)\n        \n        return gbest", "name": "HybridPSOSA", "description": "A novel hybrid algorithm combining Particle Swarm Optimization (PSO) and Simulated Annealing (SA) for efficient black box optimization.", "configspace": "", "generation": 0, "fitness": 0.05946195232635099, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.1111910349327403, 0.10082327435189686, 0.10997929099261583, 0.06463087806097678, 0.09691379416475265, 0.12626062562131068, 0.11036533949943628, 0.1568506237994457, 0.12213479933023774, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.006842493070743139, 0.007776228951849595, 0.017147367566589855, 9.999999999998899e-05, 0.014167180442061778, 9.999999999998899e-05, 0.01760938918656685, 0.0010715442508028028, 0.020785860232170883, 0.010927351026432941, 9.999999999998899e-05, 0.01985458963046771, 0.011944598112335392, 0.001163579847827001, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.008158065095730138, 0.04292315726841478, 0.07974109017843056, 0.277014310663512, 0.14183660069202264, 0.6603855469747897, 0.36813087548851675, 0.048255795744645225, 0.07752339874460557, 0.35052593265723786, 9.999999999998899e-05, 9.999999999998899e-05, 0.012928826212161404, 0.10665306726920298, 0.013433521706842866, 0.026687271612205632, 0.0370712928122634, 0.05003737886637516, 0.013392194681335234, 0.16149669819180745, 0.027904181174675968, 0.019689223084632834, 0.010876950780391748, 0.04009137447724975, 9.999999999998899e-05, 0.09484102615486756, 0.03311457739583257, 0.0735314449268708, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0033808405140222098, 0.06676330928261776, 9.999999999998899e-05, 0.005002129927979326, 0.07414036481146091, 0.025085167637087014, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.11795381171879837, 0.11593466655557116, 0.1575616352366258, 0.10380510053030101, 0.08212810814010385, 0.10216986505043202, 0.13771578310924948, 0.11893286613828746, 0.17505550388799163, 0.0375972568541294, 0.004290869327972735, 0.006563672178041102, 0.01151289999302374, 0.01730212325686875, 0.008299771653062615, 0.030651617606022197, 0.07307870634018454, 0.006821266495973255, 0.10929148017357859, 0.13732229080531067, 0.11567122601275537, 0.10372174700648706, 0.12036497864566464, 0.12022780033635938, 0.09795703327436567, 0.10956726663812244, 0.10087127344396052, 0.12780240529320908, 0.13063110184274662, 0.10765111908340663, 0.12408317201701446, 0.12445327115684357, 0.11943512381898969, 0.16247092599173707, 0.10266095329692293, 0.14258369019307704, 0.04966626858574341, 0.02778561402474755, 0.02486080622175446, 0.0893575733179165, 0.08062881576669967, 0.07137190855598952, 0.09409335718200162, 0.07286240503400643, 0.024139314697876224, 0.11844494114880677, 0.13538937505367665, 0.13039440143117065, 0.12035395089869583, 0.09908515618068159, 0.12753330429474918, 0.13927069418213778, 0.09993675400064872, 0.11470950587763162, 0.11819959617725162, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.11276769358294625, 9.999999999998899e-05, 9.999999999998899e-05, 0.1420420581382974, 0.09875810222455439, 0.10785720456441816, 0.07099463389032168, 0.10749182747605412, 0.1012768796022554, 0.07290334252207797, 0.10478875019313294, 0.09716513642915503, 0.07201496924212591, 0.06282413901975648, 0.05345617166494343, 0.14545760430233912, 0.06023626797350157, 0.0346131673032849, 0.10762028917103739, 0.07593738357807545, 0.1538345073385442, 0.18291230962413518, 0.16490526427018848, 0.1756338560951184, 0.16550107433078043, 0.166353801146506, 0.15616404001241213, 0.15105290141727457, 0.17303775735190352, 0.164560500401559, 0.06350834853805387, 0.020206437123540533, 0.026437057311385792, 0.04009674894215365, 0.02720416052433361, 0.018119089692612778, 0.02276124423931747, 0.030388966702652342, 0.024216432716642755]}, "mutation_prompt": null}
{"id": "cc80bdd2-ef8a-4164-b3a7-61db5e0af222", "solution": "import numpy as np\n\nclass HybridPSOSA:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n    \n    def __call__(self, func):\n        def pso(x, v, pbest, gbest, c1, c2):\n            for i in range(len(x)):\n                r1, r2 = np.random.random(), np.random.random()\n                v[i] = 0.5 * v[i] + c1 * r1 * (pbest[i] - x[i]) + c2 * r2 * (gbest[i] - x[i])\n                x[i] = np.clip(x[i] + v[i], -5.0, 5.0)\n            return x, v\n        \n        def sa(x, best_x, T, alpha):\n            new_x = x + np.random.uniform(-1, 1, len(x)) * T\n            new_x = np.clip(new_x, -5.0, 5.0)\n            old_cost, new_cost = func(x), func(new_x)\n            if new_cost < old_cost or np.random.rand() < np.exp((old_cost - new_cost) / T):\n                return new_x if new_cost < func(best_x) else best_x\n            return x\n        \n        x = np.random.uniform(-5.0, 5.0, self.dim)\n        v = np.zeros(self.dim)\n        pbest = x.copy()\n        gbest = x.copy()\n        \n        for _ in range(self.budget):\n            c1, c2 = 2.0, 2.0\n            x, v = pso(x, v, pbest, gbest, c1, c2)\n            pbest = x if func(x) < func(pbest) else pbest\n            gbest = x if func(x) < func(gbest) else gbest\n            T = 5.0 * (1 - _ / self.budget)\n            x = sa(x, gbest, T, 0.95)\n        \n        return gbest", "name": "HybridPSOSA", "description": "A novel hybrid algorithm combining Particle Swarm Optimization (PSO) and Simulated Annealing (SA) for efficient black box optimization.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "2231b8cd-f368-4e97-8fa4-10c77eb31fa6", "metadata": {"aucs": [0.1111910349327403, 0.10082327435189686, 0.10997929099261583, 0.06463087806097678, 0.09691379416475265, 0.12626062562131068, 0.11036533949943628, 0.1568506237994457, 0.12213479933023774, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.006842493070743139, 0.007776228951849595, 0.017147367566589855, 9.999999999998899e-05, 0.014167180442061778, 9.999999999998899e-05, 0.01760938918656685, 0.0010715442508028028, 0.020785860232170883, 0.010927351026432941, 9.999999999998899e-05, 0.01985458963046771, 0.011944598112335392, 0.001163579847827001, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.008158065095730138, 0.04292315726841478, 0.07974109017843056, 0.277014310663512, 0.14183660069202264, 0.6603855469747897, 0.36813087548851675, 0.048255795744645225, 0.07752339874460557, 0.35052593265723786, 9.999999999998899e-05, 9.999999999998899e-05, 0.012928826212161404, 0.10665306726920298, 0.013433521706842866, 0.026687271612205632, 0.0370712928122634, 0.05003737886637516, 0.013392194681335234, 0.16149669819180745, 0.027904181174675968, 0.019689223084632834, 0.010876950780391748, 0.04009137447724975, 9.999999999998899e-05, 0.09484102615486756, 0.03311457739583257, 0.0735314449268708, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0033808405140222098, 0.06676330928261776, 9.999999999998899e-05, 0.005002129927979326, 0.07414036481146091, 0.025085167637087014, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.11795381171879837, 0.11593466655557116, 0.1575616352366258, 0.10380510053030101, 0.08212810814010385, 0.10216986505043202, 0.13771578310924948, 0.11893286613828746, 0.17505550388799163, 0.0375972568541294, 0.004290869327972735, 0.006563672178041102, 0.01151289999302374, 0.01730212325686875, 0.008299771653062615, 0.030651617606022197, 0.07307870634018454, 0.006821266495973255, 0.10929148017357859, 0.13732229080531067, 0.11567122601275537, 0.10372174700648706, 0.12036497864566464, 0.12022780033635938, 0.09795703327436567, 0.10956726663812244, 0.10087127344396052, 0.12780240529320908, 0.13063110184274662, 0.10765111908340663, 0.12408317201701446, 0.12445327115684357, 0.11943512381898969, 0.16247092599173707, 0.10266095329692293, 0.14258369019307704, 0.04966626858574341, 0.02778561402474755, 0.02486080622175446, 0.0893575733179165, 0.08062881576669967, 0.07137190855598952, 0.09409335718200162, 0.07286240503400643, 0.024139314697876224, 0.11844494114880677, 0.13538937505367665, 0.13039440143117065, 0.12035395089869583, 0.09908515618068159, 0.12753330429474918, 0.13927069418213778, 0.09993675400064872, 0.11470950587763162, 0.11819959617725162, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.11276769358294625, 9.999999999998899e-05, 9.999999999998899e-05, 0.1420420581382974, 0.09875810222455439, 0.10785720456441816, 0.07099463389032168, 0.10749182747605412, 0.1012768796022554, 0.07290334252207797, 0.10478875019313294, 0.09716513642915503, 0.07201496924212591, 0.06282413901975648, 0.05345617166494343, 0.14545760430233912, 0.06023626797350157, 0.0346131673032849, 0.10762028917103739, 0.07593738357807545, 0.1538345073385442, 0.18291230962413518, 0.16490526427018848, 0.1756338560951184, 0.16550107433078043, 0.166353801146506, 0.15616404001241213, 0.15105290141727457, 0.17303775735190352, 0.164560500401559, 0.06350834853805387, 0.020206437123540533, 0.026437057311385792, 0.04009674894215365, 0.02720416052433361, 0.018119089692612778, 0.02276124423931747, 0.030388966702652342, 0.024216432716642755]}, "mutation_prompt": null}
