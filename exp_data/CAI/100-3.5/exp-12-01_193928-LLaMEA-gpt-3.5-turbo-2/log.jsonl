{"id": "19ad3635-ed6e-43ee-b76c-0f59d9a2b089", "solution": "import numpy as np\n\nclass AdaptiveDE:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.NP = 10  # population size\n        self.CR = 0.9  # crossover rate\n        self.F = 0.8  # differential weight\n        self.F_l = 0.5  # lower bound of F\n        self.F_u = 1.0  # upper bound of F\n        self.P = np.random.uniform(-5.0, 5.0, (self.NP, dim))\n    \n    def __call__(self, func):\n        evaluations = 0\n        while evaluations < self.budget:\n            for i in range(self.NP):\n                idxs = [idx for idx in range(self.NP) if idx != i]\n                a, b, c = np.random.choice(idxs, 3, replace=False)\n                F_i = np.random.uniform(self.F_l, self.F_u)\n                mutant = self.P[a] + F_i * (self.P[b] - self.P[c])\n                crossover = np.random.rand(self.dim) < self.CR\n                trial = np.where(crossover, mutant, self.P[i])\n                if func(trial) < func(self.P[i]):\n                    self.P[i] = trial\n                evaluations += 1\n                if evaluations >= self.budget:\n                    break\n        best_solution = self.P[np.argmin([func(ind) for ind in self.P])]\n        return best_solution", "name": "AdaptiveDE", "description": "An improved version of the Differential Evolution algorithm with adaptive mutation and crossover strategies to efficiently optimize black box functions.", "configspace": "", "generation": 0, "fitness": 0.3006622677156893, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.8915910097040678, 0.8113197612511538, 0.8928313509735318, 0.8570490270460183, 0.8929468140381052, 0.8164261644552468, 0.8668605841215826, 0.8598336014692783, 0.8622832116387014, 0.7397721427292041, 0.7213101514351147, 0.7967369949820842, 0.5149548286545135, 0.5239865000595643, 0.48342445385139077, 0.7706771778850461, 0.7645648061175534, 0.6512830014869821, 0.14559365301895721, 0.1632194532257185, 0.17010253976197254, 0.15222361382709948, 0.14697996940592695, 0.11072012708551993, 0.5097717326688906, 0.1740607888655914, 0.12920714210130013, 0.10542311374172131, 0.1417804284170504, 0.1290794730353091, 0.10376253095945631, 0.12490713199011227, 0.10636656346171736, 0.15215004302587498, 0.11354762387338146, 0.08452638029484982, 0.9868813817611718, 0.9917021188745497, 0.9889988652399749, 0.09684373954273995, 0.9932963357455898, 0.9827576979277888, 0.9804830739173656, 0.9917582132921965, 0.9815987712426658, 0.4207078559954698, 0.5497112935423338, 0.1972636362546255, 0.5985810182886977, 0.5854339875420305, 0.33660607983707747, 0.3295218137393695, 0.34294625709744775, 0.24130595687283507, 0.8498503583577277, 0.2083352747999898, 0.16494716563757283, 0.2961182057477795, 0.2021732217601906, 0.8629171285621102, 0.2286771635871182, 0.1616997189631969, 0.23259433729499923, 0.12675348553828847, 0.17271155040775898, 0.1451835778047389, 0.3077395563927514, 0.1961064952513225, 0.20767260429739143, 0.19104836268781644, 0.15438822186876155, 0.20863540946167758, 0.16675899584290943, 0.14384296745353153, 0.18491460277330263, 0.16639177062864585, 0.6314438954750164, 0.1458714629623592, 0.23788277630204602, 0.10073882026881509, 0.21290399434530893, 9.999999999998899e-05, 0.09136201875315197, 0.09656520230336607, 0.023419167780778682, 0.039075491386493355, 9.999999999998899e-05, 0.002908235592999686, 0.04922447383953166, 0.0015698024145236467, 0.12581395080508007, 0.06741439670002347, 0.1541327598048019, 0.056939668100131846, 9.999999999998899e-05, 0.18885039797729186, 0.19664003926607865, 0.09570006690561861, 0.15404069071854498, 0.11492662146992483, 0.10085920553650118, 0.11789731365930856, 0.08683289530745986, 9.999999999998899e-05, 9.999999999998899e-05, 0.01058028848624093, 0.041724746268595125, 0.2722192122579311, 0.031233140329865683, 0.2827124076390498, 0.1775377796412746, 0.22058589128725747, 0.22027366408973226, 0.21740720896309618, 0.11142409299075062, 0.12717884979433347, 0.20768898398764102, 0.5374997507358796, 0.5508147113744636, 0.6882163794347791, 0.4336336571766335, 0.5067707008819868, 0.7082336311254598, 0.5276711654011861, 0.6412243395761259, 0.577810495874228, 0.14862527582730167, 0.12580205710703907, 0.10623344955022129, 0.1402309971898501, 0.29445287185439517, 0.12244865884125433, 0.08338309226202822, 0.1393946386620879, 0.14044147192335132, 0.13700472709193035, 0.14953601783941428, 0.16177653439647566, 0.3747187648337912, 0.13052775885723078, 0.11360239775609626, 0.18845854858893163, 0.15620150784863673, 0.11264595958524082, 0.3637230655405155, 0.434150218084004, 0.39625181218254624, 0.44025879160601067, 0.38498510932564556, 0.4057191998622577, 0.5283084264591525, 0.23627694845066016, 0.39872161720036536, 0.33043467548879, 0.2866890246709265, 0.3475415784618644, 0.201475393061755, 0.24594658349307452, 0.3221288165151275, 0.2733301899447319, 0.23829772882165057, 0.2670049176925027, 0.17795317360626572, 0.19515563039526418, 0.16689468307609545, 0.250512780419219, 0.19357885471477343, 0.1948008046592027, 0.23492335282493537, 0.19394242548598417, 0.18982890219707016, 0.19541960555875593, 0.6102076330067678, 0.18205044500565393, 0.2146536135825956, 0.20216976273396792, 0.22073248075467222, 0.20888285326494915, 0.20272432062638035, 0.20105086697409957, 0.8292538704635737, 0.8832754358550715, 0.20237792102359276, 0.17159377295237244, 0.19308885493119965, 0.8964909604013205, 0.8333854384999264, 0.1627901397014906, 0.1697954726021188, 0.16191742995177627, 0.20496945079662032, 0.12411405544805565, 0.1637350513520922, 0.1589790922141865, 0.21101218179355774, 0.10429635001670501, 0.1493924827799763, 0.21284370319431423, 0.1763668822863076, 0.16132352795972038, 0.1729993279271521, 0.17117833042942732, 0.18883440217297198, 0.17357562907765312, 0.17511936916087778, 0.1819712486750289, 0.18388497811873683, 0.09003759815410939, 0.0693015772869765, 0.08441574522211448, 0.0837646161040908, 0.08165376538977576, 0.07721204996979669, 0.07486774507974858, 0.08151215887140739, 0.07642158747677807]}, "mutation_prompt": null}
{"id": "ae2b8700-660e-43b1-a9ea-df87ad9a8ae6", "solution": "import numpy as np\n\nclass AdaptiveDE:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.NP = 10  # population size\n        self.CR = 0.9  # crossover rate\n        self.F = 0.8  # differential weight\n        self.F_l = 0.5  # lower bound of F\n        self.F_u = 1.0  # upper bound of F\n        self.P = np.random.uniform(-5.0, 5.0, (self.NP, dim))\n    \n    def __call__(self, func):\n        evaluations = 0\n        while evaluations < self.budget:\n            for i in range(self.NP):\n                idxs = [idx for idx in range(self.NP) if idx != i]\n                a, b, c = np.random.choice(idxs, 3, replace=False)\n                F_i = np.random.uniform(self.F_l, self.F_u)\n                mutant = self.P[a] + F_i * (self.P[b] - self.P[c])\n                crossover = np.random.rand(self.dim) < self.CR\n                trial = np.where(crossover, mutant, self.P[i])\n                if func(trial) < func(self.P[i]):\n                    self.P[i] = trial\n                evaluations += 1\n                if evaluations >= self.budget:\n                    break\n        best_solution = self.P[np.argmin([func(ind) for ind in self.P])]\n        return best_solution", "name": "AdaptiveDE", "description": "An improved version of the Differential Evolution algorithm with adaptive mutation and crossover strategies to efficiently optimize black box functions.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "19ad3635-ed6e-43ee-b76c-0f59d9a2b089", "metadata": {"aucs": [0.8915910097040678, 0.8113197612511538, 0.8928313509735318, 0.8570490270460183, 0.8929468140381052, 0.8164261644552468, 0.8668605841215826, 0.8598336014692783, 0.8622832116387014, 0.7397721427292041, 0.7213101514351147, 0.7967369949820842, 0.5149548286545135, 0.5239865000595643, 0.48342445385139077, 0.7706771778850461, 0.7645648061175534, 0.6512830014869821, 0.14559365301895721, 0.1632194532257185, 0.17010253976197254, 0.15222361382709948, 0.14697996940592695, 0.11072012708551993, 0.5097717326688906, 0.1740607888655914, 0.12920714210130013, 0.10542311374172131, 0.1417804284170504, 0.1290794730353091, 0.10376253095945631, 0.12490713199011227, 0.10636656346171736, 0.15215004302587498, 0.11354762387338146, 0.08452638029484982, 0.9868813817611718, 0.9917021188745497, 0.9889988652399749, 0.09684373954273995, 0.9932963357455898, 0.9827576979277888, 0.9804830739173656, 0.9917582132921965, 0.9815987712426658, 0.4207078559954698, 0.5497112935423338, 0.1972636362546255, 0.5985810182886977, 0.5854339875420305, 0.33660607983707747, 0.3295218137393695, 0.34294625709744775, 0.24130595687283507, 0.8498503583577277, 0.2083352747999898, 0.16494716563757283, 0.2961182057477795, 0.2021732217601906, 0.8629171285621102, 0.2286771635871182, 0.1616997189631969, 0.23259433729499923, 0.12675348553828847, 0.17271155040775898, 0.1451835778047389, 0.3077395563927514, 0.1961064952513225, 0.20767260429739143, 0.19104836268781644, 0.15438822186876155, 0.20863540946167758, 0.16675899584290943, 0.14384296745353153, 0.18491460277330263, 0.16639177062864585, 0.6314438954750164, 0.1458714629623592, 0.23788277630204602, 0.10073882026881509, 0.21290399434530893, 9.999999999998899e-05, 0.09136201875315197, 0.09656520230336607, 0.023419167780778682, 0.039075491386493355, 9.999999999998899e-05, 0.002908235592999686, 0.04922447383953166, 0.0015698024145236467, 0.12581395080508007, 0.06741439670002347, 0.1541327598048019, 0.056939668100131846, 9.999999999998899e-05, 0.18885039797729186, 0.19664003926607865, 0.09570006690561861, 0.15404069071854498, 0.11492662146992483, 0.10085920553650118, 0.11789731365930856, 0.08683289530745986, 9.999999999998899e-05, 9.999999999998899e-05, 0.01058028848624093, 0.041724746268595125, 0.2722192122579311, 0.031233140329865683, 0.2827124076390498, 0.1775377796412746, 0.22058589128725747, 0.22027366408973226, 0.21740720896309618, 0.11142409299075062, 0.12717884979433347, 0.20768898398764102, 0.5374997507358796, 0.5508147113744636, 0.6882163794347791, 0.4336336571766335, 0.5067707008819868, 0.7082336311254598, 0.5276711654011861, 0.6412243395761259, 0.577810495874228, 0.14862527582730167, 0.12580205710703907, 0.10623344955022129, 0.1402309971898501, 0.29445287185439517, 0.12244865884125433, 0.08338309226202822, 0.1393946386620879, 0.14044147192335132, 0.13700472709193035, 0.14953601783941428, 0.16177653439647566, 0.3747187648337912, 0.13052775885723078, 0.11360239775609626, 0.18845854858893163, 0.15620150784863673, 0.11264595958524082, 0.3637230655405155, 0.434150218084004, 0.39625181218254624, 0.44025879160601067, 0.38498510932564556, 0.4057191998622577, 0.5283084264591525, 0.23627694845066016, 0.39872161720036536, 0.33043467548879, 0.2866890246709265, 0.3475415784618644, 0.201475393061755, 0.24594658349307452, 0.3221288165151275, 0.2733301899447319, 0.23829772882165057, 0.2670049176925027, 0.17795317360626572, 0.19515563039526418, 0.16689468307609545, 0.250512780419219, 0.19357885471477343, 0.1948008046592027, 0.23492335282493537, 0.19394242548598417, 0.18982890219707016, 0.19541960555875593, 0.6102076330067678, 0.18205044500565393, 0.2146536135825956, 0.20216976273396792, 0.22073248075467222, 0.20888285326494915, 0.20272432062638035, 0.20105086697409957, 0.8292538704635737, 0.8832754358550715, 0.20237792102359276, 0.17159377295237244, 0.19308885493119965, 0.8964909604013205, 0.8333854384999264, 0.1627901397014906, 0.1697954726021188, 0.16191742995177627, 0.20496945079662032, 0.12411405544805565, 0.1637350513520922, 0.1589790922141865, 0.21101218179355774, 0.10429635001670501, 0.1493924827799763, 0.21284370319431423, 0.1763668822863076, 0.16132352795972038, 0.1729993279271521, 0.17117833042942732, 0.18883440217297198, 0.17357562907765312, 0.17511936916087778, 0.1819712486750289, 0.18388497811873683, 0.09003759815410939, 0.0693015772869765, 0.08441574522211448, 0.0837646161040908, 0.08165376538977576, 0.07721204996979669, 0.07486774507974858, 0.08151215887140739, 0.07642158747677807]}, "mutation_prompt": null}
