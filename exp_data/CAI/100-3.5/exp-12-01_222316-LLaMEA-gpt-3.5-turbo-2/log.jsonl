{"id": "b3b094e2-dc4b-4025-b441-472595e6d6cb", "solution": "import numpy as np\n\nclass MASA:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.pop_size = 10\n        self.mutation_rate = 0.1\n\n    def __call__(self, func):\n        best_solution = np.random.uniform(-5.0, 5.0, size=self.dim)\n        best_fitness = func(best_solution)\n\n        for _ in range(self.budget):\n            population = [best_solution + np.random.uniform(-1, 1, size=self.dim) * self.mutation_rate \n                          for _ in range(self.pop_size)]\n            fitness_values = [func(individual) for individual in population]\n            \n            best_idx = np.argmin(fitness_values)\n            if fitness_values[best_idx] < best_fitness:\n                best_solution = population[best_idx]\n                best_fitness = fitness_values[best_idx]\n\n            self.pop_size = max(1, min(100, int(self.pop_size * 1.1)))\n            self.mutation_rate = max(0.01, min(1.0, self.mutation_rate * 1.01))\n\n        return best_solution", "name": "MASA", "description": "Multimodal Adaptive Searching Algorithm (MASA) with dynamic population size and mutation rate adapation for black box optimization in continuous search spaces.", "configspace": "", "generation": 0, "fitness": 0.12231211906945355, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.42189061415477136, 0.37425732446073134, 0.39703231279630813, 0.34008808420938763, 0.31008283991795593, 0.38300749652777466, 0.3637959010544646, 0.40885816447459833, 0.38507812882901504, 0.006316683574195903, 0.0026369995272161884, 9.999999999998899e-05, 0.06370534780068393, 0.010484450670682377, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.006189073059594374, 9.999999999998899e-05, 9.999999999998899e-05, 0.00022181900060203041, 9.999999999998899e-05, 9.999999999998899e-05, 0.0034240410549475353, 9.999999999998899e-05, 9.999999999998899e-05, 0.008744854697737559, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.5200777901511635, 0.36926900119251727, 0.3108207451057381, 0.4235163296475597, 0.48310159188388546, 0.4607093283370379, 0.4240333431325929, 0.4787344754538755, 0.5008313264457711, 0.2935928045195002, 0.1475463194777471, 0.17555943640939764, 0.22642318345559165, 0.2763226205070902, 0.21389964184861832, 0.20345109936903594, 0.10055359253513996, 0.248353717897428, 0.08744942709817771, 0.021183015234216174, 0.011196122873056047, 0.03826517596192058, 0.004236242949386737, 0.006330848362474661, 0.05312013844168573, 0.0008962427605209156, 0.0044041435963552145, 0.14922056303294817, 0.135577489884249, 0.14286670903458565, 0.17737873011540428, 0.13812126479558207, 0.08493079211411592, 0.18678167678923718, 0.11734631931341843, 0.17145890224178306, 0.18101955963629834, 0.10402680467431946, 0.11743781896142913, 0.22756733221097214, 0.17193673276748211, 0.10966752583063522, 0.21047558315095327, 0.1230866952652021, 0.1356212496963317, 9.999999999998899e-05, 9.999999999998899e-05, 0.007434133882475491, 0.049689987750448195, 0.042529867222016016, 0.0006421990211880058, 0.0010432149788858203, 9.999999999998899e-05, 0.048404916716886515, 0.06648698126243924, 0.07508516158368983, 0.1799061277495133, 0.0811661235994412, 0.026086926295481372, 0.031258521741191925, 0.19903712778682625, 0.03917901736476326, 0.06359394702303922, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05588677364851902, 0.07054060750788427, 0.047224834338404076, 0.09158899762508643, 0.07264236959649406, 0.04275993949303669, 0.07707176116592362, 0.04555245427784571, 0.04203195372224322, 0.3646744518670487, 0.2776961985981611, 0.3958403451756388, 0.36409940188005785, 0.26567096183385186, 0.28028251144745786, 0.40245885182473773, 0.3408058242540648, 0.39352800521821507, 0.0012606352255516429, 0.000125221532038311, 0.0014094592730999889, 9.999999999998899e-05, 9.999999999998899e-05, 0.005840246596102716, 9.999999999998899e-05, 0.006650919548751855, 0.0014169637102566801, 0.052477704788628565, 0.16465674601010483, 0.16624567969637205, 0.04339710730017776, 0.08832517819482255, 0.06983159469717537, 0.07346095964069077, 0.08324061431913177, 0.0938145317253195, 0.11490393756510253, 0.10319100455331498, 0.1073078107559784, 0.14754551094529145, 0.06693075024681949, 0.12205444957804035, 0.1443077969070704, 0.07776786749140774, 0.0932438340340015, 0.052527058983856345, 0.04357356748960883, 0.040059491910872214, 0.1130757586192862, 0.005111622588285347, 0.08449835281940488, 0.10167865462575587, 0.015028415056611677, 0.026327845696811014, 0.17455127550325122, 0.11444806349420711, 0.14269826400846009, 0.18333532461159718, 0.10668106609776007, 0.12657522459379544, 0.19047240269658283, 0.10726781988629008, 0.13315087158403316, 0.14999216176668873, 0.13650289166736707, 0.1456569271433784, 0.14947783687622285, 0.17489776937573676, 0.14369905044156273, 0.15726049423156507, 0.11507284009449081, 0.13851151898821212, 0.12120731934428952, 0.13533815814857042, 0.5782940379375121, 0.07648843571357378, 0.06428954131400566, 0.060658059031133416, 0.10756385295202109, 0.11495721204773668, 0.16363237594095026, 0.6338984403416218, 0.11253344812596655, 0.07475881382211769, 0.015764220656393046, 0.1784680586360664, 0.17967333498456428, 0.047170170897654184, 0.05620880893131164, 0.05028719049305497, 0.18568072993202, 0.1880908857418785, 0.17758061906537592, 0.20732807519041685, 0.20522119036367725, 0.18119292864794811, 0.17764199095828404, 0.20371667117158754, 0.179860032098633, 0.04353450580926599, 0.010455466017836978, 0.03299883061357445, 0.03627694051476815, 0.00172565743194808, 0.028744232683307946, 0.040853031764084835, 0.011936143425666845, 0.03433512564014929]}, "mutation_prompt": null}
{"id": "1e6442ef-8d2f-42ac-9a58-27af2edd7168", "solution": "import numpy as np\n\nclass MASA:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.pop_size = 10\n        self.mutation_rate = 0.1\n\n    def __call__(self, func):\n        best_solution = np.random.uniform(-5.0, 5.0, size=self.dim)\n        best_fitness = func(best_solution)\n\n        for _ in range(self.budget):\n            population = [best_solution + np.random.uniform(-1, 1, size=self.dim) * self.mutation_rate \n                          for _ in range(self.pop_size)]\n            fitness_values = [func(individual) for individual in population]\n            \n            best_idx = np.argmin(fitness_values)\n            if fitness_values[best_idx] < best_fitness:\n                best_solution = population[best_idx]\n                best_fitness = fitness_values[best_idx]\n\n            self.pop_size = max(1, min(100, int(self.pop_size * 1.1)))\n            self.mutation_rate = max(0.01, min(1.0, self.mutation_rate * 1.01))\n\n        return best_solution", "name": "MASA", "description": "Multimodal Adaptive Searching Algorithm (MASA) with dynamic population size and mutation rate adapation for black box optimization in continuous search spaces.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "b3b094e2-dc4b-4025-b441-472595e6d6cb", "metadata": {"aucs": [0.42189061415477136, 0.37425732446073134, 0.39703231279630813, 0.34008808420938763, 0.31008283991795593, 0.38300749652777466, 0.3637959010544646, 0.40885816447459833, 0.38507812882901504, 0.006316683574195903, 0.0026369995272161884, 9.999999999998899e-05, 0.06370534780068393, 0.010484450670682377, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.006189073059594374, 9.999999999998899e-05, 9.999999999998899e-05, 0.00022181900060203041, 9.999999999998899e-05, 9.999999999998899e-05, 0.0034240410549475353, 9.999999999998899e-05, 9.999999999998899e-05, 0.008744854697737559, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.5200777901511635, 0.36926900119251727, 0.3108207451057381, 0.4235163296475597, 0.48310159188388546, 0.4607093283370379, 0.4240333431325929, 0.4787344754538755, 0.5008313264457711, 0.2935928045195002, 0.1475463194777471, 0.17555943640939764, 0.22642318345559165, 0.2763226205070902, 0.21389964184861832, 0.20345109936903594, 0.10055359253513996, 0.248353717897428, 0.08744942709817771, 0.021183015234216174, 0.011196122873056047, 0.03826517596192058, 0.004236242949386737, 0.006330848362474661, 0.05312013844168573, 0.0008962427605209156, 0.0044041435963552145, 0.14922056303294817, 0.135577489884249, 0.14286670903458565, 0.17737873011540428, 0.13812126479558207, 0.08493079211411592, 0.18678167678923718, 0.11734631931341843, 0.17145890224178306, 0.18101955963629834, 0.10402680467431946, 0.11743781896142913, 0.22756733221097214, 0.17193673276748211, 0.10966752583063522, 0.21047558315095327, 0.1230866952652021, 0.1356212496963317, 9.999999999998899e-05, 9.999999999998899e-05, 0.007434133882475491, 0.049689987750448195, 0.042529867222016016, 0.0006421990211880058, 0.0010432149788858203, 9.999999999998899e-05, 0.048404916716886515, 0.06648698126243924, 0.07508516158368983, 0.1799061277495133, 0.0811661235994412, 0.026086926295481372, 0.031258521741191925, 0.19903712778682625, 0.03917901736476326, 0.06359394702303922, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05588677364851902, 0.07054060750788427, 0.047224834338404076, 0.09158899762508643, 0.07264236959649406, 0.04275993949303669, 0.07707176116592362, 0.04555245427784571, 0.04203195372224322, 0.3646744518670487, 0.2776961985981611, 0.3958403451756388, 0.36409940188005785, 0.26567096183385186, 0.28028251144745786, 0.40245885182473773, 0.3408058242540648, 0.39352800521821507, 0.0012606352255516429, 0.000125221532038311, 0.0014094592730999889, 9.999999999998899e-05, 9.999999999998899e-05, 0.005840246596102716, 9.999999999998899e-05, 0.006650919548751855, 0.0014169637102566801, 0.052477704788628565, 0.16465674601010483, 0.16624567969637205, 0.04339710730017776, 0.08832517819482255, 0.06983159469717537, 0.07346095964069077, 0.08324061431913177, 0.0938145317253195, 0.11490393756510253, 0.10319100455331498, 0.1073078107559784, 0.14754551094529145, 0.06693075024681949, 0.12205444957804035, 0.1443077969070704, 0.07776786749140774, 0.0932438340340015, 0.052527058983856345, 0.04357356748960883, 0.040059491910872214, 0.1130757586192862, 0.005111622588285347, 0.08449835281940488, 0.10167865462575587, 0.015028415056611677, 0.026327845696811014, 0.17455127550325122, 0.11444806349420711, 0.14269826400846009, 0.18333532461159718, 0.10668106609776007, 0.12657522459379544, 0.19047240269658283, 0.10726781988629008, 0.13315087158403316, 0.14999216176668873, 0.13650289166736707, 0.1456569271433784, 0.14947783687622285, 0.17489776937573676, 0.14369905044156273, 0.15726049423156507, 0.11507284009449081, 0.13851151898821212, 0.12120731934428952, 0.13533815814857042, 0.5782940379375121, 0.07648843571357378, 0.06428954131400566, 0.060658059031133416, 0.10756385295202109, 0.11495721204773668, 0.16363237594095026, 0.6338984403416218, 0.11253344812596655, 0.07475881382211769, 0.015764220656393046, 0.1784680586360664, 0.17967333498456428, 0.047170170897654184, 0.05620880893131164, 0.05028719049305497, 0.18568072993202, 0.1880908857418785, 0.17758061906537592, 0.20732807519041685, 0.20522119036367725, 0.18119292864794811, 0.17764199095828404, 0.20371667117158754, 0.179860032098633, 0.04353450580926599, 0.010455466017836978, 0.03299883061357445, 0.03627694051476815, 0.00172565743194808, 0.028744232683307946, 0.040853031764084835, 0.011936143425666845, 0.03433512564014929]}, "mutation_prompt": null}
