{"id": "82319dab-d553-4cd1-800d-2033604099c7", "solution": "import numpy as np\n\nclass QuantumInspiredEA:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n\n    def quantum_mutation(self, x, sigma):\n        return x + np.random.normal(0, sigma, size=self.dim)\n\n    def __call__(self, func):\n        population = np.random.uniform(-5.0, 5.0, (self.budget, self.dim))\n        sigma = 0.5\n        for _ in range(self.budget):\n            offspring = np.array([self.quantum_mutation(individual, sigma) for individual in population])\n            population = np.where([func(offspring[i]) < func(population[i]) for i in range(self.budget)], offspring, population)\n            sigma *= 0.95  # Decrease mutation step size\n        return population[np.argmin([func(individual) for individual in population])]", "name": "QuantumInspiredEA", "description": "Quantum-inspired Evolutionary Algorithm (QEA) that uses quantum bit representation and evolutionary operators to explore the search space efficiently.", "configspace": "", "generation": 0, "fitness": 0.09086183623410919, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.16941686779948373, 0.17790634592670318, 0.16835009154712155, 0.15766032321736168, 0.17676306104991912, 0.16736582696133173, 0.17961111593740664, 0.1511684492864228, 0.1695110898042922, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05159123658039155, 0.055953377349076794, 0.05423534902715543, 0.03869729062657423, 0.03948771560811115, 0.04998459176550474, 0.05301011617500895, 0.06254540156897093, 0.05209464194039626, 0.04059684949839515, 0.028659628966917983, 0.03987710992621418, 0.04095575335636381, 0.0420569941593405, 0.052183740942808754, 0.0352462949077853, 0.0399024741062185, 0.029261866258148972, 0.08087179340278905, 0.0802353215184175, 0.0865928349857501, 0.08048806476351278, 0.0812768806788452, 0.08587331845889745, 0.09607621785544229, 0.08381689052814123, 0.08209604908073487, 0.08157417256123334, 0.08275371535697451, 0.11561168882762363, 0.05863433882885216, 0.08579285778184154, 0.04114647754955081, 0.09171572612148482, 0.03788605236381737, 0.09014159029328717, 0.13209980249522646, 0.18929737485900655, 0.14285143567735015, 0.11989808497173182, 0.11274250195442326, 0.11875536733122949, 0.11323194042073448, 0.13279170316994915, 0.10828926161953456, 9.999999999998899e-05, 0.01467119687190166, 0.010780934556372634, 9.999999999998899e-05, 0.003732775944079947, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.016790757226985753, 0.04926846012007158, 0.05883704991718319, 9.999999999998899e-05, 0.015065483618745379, 0.03406038839019088, 0.009468453331913929, 0.03848348815386293, 0.004386754093764433, 0.0077073335890308625, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.045525021919588515, 0.06741625922950134, 0.0438435970274611, 0.05941523347397892, 0.02817003569847676, 0.05814629339601707, 0.04110477123011769, 0.036288042038940316, 0.06531660085052915, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0020432925460605045, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.002537501139155629, 9.999999999998899e-05, 0.21409532058890868, 0.21855090858596538, 0.19359193163240218, 0.2028217742605667, 0.18410462130251193, 0.19580283728973724, 0.20932971957753876, 0.1763234407834563, 0.18822494270372625, 0.042796929679485785, 0.042413935441812045, 0.03830627777465556, 0.036974144145125454, 0.03964676430395775, 0.0439341308450657, 0.05951706921992206, 0.03946485453203674, 0.04752754301987738, 0.13638734242588912, 0.15910702343642902, 0.1272750037796644, 0.14415439249703454, 0.13919837565153126, 0.14550447302910674, 0.14946814127146968, 0.1500743856509542, 0.1375901050648214, 0.16605151678910457, 0.17624943533811133, 0.16916831656455633, 0.163267567025849, 0.17198325746444476, 0.16900170550443494, 0.1577569391843755, 0.18316708239441504, 0.16346699641790619, 0.10350950187095254, 0.11228946608780588, 0.10922406537208351, 0.10479808431600779, 0.1265988062895156, 0.10764775642694746, 0.10331386230988848, 0.12310071215666651, 0.12070498448715172, 0.14700935399374537, 0.15724151055635938, 0.16553800684646447, 0.15348968947603225, 0.1800767153188224, 0.1564284744816996, 0.1647847131886392, 0.1605858385849166, 0.17645598849204325, 0.1311943531591866, 0.161449520761627, 0.13908811268872856, 0.13194076681076983, 0.14375518885387395, 0.14787319765479057, 0.1375145389425514, 0.13691167280202465, 0.1604830467825752, 0.1467916136896712, 0.16704974834700892, 0.16274870323966717, 0.16031076619038453, 0.15614847256519715, 0.15173798108796277, 0.17334434676180022, 0.16252902096086397, 0.1550333384282132, 0.15816735377204494, 0.15560618410863158, 0.17471588554356965, 0.1343943418496456, 0.24923527900038311, 0.15766171232136006, 0.16202813993794696, 0.16572816730607942, 0.19069539565125304, 0.18577731183718393, 0.1835746662532195, 0.18090281168669986, 0.19054316110669078, 0.21020359104406616, 0.1799768333391294, 0.1818559628908457, 0.20208916147333011, 0.20411143004374765, 0.05390559116849181, 0.05229358209206325, 0.064052986110687, 0.056403606575412435, 0.058641257794872614, 0.04935737148302555, 0.07514265862035174, 0.053578391943925996, 0.06081787433970309]}, "mutation_prompt": null}
{"id": "f7ad4e97-4c5c-417e-9c38-8e7b25bf17f2", "solution": "import numpy as np\n\nclass QuantumInspiredEA:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n\n    def quantum_mutation(self, x, sigma):\n        return x + np.random.normal(0, sigma, size=self.dim)\n\n    def __call__(self, func):\n        population = np.random.uniform(-5.0, 5.0, (self.budget, self.dim))\n        sigma_base = 0.5\n        for _ in range(self.budget):\n            offspring = np.array([self.quantum_mutation(individual, sigma_base) for individual in population])\n            improved_offspring = np.where([func(offspring[i]) < func(population[i]) for i in range(self.budget)], offspring, population)\n            fitness_improvement = np.mean([func(offspring[i]) - func(population[i]) for i in range(self.budget)])\n            sigma = sigma_base * (1 + fitness_improvement)  # Dynamic mutation step size adjustment\n            population = improved_offspring\n            sigma_base = max(0.1, min(0.5, sigma))  # Bound sigma between 0.1 and 0.5\n        return population[np.argmin([func(individual) for individual in population])]", "name": "QuantumInspiredEA", "description": "Refine the quantum mutation step by incorporating a dynamic mutation strategy based on the fitness improvement of the offspring.", "configspace": "", "generation": 1, "fitness": 0.09086183623410919, "feedback": "", "error": "", "parent_id": "82319dab-d553-4cd1-800d-2033604099c7", "metadata": {"aucs": [0.16941686779948373, 0.17790634592670318, 0.16835009154712155, 0.15766032321736168, 0.17676306104991912, 0.16736582696133173, 0.17961111593740664, 0.1511684492864228, 0.1695110898042922, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05159123658039155, 0.055953377349076794, 0.05423534902715543, 0.03869729062657423, 0.03948771560811115, 0.04998459176550474, 0.05301011617500895, 0.06254540156897093, 0.05209464194039626, 0.04059684949839515, 0.028659628966917983, 0.03987710992621418, 0.04095575335636381, 0.0420569941593405, 0.052183740942808754, 0.0352462949077853, 0.0399024741062185, 0.029261866258148972, 0.08087179340278905, 0.0802353215184175, 0.0865928349857501, 0.08048806476351278, 0.0812768806788452, 0.08587331845889745, 0.09607621785544229, 0.08381689052814123, 0.08209604908073487, 0.08157417256123334, 0.08275371535697451, 0.11561168882762363, 0.05863433882885216, 0.08579285778184154, 0.04114647754955081, 0.09171572612148482, 0.03788605236381737, 0.09014159029328717, 0.13209980249522646, 0.18929737485900655, 0.14285143567735015, 0.11989808497173182, 0.11274250195442326, 0.11875536733122949, 0.11323194042073448, 0.13279170316994915, 0.10828926161953456, 9.999999999998899e-05, 0.01467119687190166, 0.010780934556372634, 9.999999999998899e-05, 0.003732775944079947, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.016790757226985753, 0.04926846012007158, 0.05883704991718319, 9.999999999998899e-05, 0.015065483618745379, 0.03406038839019088, 0.009468453331913929, 0.03848348815386293, 0.004386754093764433, 0.0077073335890308625, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.045525021919588515, 0.06741625922950134, 0.0438435970274611, 0.05941523347397892, 0.02817003569847676, 0.05814629339601707, 0.04110477123011769, 0.036288042038940316, 0.06531660085052915, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0020432925460605045, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.002537501139155629, 9.999999999998899e-05, 0.21409532058890868, 0.21855090858596538, 0.19359193163240218, 0.2028217742605667, 0.18410462130251193, 0.19580283728973724, 0.20932971957753876, 0.1763234407834563, 0.18822494270372625, 0.042796929679485785, 0.042413935441812045, 0.03830627777465556, 0.036974144145125454, 0.03964676430395775, 0.0439341308450657, 0.05951706921992206, 0.03946485453203674, 0.04752754301987738, 0.13638734242588912, 0.15910702343642902, 0.1272750037796644, 0.14415439249703454, 0.13919837565153126, 0.14550447302910674, 0.14946814127146968, 0.1500743856509542, 0.1375901050648214, 0.16605151678910457, 0.17624943533811133, 0.16916831656455633, 0.163267567025849, 0.17198325746444476, 0.16900170550443494, 0.1577569391843755, 0.18316708239441504, 0.16346699641790619, 0.10350950187095254, 0.11228946608780588, 0.10922406537208351, 0.10479808431600779, 0.1265988062895156, 0.10764775642694746, 0.10331386230988848, 0.12310071215666651, 0.12070498448715172, 0.14700935399374537, 0.15724151055635938, 0.16553800684646447, 0.15348968947603225, 0.1800767153188224, 0.1564284744816996, 0.1647847131886392, 0.1605858385849166, 0.17645598849204325, 0.1311943531591866, 0.161449520761627, 0.13908811268872856, 0.13194076681076983, 0.14375518885387395, 0.14787319765479057, 0.1375145389425514, 0.13691167280202465, 0.1604830467825752, 0.1467916136896712, 0.16704974834700892, 0.16274870323966717, 0.16031076619038453, 0.15614847256519715, 0.15173798108796277, 0.17334434676180022, 0.16252902096086397, 0.1550333384282132, 0.15816735377204494, 0.15560618410863158, 0.17471588554356965, 0.1343943418496456, 0.24923527900038311, 0.15766171232136006, 0.16202813993794696, 0.16572816730607942, 0.19069539565125304, 0.18577731183718393, 0.1835746662532195, 0.18090281168669986, 0.19054316110669078, 0.21020359104406616, 0.1799768333391294, 0.1818559628908457, 0.20208916147333011, 0.20411143004374765, 0.05390559116849181, 0.05229358209206325, 0.064052986110687, 0.056403606575412435, 0.058641257794872614, 0.04935737148302555, 0.07514265862035174, 0.053578391943925996, 0.06081787433970309]}, "mutation_prompt": null}
