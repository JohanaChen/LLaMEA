{"id": "b7403117-8b8c-4305-b3d2-08d4216a4f08", "solution": "import numpy as np\n\nclass CuckooSearchLevy:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n\n    def levy_flight(self, size):\n        beta = 1.5\n        sigma = (gamma(1 + beta) * np.sin(np.pi * beta / 2) / (gamma((1 + beta) / 2) * beta * 2 ** ((beta - 1) / 2))) ** (1 / beta)\n        u = np.random.normal(0, sigma, size)\n        v = np.random.normal(0, 1, size)\n        step = u / abs(v) ** (1 / beta)\n        return step\n\n    def __call__(self, func):\n        nest = np.random.uniform(-5.0, 5.0, (self.budget, self.dim))\n        fitness = np.apply_along_axis(func, 1, nest)\n        \n        for _ in range(self.budget):\n            new_nest = nest.copy()\n            step_size = 0.01 * self.levy_flight((self.budget, self.dim))\n            new_nest += step_size\n            new_nest = np.clip(new_nest, -5.0, 5.0)\n            new_fitness = np.apply_along_axis(func, 1, new_nest)\n            idx = new_fitness < fitness\n            nest[idx] = new_nest[idx]\n            fitness[idx] = new_fitness[idx]\n        \n        return nest[np.argmin(fitness)]", "name": "CuckooSearchLevy", "description": "Metaheuristic algorithm based on Cuckoo Search with Levy flights for black box optimization.", "configspace": "", "generation": 0, "fitness": -Infinity, "feedback": "An exception occured: Traceback (most recent call last):\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 187, in initialize_single\n    new_individual = self.evaluate_fitness(new_individual)\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 264, in evaluate_fitness\n    updated_individual = self.f(individual, self.logger)\n  File \"mutation_exp.py\", line 52, in evaluateBBOB\n    algorithm(problem)\n  File \"<string>\", line 22, in __call__\n  File \"<string>\", line 10, in levy_flight\nNameError: name 'gamma' is not defined\n.", "error": "NameError(\"name 'gamma' is not defined\")Traceback (most recent call last):\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 187, in initialize_single\n    new_individual = self.evaluate_fitness(new_individual)\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 264, in evaluate_fitness\n    updated_individual = self.f(individual, self.logger)\n  File \"mutation_exp.py\", line 52, in evaluateBBOB\n    algorithm(problem)\n  File \"<string>\", line 22, in __call__\n  File \"<string>\", line 10, in levy_flight\nNameError: name 'gamma' is not defined\n", "parent_id": null, "metadata": {}, "mutation_prompt": null}
{"id": "c098071c-95bc-4709-93e2-b4e8689ea0a5", "solution": "import numpy as np\n\nclass CuckooSearchLevy:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n\n    def levy_flight(self, size):\n        beta = 1.5\n        sigma = (gamma(1 + beta) * np.sin(np.pi * beta / 2) / (gamma((1 + beta) / 2) * beta * 2 ** ((beta - 1) / 2))) ** (1 / beta)\n        u = np.random.normal(0, sigma, size)\n        v = np.random.normal(0, 1, size)\n        step = u / abs(v) ** (1 / beta)\n        return step\n\n    def __call__(self, func):\n        nest = np.random.uniform(-5.0, 5.0, (self.budget, self.dim))\n        fitness = np.apply_along_axis(func, 1, nest)\n        \n        for _ in range(self.budget):\n            new_nest = nest.copy()\n            step_size = 0.01 * self.levy_flight((self.budget, self.dim))\n            new_nest += step_size\n            new_nest = np.clip(new_nest, -5.0, 5.0)\n            new_fitness = np.apply_along_axis(func, 1, new_nest)\n            idx = new_fitness < fitness\n            nest[idx] = new_nest[idx]\n            fitness[idx] = new_fitness[idx]\n        \n        return nest[np.argmin(fitness)]", "name": "CuckooSearchLevy", "description": "Metaheuristic algorithm based on Cuckoo Search with Levy flights for black box optimization.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "b7403117-8b8c-4305-b3d2-08d4216a4f08", "metadata": {}, "mutation_prompt": null}
