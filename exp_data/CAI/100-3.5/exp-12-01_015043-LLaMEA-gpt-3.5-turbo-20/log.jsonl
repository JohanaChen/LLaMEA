{"id": "a126185f-fd6a-4580-9934-73f9ce6db42f", "solution": "import numpy as np\n\nclass FireflyAlgorithm:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.population_size = 20\n        self.alpha = 1.0\n        self.beta = 2.0\n        self.gamma = 0.2\n        self.population = np.random.uniform(-5.0, 5.0, (self.population_size, self.dim))\n    \n    def attractiveness(self, x, y):\n        return np.exp(-self.beta * np.linalg.norm(x - y))\n    \n    def move_firefly(self, i):\n        for j in range(self.population_size):\n            if func(self.population[j]) < func(self.population[i]):\n                r = np.linalg.norm(self.population[i] - self.population[j])\n                beta0 = self.alpha * np.exp(-self.gamma * r**2)\n                self.population[i] = self.population[i] + beta0 * (self.population[j] - self.population[i]) + np.random.uniform(-0.1, 0.1, self.dim)\n    \n    def __call__(self, func):\n        for _ in range(self.budget):\n            for i in range(self.population_size):\n                self.move_firefly(i)\n        best_solution = min(self.population, key=lambda x: func(x))\n        return best_solution", "name": "FireflyAlgorithm", "description": "An evolutionary algorithm inspired by the behavior of fireflies in swarm intelligence for global optimization.", "configspace": "", "generation": 0, "fitness": -Infinity, "feedback": "An exception occured: Traceback (most recent call last):\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 187, in initialize_single\n    new_individual = self.evaluate_fitness(new_individual)\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 264, in evaluate_fitness\n    updated_individual = self.f(individual, self.logger)\n  File \"mutation_exp.py\", line 52, in evaluateBBOB\n    algorithm(problem)\n  File \"<string>\", line 26, in __call__\n  File \"<string>\", line 18, in move_firefly\nNameError: name 'func' is not defined\n.", "error": "NameError(\"name 'func' is not defined\")Traceback (most recent call last):\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 187, in initialize_single\n    new_individual = self.evaluate_fitness(new_individual)\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 264, in evaluate_fitness\n    updated_individual = self.f(individual, self.logger)\n  File \"mutation_exp.py\", line 52, in evaluateBBOB\n    algorithm(problem)\n  File \"<string>\", line 26, in __call__\n  File \"<string>\", line 18, in move_firefly\nNameError: name 'func' is not defined\n", "parent_id": null, "metadata": {}, "mutation_prompt": null}
{"id": "5fc4d5bd-3e43-4636-a81b-fdc1cfb8414f", "solution": "import numpy as np\n\nclass FireflyAlgorithm:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.population_size = 20\n        self.alpha = 1.0\n        self.beta = 2.0\n        self.gamma = 0.2\n        self.population = np.random.uniform(-5.0, 5.0, (self.population_size, self.dim))\n    \n    def attractiveness(self, x, y):\n        return np.exp(-self.beta * np.linalg.norm(x - y))\n    \n    def move_firefly(self, i):\n        for j in range(self.population_size):\n            if func(self.population[j]) < func(self.population[i]):\n                r = np.linalg.norm(self.population[i] - self.population[j])\n                beta0 = self.alpha * np.exp(-self.gamma * r**2)\n                self.population[i] = self.population[i] + beta0 * (self.population[j] - self.population[i]) + np.random.uniform(-0.1, 0.1, self.dim)\n    \n    def __call__(self, func):\n        for _ in range(self.budget):\n            for i in range(self.population_size):\n                self.move_firefly(i)\n        best_solution = min(self.population, key=lambda x: func(x))\n        return best_solution", "name": "FireflyAlgorithm", "description": "An evolutionary algorithm inspired by the behavior of fireflies in swarm intelligence for global optimization.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "a126185f-fd6a-4580-9934-73f9ce6db42f", "metadata": {}, "mutation_prompt": null}
