{"id": "62f43822-16e4-4995-80ca-bc00792986e5", "solution": "import numpy as np\n\nclass PSO_SA_Optimizer:\n    def __init__(self, budget, dim, swarm_size=30, max_iter=100):\n        self.budget = budget\n        self.dim = dim\n        self.swarm_size = swarm_size\n        self.max_iter = max_iter\n\n    def __call__(self, func):\n        def objective_function(x):\n            return func(x)\n\n        def pso_search():\n            # PSO initialization\n            ...\n\n        def sa_search():\n            # SA initialization\n            ...\n\n        best_solution = None\n        best_fitness = np.inf\n\n        for _ in range(self.max_iter):\n            # PSO phase\n            pso_solution, pso_fitness = pso_search()\n\n            if pso_fitness < best_fitness:\n                best_solution = pso_solution\n                best_fitness = pso_fitness\n\n            # SA phase\n            sa_solution, sa_fitness = sa_search()\n\n            if sa_fitness < best_fitness:\n                best_solution = sa_solution\n                best_fitness = sa_fitness\n\n            if func.evaluations >= self.budget:\n                break\n\n        return best_solution", "name": "PSO_SA_Optimizer", "description": "Novel algorithm blending Particle Swarm Optimization (PSO) with Simulated Annealing (SA) to balance global exploration and local exploitation for black box optimization problems.", "configspace": "", "generation": 0, "fitness": -Infinity, "feedback": "An exception occured: Traceback (most recent call last):\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 187, in initialize_single\n    new_individual = self.evaluate_fitness(new_individual)\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 264, in evaluate_fitness\n    updated_individual = self.f(individual, self.logger)\n  File \"mutation_exp.py\", line 52, in evaluateBBOB\n    algorithm(problem)\n  File \"<string>\", line 27, in __call__\nTypeError: cannot unpack non-iterable NoneType object\n.", "error": "TypeError('cannot unpack non-iterable NoneType object')Traceback (most recent call last):\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 187, in initialize_single\n    new_individual = self.evaluate_fitness(new_individual)\n  File \"/scratch/hyin/LLaMEA/llamea/llamea.py\", line 264, in evaluate_fitness\n    updated_individual = self.f(individual, self.logger)\n  File \"mutation_exp.py\", line 52, in evaluateBBOB\n    algorithm(problem)\n  File \"<string>\", line 27, in __call__\nTypeError: cannot unpack non-iterable NoneType object\n", "parent_id": null, "metadata": {}, "mutation_prompt": null}
{"id": "cb629b3e-a18a-4850-92ea-4d5a9eac06b2", "solution": "import numpy as np\n\nclass PSO_SA_Optimizer:\n    def __init__(self, budget, dim, swarm_size=30, max_iter=100):\n        self.budget = budget\n        self.dim = dim\n        self.swarm_size = swarm_size\n        self.max_iter = max_iter\n\n    def __call__(self, func):\n        def objective_function(x):\n            return func(x)\n\n        def pso_search():\n            # PSO initialization\n            ...\n\n        def sa_search():\n            # SA initialization\n            ...\n\n        best_solution = None\n        best_fitness = np.inf\n\n        for _ in range(self.max_iter):\n            # PSO phase\n            pso_solution, pso_fitness = pso_search()\n\n            if pso_fitness < best_fitness:\n                best_solution = pso_solution\n                best_fitness = pso_fitness\n\n            # SA phase\n            sa_solution, sa_fitness = sa_search()\n\n            if sa_fitness < best_fitness:\n                best_solution = sa_solution\n                best_fitness = sa_fitness\n\n            if func.evaluations >= self.budget:\n                break\n\n        return best_solution", "name": "PSO_SA_Optimizer", "description": "Novel algorithm blending Particle Swarm Optimization (PSO) with Simulated Annealing (SA) to balance global exploration and local exploitation for black box optimization problems.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "62f43822-16e4-4995-80ca-bc00792986e5", "metadata": {}, "mutation_prompt": null}
