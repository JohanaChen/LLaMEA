{"id": "684152c8-896b-4dc9-b5cb-52ee8d4685a2", "solution": "import numpy as np\n\nclass DynamicPSO:\n    def __init__(self, budget, dim, swarm_size=20, omega=0.5, phi_p=0.5, phi_g=0.5):\n        self.budget = budget\n        self.dim = dim\n        self.swarm_size = swarm_size\n        self.omega = omega\n        self.phi_p = phi_p\n        self.phi_g = phi_g\n\n    def __call__(self, func):\n        def initialize_swarm():\n            return np.random.uniform(-5.0, 5.0, size=(self.swarm_size, self.dim))\n\n        def update_velocity(position, velocity, pbest, gbest):\n            inertia = self.omega\n            cognitive = self.phi_p * np.random.rand() * (pbest - position)\n            social = self.phi_g * np.random.rand() * (gbest - position)\n            return inertia * velocity + cognitive + social\n\n        swarm = initialize_swarm()\n        pbest = swarm.copy()\n        gbest = swarm[np.argmin([func(p) for p in swarm])]\n        velocity = np.zeros_like(swarm)\n\n        for _ in range(self.budget):\n            for i in range(self.swarm_size):\n                velocity[i] = update_velocity(swarm[i], velocity[i], pbest[i], gbest)\n                swarm[i] += velocity[i]\n                if func(swarm[i]) < func(pbest[i]):\n                    pbest[i] = swarm[i]\n                    if func(swarm[i]) < func(gbest):\n                        gbest = swarm[i]\n\n        return gbest", "name": "DynamicPSO", "description": "Particle Swarm Optimization (PSO) algorithm with dynamic parameter adaptation to efficiently explore and exploit the search space.", "configspace": "", "generation": 0, "fitness": 0.12028325310851995, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.352885821048436, 0.4129518853317632, 0.44478433881653445, 0.20268874484302402, 0.20054093679281904, 0.29756317406533794, 0.22345911796951967, 0.33271359905122144, 0.17894633488611178, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.06757723912623637, 0.06960641392394806, 0.03874486315147585, 0.09125063881669015, 0.06348797502926495, 0.158606190037747, 0.040675902929406815, 0.08453440132547474, 0.10404173326234611, 0.0907602784770215, 0.07165612438195823, 0.03528484177839286, 0.08421081213011383, 0.07094422223107777, 0.021148923816437515, 0.06215844798126635, 0.046282827593121745, 0.022121989413577237, 0.10624348028750685, 0.05659361318680023, 0.12592650775803538, 0.07302361564197968, 0.0950124693019967, 0.07716529969320074, 0.10134634563025302, 0.08833463466920843, 0.1002052336902054, 0.1086045771674713, 0.0779543173421714, 0.059621851672611026, 0.11086441125530333, 0.06416762571795664, 0.05964757269664622, 0.1170884022262908, 0.045215801308159054, 0.06639982290527224, 0.21427726611720666, 0.12279942445187075, 0.1204846366660236, 0.13604074875201766, 0.11816250500380265, 0.05358439285090122, 0.09091390843060088, 0.12143515375593072, 0.15265798339941883, 0.1588703046306551, 0.14863899735921005, 9.999999999998899e-05, 0.04462245922736252, 0.12751451742700048, 9.999999999998899e-05, 0.15069478231412237, 0.12191501279470285, 0.1204026160007543, 0.13622078229172807, 0.1603209770082198, 0.12862140500537356, 0.1590392476233763, 0.17286558266652774, 0.12526601190711995, 0.04657636265360965, 0.006159675724848213, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05682324666233163, 0.022689796801212858, 0.0645690871550243, 0.07001316062685858, 9.999999999998899e-05, 9.999999999998899e-05, 0.11205355831038688, 0.05130641189517737, 0.03760058504282482, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.07040812057289791, 9.999999999998899e-05, 9.999999999998899e-05, 0.03364847934936133, 9.999999999998899e-05, 0.055939753444067875, 0.10787464542058278, 0.13479190288138576, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.40097684332998795, 0.3468049076174041, 0.3517531001627524, 0.304818990101957, 0.2724576903640632, 0.34065377388542595, 0.2161338535106685, 0.34175642845103593, 0.26805379283401465, 0.032677452313055855, 0.04316115424220335, 0.03933384484732816, 0.10102416369188527, 0.05700026138304071, 0.06637695287141776, 0.0803050320230766, 0.07085191892862419, 0.052362700884427626, 0.12927161547908617, 0.21795085363700695, 0.1724972823384976, 0.2029586859591851, 0.14891663735317873, 0.1631507330416191, 0.18136589681046722, 0.21553406492739757, 0.1898718368761695, 0.15326285078541135, 0.165347548218026, 0.1307068879229446, 0.2025885405488499, 0.167049791917396, 0.26137712519119116, 0.13718850268268323, 0.24212659103208545, 0.11145620867189665, 0.12895516511476668, 0.11290600612631518, 0.12773988337430053, 0.1833036047665585, 0.17778389778997827, 0.09597106159185276, 0.07312609629927647, 0.21349525132620562, 0.09445208103340552, 0.26753901090082155, 0.22051499214149384, 0.19860015142728593, 0.2715695245004125, 0.18035957398910174, 0.21540882960695673, 0.2206292102576003, 0.205855314601333, 0.1932929480975033, 0.17779659067603004, 0.18786451538919458, 0.15351305137150195, 0.18276449232667757, 0.1787964596509808, 0.18528414844307894, 0.16290062379527537, 0.1661851150725122, 0.17144305575628715, 0.12106859645758283, 0.18749206413988417, 0.14505271638476713, 0.2591418378324012, 0.19826633620376, 0.1965464445457119, 0.12129531330450172, 0.16658989871072516, 0.1398484046925239, 0.22967409477827683, 0.15786451665349088, 0.2902975774254166, 0.09123891773988513, 0.16907995983664204, 0.2522514705824519, 0.10487276366958942, 0.227970438506366, 0.12328975483403559, 0.18026713226053648, 0.18771420125092952, 0.1901222893981821, 0.16402543385786417, 0.17421742145800345, 0.18038082777118924, 0.18644649312517825, 0.1876747049163381, 0.17788567342322514, 0.07281843290098655, 0.08340594161646109, 0.05777632020377499, 0.07105634700298868, 0.10922443141077565, 0.07044197549984166, 0.061354927750344124, 0.07496529600437585, 0.07994168244324262]}, "mutation_prompt": null}
{"id": "6f26dbec-5fd2-4986-acd8-c2e9ec99344f", "solution": "import numpy as np\n\nclass DynamicPSO:\n    def __init__(self, budget, dim, swarm_size=20, omega=0.5, phi_p=0.5, phi_g=0.5):\n        self.budget = budget\n        self.dim = dim\n        self.swarm_size = swarm_size\n        self.omega = omega\n        self.phi_p = phi_p\n        self.phi_g = phi_g\n\n    def __call__(self, func):\n        def initialize_swarm():\n            return np.random.uniform(-5.0, 5.0, size=(self.swarm_size, self.dim))\n\n        def update_velocity(position, velocity, pbest, gbest):\n            inertia = self.omega\n            cognitive = self.phi_p * np.random.rand() * (pbest - position)\n            social = self.phi_g * np.random.rand() * (gbest - position)\n            return inertia * velocity + cognitive + social\n\n        swarm = initialize_swarm()\n        pbest = swarm.copy()\n        gbest = swarm[np.argmin([func(p) for p in swarm])]\n        velocity = np.zeros_like(swarm)\n\n        for _ in range(self.budget):\n            for i in range(self.swarm_size):\n                velocity[i] = update_velocity(swarm[i], velocity[i], pbest[i], gbest)\n                swarm[i] += velocity[i]\n                if func(swarm[i]) < func(pbest[i]):\n                    pbest[i] = swarm[i]\n                    if func(swarm[i]) < func(gbest):\n                        gbest = swarm[i]\n\n        return gbest", "name": "DynamicPSO", "description": "Particle Swarm Optimization (PSO) algorithm with dynamic parameter adaptation to efficiently explore and exploit the search space.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "684152c8-896b-4dc9-b5cb-52ee8d4685a2", "metadata": {"aucs": [0.352885821048436, 0.4129518853317632, 0.44478433881653445, 0.20268874484302402, 0.20054093679281904, 0.29756317406533794, 0.22345911796951967, 0.33271359905122144, 0.17894633488611178, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.06757723912623637, 0.06960641392394806, 0.03874486315147585, 0.09125063881669015, 0.06348797502926495, 0.158606190037747, 0.040675902929406815, 0.08453440132547474, 0.10404173326234611, 0.0907602784770215, 0.07165612438195823, 0.03528484177839286, 0.08421081213011383, 0.07094422223107777, 0.021148923816437515, 0.06215844798126635, 0.046282827593121745, 0.022121989413577237, 0.10624348028750685, 0.05659361318680023, 0.12592650775803538, 0.07302361564197968, 0.0950124693019967, 0.07716529969320074, 0.10134634563025302, 0.08833463466920843, 0.1002052336902054, 0.1086045771674713, 0.0779543173421714, 0.059621851672611026, 0.11086441125530333, 0.06416762571795664, 0.05964757269664622, 0.1170884022262908, 0.045215801308159054, 0.06639982290527224, 0.21427726611720666, 0.12279942445187075, 0.1204846366660236, 0.13604074875201766, 0.11816250500380265, 0.05358439285090122, 0.09091390843060088, 0.12143515375593072, 0.15265798339941883, 0.1588703046306551, 0.14863899735921005, 9.999999999998899e-05, 0.04462245922736252, 0.12751451742700048, 9.999999999998899e-05, 0.15069478231412237, 0.12191501279470285, 0.1204026160007543, 0.13622078229172807, 0.1603209770082198, 0.12862140500537356, 0.1590392476233763, 0.17286558266652774, 0.12526601190711995, 0.04657636265360965, 0.006159675724848213, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05682324666233163, 0.022689796801212858, 0.0645690871550243, 0.07001316062685858, 9.999999999998899e-05, 9.999999999998899e-05, 0.11205355831038688, 0.05130641189517737, 0.03760058504282482, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.07040812057289791, 9.999999999998899e-05, 9.999999999998899e-05, 0.03364847934936133, 9.999999999998899e-05, 0.055939753444067875, 0.10787464542058278, 0.13479190288138576, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.40097684332998795, 0.3468049076174041, 0.3517531001627524, 0.304818990101957, 0.2724576903640632, 0.34065377388542595, 0.2161338535106685, 0.34175642845103593, 0.26805379283401465, 0.032677452313055855, 0.04316115424220335, 0.03933384484732816, 0.10102416369188527, 0.05700026138304071, 0.06637695287141776, 0.0803050320230766, 0.07085191892862419, 0.052362700884427626, 0.12927161547908617, 0.21795085363700695, 0.1724972823384976, 0.2029586859591851, 0.14891663735317873, 0.1631507330416191, 0.18136589681046722, 0.21553406492739757, 0.1898718368761695, 0.15326285078541135, 0.165347548218026, 0.1307068879229446, 0.2025885405488499, 0.167049791917396, 0.26137712519119116, 0.13718850268268323, 0.24212659103208545, 0.11145620867189665, 0.12895516511476668, 0.11290600612631518, 0.12773988337430053, 0.1833036047665585, 0.17778389778997827, 0.09597106159185276, 0.07312609629927647, 0.21349525132620562, 0.09445208103340552, 0.26753901090082155, 0.22051499214149384, 0.19860015142728593, 0.2715695245004125, 0.18035957398910174, 0.21540882960695673, 0.2206292102576003, 0.205855314601333, 0.1932929480975033, 0.17779659067603004, 0.18786451538919458, 0.15351305137150195, 0.18276449232667757, 0.1787964596509808, 0.18528414844307894, 0.16290062379527537, 0.1661851150725122, 0.17144305575628715, 0.12106859645758283, 0.18749206413988417, 0.14505271638476713, 0.2591418378324012, 0.19826633620376, 0.1965464445457119, 0.12129531330450172, 0.16658989871072516, 0.1398484046925239, 0.22967409477827683, 0.15786451665349088, 0.2902975774254166, 0.09123891773988513, 0.16907995983664204, 0.2522514705824519, 0.10487276366958942, 0.227970438506366, 0.12328975483403559, 0.18026713226053648, 0.18771420125092952, 0.1901222893981821, 0.16402543385786417, 0.17421742145800345, 0.18038082777118924, 0.18644649312517825, 0.1876747049163381, 0.17788567342322514, 0.07281843290098655, 0.08340594161646109, 0.05777632020377499, 0.07105634700298868, 0.10922443141077565, 0.07044197549984166, 0.061354927750344124, 0.07496529600437585, 0.07994168244324262]}, "mutation_prompt": null}
