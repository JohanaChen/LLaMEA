{"id": "91f90654-ffca-4b75-a396-2c8e8479e934", "solution": "import numpy as np\n\nclass DynamicES:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.sigma = 1.0\n        self.mu = 5\n        self.lambda_ = 20\n\n    def mutate(self, x):\n        return x + self.sigma * np.random.randn(self.dim)\n\n    def __call__(self, func):\n        best_solution = np.random.uniform(-5.0, 5.0, self.dim)\n        best_fitness = func(best_solution)\n        \n        for _ in range(self.budget // self.lambda_):\n            offspring = [self.mutate(best_solution) for _ in range(self.lambda_)]\n            offspring_fitness = [func(sol) for sol in offspring]\n            \n            best_offspring_idx = np.argmin(offspring_fitness)\n            if offspring_fitness[best_offspring_idx] < best_fitness:\n                best_solution = offspring[best_offspring_idx]\n                best_fitness = offspring_fitness[best_offspring_idx]\n            \n            successes = np.sum(np.array(offspring_fitness) < best_fitness)\n            self.sigma *= np.exp(1/np.sqrt(self.dim) * (successes / self.lambda_ - 0.2))\n        \n        return best_solution", "name": "DynamicES", "description": "An Evolutionary Strategy algorithm with a dynamic mutation strategy that adapts the mutation strength based on the success of previous iterations.", "configspace": "", "generation": 0, "fitness": 0.25497633446246926, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.9177627686367165, 0.916138443037986, 0.9217671157907601, 0.9174898388542898, 0.9153332505436992, 0.9185960557661783, 0.9162128251715738, 0.91820929650911, 0.9164346697702764, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.13711437638816237, 0.02321533561872402, 0.038253117236450085, 0.09742653818274194, 0.054267714193423355, 0.08684431980527574, 0.08761803192181417, 0.06672494839644372, 0.09332525645718814, 0.09404536813071396, 0.0292279508658283, 0.019788330546314903, 0.09337837722107556, 0.0584263381581257, 0.03622433451335416, 0.06452184017542717, 0.05416165379384352, 0.06428798204296726, 0.9786501205065347, 0.966920251387065, 0.15567977749341566, 0.9662836883210106, 0.9711158780908621, 0.9615378549575416, 0.9627716945491724, 0.97892673402396, 0.9870471073277081, 0.8802521846455201, 0.8733830101144913, 0.44730582433528154, 0.878579423917475, 0.8819822335602365, 0.8817995099603183, 0.8780668035456816, 0.13221455869986165, 0.881451534349371, 0.2321640119009728, 0.11362242927899568, 0.21094486132769197, 0.22277213168627075, 0.19456922255566556, 0.19357587372417773, 0.17655947368729885, 0.09499021264120455, 0.17555656636566053, 0.20286683671322403, 0.15929785427835086, 0.1502651432353832, 0.2535597194673245, 0.18691736471776543, 0.1350910316142313, 0.190666324077165, 0.14583630193503705, 0.1602928274470492, 0.20922607528161752, 0.1751148948235024, 0.12904582854999624, 0.17659179005254444, 0.19281766886269724, 0.13659230097445985, 0.19053162438405002, 0.22807748220048318, 0.14924199220193446, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.07619098735318641, 9.999999999998899e-05, 0.0962295671022726, 0.008805748448482698, 9.999999999998899e-05, 9.999999999998899e-05, 0.02127497511446652, 0.05602535637922701, 0.1615085491009115, 0.04708304785784512, 0.028192374228627304, 0.043033439558393005, 0.09517910300696963, 9.999999999998899e-05, 0.005459302113576592, 0.3464800143414042, 0.00887708755444272, 0.03291328509367086, 0.12157195770364293, 0.1790699827548664, 0.13223270695325373, 0.09530904047428934, 0.1659128680937707, 0.08431539281811751, 0.12842056201789387, 0.09933595575544318, 0.09239566263205468, 0.23255227772021425, 0.2400721775235397, 0.13018123093014178, 0.15974352759138732, 0.051529130288294644, 0.07973455284079867, 0.5338679121740932, 0.5202230015104776, 0.534761699190106, 0.5865453064144046, 0.5235994366990677, 0.5738457144039761, 0.5437780473241447, 0.5301047409446382, 0.5540000758620853, 0.03845245307397949, 0.03695798128978445, 0.07007503908589585, 0.09778459030677555, 0.05905500225848259, 0.05028928606120919, 0.0711812270831268, 0.06882953386405788, 0.11269473682191511, 0.37598519033937206, 0.21226302556810872, 0.2804314499967746, 0.20321948587080751, 0.28195460985764986, 0.19277376077924957, 0.87834007558735, 0.36586776794270237, 0.21654857289111806, 0.40054147603472856, 0.11023520488648797, 0.11944535164783987, 0.3553269194126252, 0.2708293245044908, 0.14194941474944878, 0.1684958289942302, 0.14919099286420023, 0.16404417780938751, 0.16549932653084398, 0.09224820145511314, 0.07355918567415065, 0.20187142374780065, 0.09351945775429227, 0.11193972683251197, 0.20940423524803997, 0.03620802667337575, 0.038901832013602644, 0.24008089298954294, 0.18417333765764687, 0.15654737293083876, 0.2496222907035378, 0.25672416232449446, 0.16711614326263768, 0.25800660828658817, 0.20273339436035842, 0.14797052122256904, 0.25755335872416274, 0.20096238503596153, 0.17165911605186557, 0.19202646962866066, 0.17591882198929232, 0.20463341168142668, 0.19234400640033533, 0.21196093924507586, 0.21037295443131643, 0.1235529034976125, 0.137579136816239, 0.105693275762765, 0.9608211695673298, 0.11301717864428207, 0.12333418370286142, 0.10860855829619465, 0.11522284975757391, 0.16892013406546558, 0.8790228845699778, 0.11312633455773069, 0.06582847184434626, 0.15706164076186524, 0.21371311065456267, 0.9351616363583333, 0.32503304514939113, 0.05924618927118186, 0.20144882091145222, 0.25575192468226493, 0.24887452135332444, 0.28572463529964165, 0.1891384760376329, 0.26571817405644027, 0.27887530744387945, 0.21840829265043948, 0.4109462307583124, 0.2822206719329341, 0.11959458407286494, 0.10814413125796385, 0.0485166637524328, 0.10595919290254241, 0.04200299320774081, 0.05232919112423828, 0.09798444161968067, 0.06603670109278625, 0.06644259464833158]}, "mutation_prompt": null}
{"id": "cee948df-a79b-43a7-85f9-aa6dee8ae5f8", "solution": "import numpy as np\n\nclass ImprovedES:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.sigma = 1.0\n        self.mu = 5\n        self.lambda_ = 20\n\n    def crossover(self, parent1, parent2):\n        alpha = np.random.rand(self.dim)\n        return alpha * parent1 + (1 - alpha) * parent2\n\n    def mutate(self, x):\n        return x + self.sigma * np.random.randn(self.dim)\n\n    def __call__(self, func):\n        best_solution = np.random.uniform(-5.0, 5.0, self.dim)\n        best_fitness = func(best_solution)\n        \n        for _ in range(self.budget // self.lambda_):\n            offspring = [self.crossover(best_solution, self.mutate(best_solution)) for _ in range(self.lambda_)]\n            offspring_fitness = [func(sol) for sol in offspring]\n            \n            best_offspring_idx = np.argmin(offspring_fitness)\n            if offspring_fitness[best_offspring_idx] < best_fitness:\n                best_solution = offspring[best_offspring_idx]\n                best_fitness = offspring_fitness[best_offspring_idx]\n            \n            successes = np.sum(np.array(offspring_fitness) < best_fitness)\n            self.sigma *= np.exp(1/np.sqrt(self.dim) * (successes / self.lambda_ - 0.2))\n        \n        return best_solution", "name": "ImprovedES", "description": "Improved Evolutionary Strategy algorithm with adaptive mutation and crossover for enhanced exploration-exploitation balance.", "configspace": "", "generation": 1, "fitness": 0.19466637629121056, "feedback": "", "error": "", "parent_id": "91f90654-ffca-4b75-a396-2c8e8479e934", "metadata": {"aucs": [0.9317148811505177, 0.9299358589334724, 0.9331336415464191, 0.9307881121694489, 0.9227972874695369, 0.9252757966582245, 0.9279406088684369, 0.9309547361919004, 0.9268043362580705, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.08696894612784067, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.09869329894753154, 0.02407927346275629, 9.999999999998899e-05, 0.08739765773394481, 0.02578796262456673, 0.0612270084219968, 0.1134455070417778, 0.025836333132134626, 0.08078670071394667, 0.06513133472753585, 0.041379702229714876, 0.012953813950226878, 0.038298901528398765, 0.04112914570879289, 0.04483377508105768, 0.029929552538306203, 0.029417747811421036, 0.055358378480599324, 0.15851603732672848, 0.0843267794656618, 0.09499737913001649, 0.9353493811671817, 0.1102541358293504, 0.18295175884701198, 0.15597708403545385, 0.1679789179662866, 0.1556862681507044, 0.8943136685189073, 0.02255394392602883, 0.10362203379604362, 0.8886556711902042, 0.889608951604678, 0.1771531800067936, 0.8861168601102107, 0.08527721715304781, 0.8850693206595068, 0.14186406592991785, 0.11411220470940875, 0.10475748058421464, 0.21676521181780495, 0.07261031756444558, 0.11754641258348109, 0.16305859107435894, 0.12374392585495098, 0.17503468936115552, 0.32506706038531497, 0.15510876624863346, 0.13651592121683076, 0.22033453804477465, 0.13022129121043635, 0.169404374719481, 0.3606527844538474, 0.2180614067205393, 0.1416581274739971, 0.13781583305005551, 0.17933436514387124, 0.1284620993053588, 0.15934426328070184, 0.1710702625724969, 0.13427775421339283, 0.14614268014860787, 0.24839130764392392, 0.18363844117746275, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.06148478312664918, 9.999999999998899e-05, 9.999999999998899e-05, 0.007772436478343248, 0.0015704999492217597, 9.999999999998899e-05, 0.08102341402798463, 0.04407562781153629, 0.0926417006395972, 0.07054370276047062, 0.020072469549683447, 0.024234200056717392, 0.1316887529445836, 0.02077447254147724, 0.07330011725135632, 0.2897250472177607, 0.05056103179435234, 0.2106725271528901, 0.058561851055751735, 0.09981612736464285, 0.07924028922198634, 0.19760552074189097, 0.14466694964193816, 0.1341746843189836, 0.07516254269745837, 0.07439882478198356, 0.08560885236998206, 0.143857038835411, 0.10202703592654128, 0.06649652341346324, 0.06894701416365401, 9.999999999998899e-05, 0.017249729279252835, 0.5260376202420773, 0.5251788342551552, 0.5397345502260412, 0.575049718548711, 0.5136870069229722, 0.510685735487962, 0.5908229805283517, 0.5648230357321503, 0.5212561871524795, 0.03005786073827954, 9.999999999998899e-05, 9.999999999998899e-05, 0.02509109254997821, 0.02283369416377612, 0.13586397534902095, 0.0875847559545162, 0.08730986901117943, 0.09423546013823902, 0.19294834782224546, 0.230037567441586, 0.297046422659793, 0.26182654544347683, 0.2797141341089754, 0.2194103250795848, 0.2412590089359944, 0.11799639758448865, 0.20467469164223417, 0.12910282813930496, 0.10626972807046875, 0.120127871612695, 0.1943962649537343, 0.11711981969571517, 0.11857915676038788, 0.2553799484561906, 0.09661951469807495, 0.09626505134894792, 0.08125347313669096, 0.06172133083664466, 0.0351891947085029, 0.3020361499810108, 0.06616723479505981, 0.09578845217086196, 0.2337403177220836, 0.05221619637868624, 0.027516099620086387, 0.2932290298628444, 0.16651087141510612, 0.14344704575806777, 0.18819798675392008, 0.13677340009533467, 0.2050795900786998, 0.237505281502441, 0.17341420712446176, 0.16523472332219225, 0.1907573719716381, 0.18124252253300666, 0.19887286943834614, 0.18714563704281606, 0.20470133884444253, 0.20123206228159263, 0.18705562962086786, 0.1749230542855421, 0.19876753651002432, 0.12347261639250118, 0.13756845870208034, 0.0924294847987801, 0.1738551847044575, 0.11296791309428988, 0.06203236389531053, 0.1088308785552703, 0.1273310781822865, 0.16874852503697746, 0.6673376275251183, 0.11370626993575228, 0.12827621812547207, 0.15710605931236155, 0.21256455088268578, 0.035604882926122405, 0.1672518083095743, 0.0591961814062284, 0.1944909043333427, 0.2252736302905849, 0.22550354020365282, 0.2780967927785597, 0.2423355701990918, 0.29563280585329665, 0.2774675028557918, 0.22846246599289743, 0.30112490613632503, 0.2588114438367881, 0.06809652978978753, 0.06301892751888805, 0.051648009820694285, 0.0809929452965431, 0.02682644418517799, 0.07026143362689163, 0.10426921009574286, 0.03824170753445455, 0.045200965524517245]}, "mutation_prompt": null}
