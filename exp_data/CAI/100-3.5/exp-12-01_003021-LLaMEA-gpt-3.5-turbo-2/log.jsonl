{"id": "2034c0a5-2b51-4465-a7c7-13e16883acac", "solution": "import numpy as np\n\nclass HarmonySearch:\n    def __init__(self, budget, dim, hmcr=0.7, par=0.6, bw=0.01):\n        self.budget = budget\n        self.dim = dim\n        self.hmcr = hmcr\n        self.par = par\n        self.bw = bw\n    \n    def generate_harmony(self):\n        return np.random.uniform(-5.0, 5.0, self.dim)\n    \n    def adjust_pitch(self, harmony):\n        for i in range(self.dim):\n            if np.random.rand() < self.par:\n                harmony[i] = harmony[i] + np.random.uniform(-self.bw, self.bw)\n        return harmony\n\n    def __call__(self, func):\n        harmonies = [self.generate_harmony() for _ in range(self.budget)]\n        best_solution = harmonies[0]\n        best_fitness = func(best_solution)\n        \n        for _ in range(self.budget):\n            new_harmony = self.adjust_pitch(harmonies[np.random.choice(range(self.budget))])\n            new_fitness = func(new_harmony)\n            if new_fitness < best_fitness:\n                best_solution = new_harmony\n                best_fitness = new_fitness\n        \n        return best_solution", "name": "HarmonySearch", "description": "Novel Metaheuristic Algorithm using Harmony Search with Adaptive Pitch Adjustment", "configspace": "", "generation": 0, "fitness": 0.08935939381742314, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.16917106546328398, 0.17348835417522546, 0.16786704309885447, 0.17128557219903084, 0.17308354062910458, 0.17168619030351306, 0.16933708170900896, 0.16751789464568023, 0.20264025900838456, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.04431922337799443, 0.04444225133790258, 0.035801096079063455, 0.04114337897104581, 0.03544836286057562, 0.04360048403052019, 0.04731916329223784, 0.06255210674350509, 0.049560396067584445, 0.0322120150930868, 0.04584759240283642, 0.037376282085595625, 0.04032277119610461, 0.05436120952095935, 0.032715880975902056, 0.03501030915844294, 0.03022008119396158, 0.027291517970402857, 0.08572593445438093, 0.07640228945467809, 0.09042133140998143, 0.09094119630448172, 0.07819977980453385, 0.07904696951838719, 0.07570419363163039, 0.09415154826951255, 0.07874944882982304, 0.06753273279669159, 0.07242263081641431, 0.08880814578548146, 0.08943178388701167, 0.056259927822256084, 0.06024550592175004, 0.0676720203643486, 0.0629672532541441, 0.07785212706176958, 0.12845365292690747, 0.18689680992710367, 0.13096631530310876, 0.11041549992154864, 0.08957077878203235, 0.13886462314637082, 0.11156571288477857, 0.14109442635544778, 0.0984449025243288, 0.004884461983316601, 0.009416956772546614, 0.013600114634008453, 0.014906514635972257, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.012361432278751971, 0.009893129183820792, 0.02762540110246281, 9.999999999998899e-05, 0.015217780447858043, 0.015361824787116007, 0.009462444781312529, 0.0018245440747963748, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.07546283620140226, 0.07614290980748284, 0.038670259292195586, 0.075173909782563, 0.026140800212645088, 0.03920264278641028, 0.05381748165147471, 0.034819995471918275, 0.072152062776913, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.21813396151798814, 0.18826705918573605, 0.2189095288646984, 0.19272099576607749, 0.18190723308929824, 0.20240025183485455, 0.20052389131884374, 0.19531166694525803, 0.20315367355319114, 0.041031743245479646, 0.05067926007542156, 0.037813308888619224, 0.05001619884988828, 0.03960803818988612, 0.04825300966981649, 0.07425294249688941, 0.04332201219388443, 0.05229293661734957, 0.12617375023552835, 0.15266199418266513, 0.14354967745678893, 0.13514806242502075, 0.12430162933842925, 0.1242969947761694, 0.14327313228466032, 0.14833582158565095, 0.14426934449661388, 0.15686998851645417, 0.17069381153115848, 0.1675542137075685, 0.16320199317885742, 0.168647296881138, 0.17148099861778154, 0.16426087155178504, 0.1594241526914698, 0.15953910939787475, 0.09579250701404163, 0.1103619073867198, 0.10384711233094845, 0.11563078088042733, 0.11985104519708134, 0.11673457350369276, 0.10981188673928388, 0.11679344424050087, 0.1196650424731528, 0.17966149990593372, 0.1446734647184338, 0.14975920209472038, 0.1501583215031782, 0.1668499225378971, 0.1591172474542596, 0.1424548809828048, 0.15328221293689626, 0.1581098661119893, 0.14809472492924214, 0.14784489950092394, 0.1431613821908595, 0.1308999161152664, 0.14918222566693407, 0.143035501843933, 0.15311004835358266, 0.1273944032301635, 0.15725167728842593, 0.20541018018253998, 0.16502263203300394, 0.1476022481215028, 0.1541356845860159, 0.1262404795550065, 0.14593615291312823, 0.1632426579810301, 0.16347200695988717, 0.13821275031345504, 0.1389020058698568, 0.15916849919695908, 0.16117450055834792, 0.14098772576678598, 0.2656747792565233, 0.16698443520926454, 0.15118735262584138, 0.1550691425132512, 0.2106647677757726, 0.1806115500815928, 0.19328446671891197, 0.19670246730521357, 0.18690358566648624, 0.19625163386164257, 0.19113383692192287, 0.1849724632162597, 0.18518037035514423, 0.18543323560793812, 0.06335484033053651, 0.05087401634361599, 0.050856604104822845, 0.05104988524636933, 0.057035054949848396, 0.05135446562140311, 0.05190669740120646, 0.05236211713159411, 0.07359735257694844]}, "mutation_prompt": null}
{"id": "1bca252c-26cd-4c25-a094-040eecf741b0", "solution": "import numpy as np\n\nclass HarmonySearch:\n    def __init__(self, budget, dim, hmcr=0.7, par=0.6, bw=0.01):\n        self.budget = budget\n        self.dim = dim\n        self.hmcr = hmcr\n        self.par = par\n        self.bw = bw\n    \n    def generate_harmony(self):\n        return np.random.uniform(-5.0, 5.0, self.dim)\n    \n    def adjust_pitch(self, harmony):\n        for i in range(self.dim):\n            if np.random.rand() < self.par:\n                harmony[i] = harmony[i] + np.random.uniform(-self.bw, self.bw)\n        return harmony\n\n    def __call__(self, func):\n        harmonies = [self.generate_harmony() for _ in range(self.budget)]\n        best_solution = harmonies[0]\n        best_fitness = func(best_solution)\n        \n        for _ in range(self.budget):\n            new_harmony = self.adjust_pitch(harmonies[np.random.choice(range(self.budget))])\n            new_fitness = func(new_harmony)\n            if new_fitness < best_fitness:\n                best_solution = new_harmony\n                best_fitness = new_fitness\n        \n        return best_solution", "name": "HarmonySearch", "description": "Novel Metaheuristic Algorithm using Harmony Search with Adaptive Pitch Adjustment", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "2034c0a5-2b51-4465-a7c7-13e16883acac", "metadata": {"aucs": [0.16917106546328398, 0.17348835417522546, 0.16786704309885447, 0.17128557219903084, 0.17308354062910458, 0.17168619030351306, 0.16933708170900896, 0.16751789464568023, 0.20264025900838456, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.04431922337799443, 0.04444225133790258, 0.035801096079063455, 0.04114337897104581, 0.03544836286057562, 0.04360048403052019, 0.04731916329223784, 0.06255210674350509, 0.049560396067584445, 0.0322120150930868, 0.04584759240283642, 0.037376282085595625, 0.04032277119610461, 0.05436120952095935, 0.032715880975902056, 0.03501030915844294, 0.03022008119396158, 0.027291517970402857, 0.08572593445438093, 0.07640228945467809, 0.09042133140998143, 0.09094119630448172, 0.07819977980453385, 0.07904696951838719, 0.07570419363163039, 0.09415154826951255, 0.07874944882982304, 0.06753273279669159, 0.07242263081641431, 0.08880814578548146, 0.08943178388701167, 0.056259927822256084, 0.06024550592175004, 0.0676720203643486, 0.0629672532541441, 0.07785212706176958, 0.12845365292690747, 0.18689680992710367, 0.13096631530310876, 0.11041549992154864, 0.08957077878203235, 0.13886462314637082, 0.11156571288477857, 0.14109442635544778, 0.0984449025243288, 0.004884461983316601, 0.009416956772546614, 0.013600114634008453, 0.014906514635972257, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.012361432278751971, 0.009893129183820792, 0.02762540110246281, 9.999999999998899e-05, 0.015217780447858043, 0.015361824787116007, 0.009462444781312529, 0.0018245440747963748, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.07546283620140226, 0.07614290980748284, 0.038670259292195586, 0.075173909782563, 0.026140800212645088, 0.03920264278641028, 0.05381748165147471, 0.034819995471918275, 0.072152062776913, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.21813396151798814, 0.18826705918573605, 0.2189095288646984, 0.19272099576607749, 0.18190723308929824, 0.20240025183485455, 0.20052389131884374, 0.19531166694525803, 0.20315367355319114, 0.041031743245479646, 0.05067926007542156, 0.037813308888619224, 0.05001619884988828, 0.03960803818988612, 0.04825300966981649, 0.07425294249688941, 0.04332201219388443, 0.05229293661734957, 0.12617375023552835, 0.15266199418266513, 0.14354967745678893, 0.13514806242502075, 0.12430162933842925, 0.1242969947761694, 0.14327313228466032, 0.14833582158565095, 0.14426934449661388, 0.15686998851645417, 0.17069381153115848, 0.1675542137075685, 0.16320199317885742, 0.168647296881138, 0.17148099861778154, 0.16426087155178504, 0.1594241526914698, 0.15953910939787475, 0.09579250701404163, 0.1103619073867198, 0.10384711233094845, 0.11563078088042733, 0.11985104519708134, 0.11673457350369276, 0.10981188673928388, 0.11679344424050087, 0.1196650424731528, 0.17966149990593372, 0.1446734647184338, 0.14975920209472038, 0.1501583215031782, 0.1668499225378971, 0.1591172474542596, 0.1424548809828048, 0.15328221293689626, 0.1581098661119893, 0.14809472492924214, 0.14784489950092394, 0.1431613821908595, 0.1308999161152664, 0.14918222566693407, 0.143035501843933, 0.15311004835358266, 0.1273944032301635, 0.15725167728842593, 0.20541018018253998, 0.16502263203300394, 0.1476022481215028, 0.1541356845860159, 0.1262404795550065, 0.14593615291312823, 0.1632426579810301, 0.16347200695988717, 0.13821275031345504, 0.1389020058698568, 0.15916849919695908, 0.16117450055834792, 0.14098772576678598, 0.2656747792565233, 0.16698443520926454, 0.15118735262584138, 0.1550691425132512, 0.2106647677757726, 0.1806115500815928, 0.19328446671891197, 0.19670246730521357, 0.18690358566648624, 0.19625163386164257, 0.19113383692192287, 0.1849724632162597, 0.18518037035514423, 0.18543323560793812, 0.06335484033053651, 0.05087401634361599, 0.050856604104822845, 0.05104988524636933, 0.057035054949848396, 0.05135446562140311, 0.05190669740120646, 0.05236211713159411, 0.07359735257694844]}, "mutation_prompt": null}
