{"id": "eea5af3e-de86-4926-86ba-2a419377cbde", "solution": "import numpy as np\n\nclass HarmonySearch:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.lower_bound = -5.0\n        self.upper_bound = 5.0\n\n    def generate_initial_harmony(self):\n        return np.random.uniform(self.lower_bound, self.upper_bound, self.dim)\n\n    def generate_new_harmony(self, harmonies, pitch_adjustment_rate=0.3):\n        new_harmony = np.copy(harmonies[np.random.randint(0, len(harmonies))])\n        for i in range(self.dim):\n            if np.random.rand() < pitch_adjustment_rate:\n                new_harmony[i] = np.random.uniform(self.lower_bound, self.upper_bound)\n        return new_harmony\n\n    def __call__(self, func):\n        harmonies = [self.generate_initial_harmony() for _ in range(10)]\n        for _ in range(self.budget):\n            new_harmony = self.generate_new_harmony(harmonies)\n            if func(new_harmony) < func(harmonies[np.argmax([func(h) for h in harmonies])]):\n                harmonies[np.argmax([func(h) for h in harmonies])] = new_harmony\n        return harmonies[np.argmin([func(h) for h in harmonies])]", "name": "HarmonySearch", "description": "Harmony Search Algorithm for black box optimization with the main idea of improving a population of candidate solutions by creating new solutions through a process inspired by the improvisation of musicians in a jazz band.", "configspace": "", "generation": 0, "fitness": 0.08848329810755404, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.22475045087691048, 0.18106338694867963, 0.16974781591760324, 0.20764206778049443, 0.2081294668931878, 0.204658964599724, 0.18742909898187476, 0.20002479416977625, 0.2242747910303845, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05401021952813012, 0.06542304493772189, 0.05684488275952826, 0.053723865350031486, 0.0710123740637909, 0.03842613824062391, 0.06816553696232164, 0.053777363988831706, 0.06184346750442038, 0.05583186651394989, 0.03205912819044188, 0.047541995470515186, 0.06508111644500236, 0.038312746176944135, 0.037821252238661174, 0.05979049770573841, 0.048869682631848765, 0.07352058848824472, 0.11067499183613805, 0.0963245627629592, 0.0906021737549687, 0.09936294877923502, 0.08939494834122319, 0.124817338199678, 0.09033331873345851, 0.08849763527841115, 0.10506261371057046, 0.07261338666665473, 0.06820590236330226, 0.03910448921108378, 0.06806676068947037, 0.05725490804521016, 0.06776817788860912, 0.10620405358469365, 0.08909638386285534, 0.1031183576306004, 0.11705454830753137, 0.12642314925035714, 0.08485642321330011, 0.12334842202828566, 0.09818501690217041, 0.08617176925494441, 0.1699608326534432, 0.10292790075865721, 0.1512938441689763, 0.060079056401917685, 0.02877524223936523, 0.04004110617117762, 0.005957344169903789, 0.038203348544243454, 0.03989658945370689, 0.01541479823601144, 0.0373481132871315, 0.004937487098737092, 9.999999999998899e-05, 0.05925111294500052, 0.036288404459988155, 0.017030444463557837, 0.08712990543503163, 0.02418659597216033, 0.006302011365803772, 0.011057952225965506, 0.04176271124682096, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.046254251077611164, 0.017726796988946303, 0.022961951263692715, 0.01412423347988534, 9.999999999998899e-05, 0.022959936256522484, 0.07511560702266196, 0.034115009244767514, 0.009223909136285346, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0027263625028627336, 9.999999999998899e-05, 0.0019389544787600244, 0.0004953762857716759, 0.015232054888571156, 9.999999999998899e-05, 0.004264435241677522, 0.019073259891349892, 0.004416081444380882, 0.25500737135425466, 0.23215233897729237, 0.2265301916863085, 0.26714477214686305, 0.19134111806878285, 0.20581387847742094, 0.22594191026374266, 0.2051103349518496, 0.2064987591276276, 0.05794893875735929, 0.0441546932277741, 0.03797106930043703, 0.047564984528513876, 0.03390616385208012, 0.05674870118727393, 0.03513753149199872, 0.04926023990131112, 0.04231116422065717, 0.19323321993593723, 0.1013282379032786, 0.11240618059610574, 0.1315288745180513, 0.10481473774455241, 0.10513472868321683, 0.1357083779853483, 0.11338866357816602, 0.09373058049227423, 0.12987624142053134, 0.15835525319626664, 0.13963115293862427, 0.163432782729949, 0.1773925132411598, 0.19260632861609206, 0.14433136335385865, 0.173316033403224, 0.15366849312000008, 0.10550113957269847, 0.10235439698631366, 0.1118631618747018, 0.12858291232359786, 0.11212800766342856, 0.10941119014196488, 0.10902968259135792, 0.12175786626794982, 0.10168792209924882, 0.14790090212371598, 0.1600504424305107, 0.15858088625697986, 0.14480333465980744, 0.14953455266152216, 0.14534823654950302, 0.16217358294715, 0.1455535422533898, 0.14916888802654626, 0.15410262048634016, 0.16648690198499405, 0.143857616171562, 0.18266230081342472, 0.13442533923926236, 0.12448277395438867, 0.14882822347305869, 0.13655477616854728, 0.12767464185199073, 0.14249003569927776, 0.12636181793989376, 0.16046906854972587, 0.12247900837819803, 0.17542444597144913, 0.11126432994590885, 0.11467282693756775, 0.10701498660004816, 0.11538170187818109, 0.10350908464349973, 0.09087237604678322, 0.08637818269086817, 0.10521483490469308, 0.15290002709299966, 0.13659384174159728, 0.23568251676498508, 0.12844498923664394, 0.1319538262368506, 0.16390317375763985, 0.14710694343394903, 0.15358767061682954, 0.15649303878971044, 0.1659254016747016, 0.1716831933818459, 0.15593898788600435, 0.1680781130478426, 0.16025764551653443, 0.04640378302820969, 0.0408506653118087, 0.04514907421155745, 0.059241077783916074, 0.048139768030732055, 0.04879673796466344, 0.05924881808098548, 0.036319868092537955, 0.04533485761845368]}, "mutation_prompt": null}
{"id": "00fef98f-e018-4d74-a743-b01783981c50", "solution": "import numpy as np\n\nclass DynamicHarmonySearch(HarmonySearch):\n    def generate_new_harmony(self, harmonies, pitch_adjustment_rate=0.3):\n        new_harmony = np.copy(harmonies[np.random.randint(0, len(harmonies))])\n        for i in range(self.dim):\n            if np.random.rand() < pitch_adjustment_rate:\n                new_harmony[i] += np.random.normal(scale=0.1) if np.random.rand() < 0.5 else -np.random.normal(scale=0.1)\n                new_harmony[i] = np.clip(new_harmony[i], self.lower_bound, self.upper_bound)\n        return new_harmony", "name": "DynamicHarmonySearch", "description": "Enhancing Harmony Search Algorithm using dynamic pitch adjustment for improved exploration-exploitation balance.", "configspace": "", "generation": 1, "fitness": 0.05413242857547446, "feedback": "", "error": "", "parent_id": "eea5af3e-de86-4926-86ba-2a419377cbde", "metadata": {"aucs": [0.10416359595491853, 0.09353122593038588, 0.11847754409777322, 0.03368599590576016, 0.0769852210233748, 0.0407200623194236, 0.0766164641724929, 0.07600264503655196, 0.09275393559962508, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.007476447741451175, 0.03215826936844535, 9.999999999998899e-05, 0.03289614784596273, 0.006989117268761169, 0.012690054812833251, 0.03880209791926359, 0.02178132679809497, 0.009412340282658027, 0.006782183296012767, 9.999999999998899e-05, 9.999999999998899e-05, 0.06309696300456835, 9.999999999998899e-05, 9.999999999998899e-05, 0.01383237568272544, 0.0018474191160224862, 9.999999999998899e-05, 0.06282741388576252, 0.04665368900906253, 0.06003156080520389, 0.055713678277224066, 0.059787789789818246, 0.042526422572849554, 0.04584072264685879, 0.06444097936281035, 0.03768211104464603, 0.015385766900523401, 0.0018570162710639382, 0.032647948873929966, 0.013417344321180802, 0.02394708495333031, 0.006438414598595732, 0.012887272775418901, 0.029637037819123413, 0.0009949718143530406, 0.12452344856807596, 0.058097736669237565, 0.03832134604405024, 0.01409957510040838, 9.999999999998899e-05, 0.0033947137995439247, 0.039895336897688094, 0.005562365714462447, 0.03739568231895041, 0.0037527567864835687, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.001259697542303706, 9.999999999998899e-05, 0.03266914084011818, 0.02552365988495453, 9.999999999998899e-05, 9.999999999998899e-05, 0.00018798824236143652, 9.999999999998899e-05, 9.999999999998899e-05, 0.04359403208124568, 9.999999999998899e-05, 0.00999560521221321, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.06596686371759874, 0.022160462830176808, 0.06297118967364168, 0.06123629938114994, 9.999999999998899e-05, 0.008246883886337875, 0.12463937349465248, 0.018624904296719036, 0.015757743535926738, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.1247802110440609, 0.15627051318555807, 0.20340429024435658, 0.11248671984222569, 0.10744832706567053, 0.10914416591685783, 0.1603785124431808, 0.12288341080869214, 0.1518530883702871, 0.02107756621616541, 9.999999999998899e-05, 9.999999999998899e-05, 0.021434367138275734, 0.022392706078924518, 0.05635821770252891, 0.019589118338289135, 0.005854596164265979, 0.0720555006627277, 0.13373705529423274, 0.13054700103618178, 0.11660337064519521, 0.14327114991866163, 0.11846811186122708, 0.13892362826436233, 0.12001887567082814, 0.08864265284641493, 0.09085328985012098, 0.11534978275354113, 0.12153716639647205, 0.1152973287119885, 0.14233870877844856, 0.11946360134459444, 0.12238684862097637, 0.13599982937451693, 0.12322981880103012, 0.10011193543228036, 0.061369679356524154, 0.05879987148354371, 0.056692129119588985, 0.07912012581417371, 0.055447767967774064, 0.05863683455919655, 0.06899689729778058, 0.05923026258892716, 0.047231154864403435, 0.17727736906549274, 0.07397242724527153, 0.15066431793254742, 0.1666518964095336, 0.09779480613827196, 0.13747269196111667, 0.15928144868156724, 0.10627265306846345, 0.15752384239694672, 0.02657562198526031, 0.0027377220508940647, 0.09861326699115092, 0.015108454370699076, 0.03080619918062344, 0.0910962206644701, 0.06706650401435399, 0.00400451923727474, 0.01118853113877627, 0.08389947323684699, 0.07172037518002072, 0.14186657021843296, 0.12136550790348333, 0.18459830293843082, 0.08972467703607578, 0.09550364555388968, 0.097851681403058, 0.0861683604012955, 0.06580239854680658, 0.09072203553966973, 0.06132818462543477, 0.06858318706142141, 0.07010511584327173, 0.08267275527963536, 0.05447069868722465, 0.04788845598373592, 0.11197167912052952, 0.16109611240810262, 0.14870458320095736, 0.1724955867303073, 0.17407442290115938, 0.18219572158551378, 0.16010000595831875, 0.1815355389303528, 0.18280977962812917, 0.19245968642455502, 0.034806647638709776, 0.03982965640983638, 0.054203878354501245, 0.0329712939031398, 0.03476430848823675, 0.04637093507589907, 0.03978598681091594, 0.033055290687684424, 0.03428188478197336]}, "mutation_prompt": null}
