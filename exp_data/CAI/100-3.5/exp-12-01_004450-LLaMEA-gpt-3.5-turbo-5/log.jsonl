{"id": "77c9ca8a-906b-4404-b050-97bb3eb171e3", "solution": "import numpy as np\n\nclass FireworkAlgorithm:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n\n    def __call__(self, func):\n        def generate_fireworks(n, dim):\n            return np.random.uniform(-5.0, 5.0, size=(n, dim))\n\n        def explode_fireworks(fireworks, n_explosions):\n            explosions = np.repeat(fireworks, n_explosions, axis=0)\n            spread = np.random.uniform(-1, 1, size=explosions.shape)\n            return explosions + spread\n\n        n_fireworks = 10\n        n_explosions = 5\n        fireworks = generate_fireworks(n_fireworks, self.dim)\n        best_solution = None\n        best_fitness = np.inf\n\n        for _ in range(self.budget):\n            fireworks = explode_fireworks(fireworks, n_explosions)\n            fitness = np.array([func(firework) for firework in fireworks])\n            min_idx = np.argmin(fitness)\n            if fitness[min_idx] < best_fitness:\n                best_solution = fireworks[min_idx]\n                best_fitness = fitness[min_idx]\n\n        return best_solution", "name": "FireworkAlgorithm", "description": "Novel Firework Algorithm for Black Box Optimization with Exploration-Exploitation Balance", "configspace": "", "generation": 0, "fitness": 0.07522537209400652, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.14676301472146502, 0.14970507744434602, 0.1629458757167631, 0.05840591767985037, 0.08634302852312414, 0.07941822140472032, 0.10269156729828077, 0.134287531496337, 0.13458473336107524, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.028203595462428566, 0.03821237777636488, 0.026240875486653548, 0.05130042703405413, 0.03594441031701756, 0.044648712583412964, 0.041790404997337105, 0.04252585490028249, 0.019375238070262424, 0.02997326095895292, 0.002830462574944792, 0.018263551778802456, 0.056805547279425106, 9.999999999998899e-05, 0.014288924168655681, 0.031160923586049494, 0.008476747620574487, 9.999999999998899e-05, 0.08971453541838181, 0.05693193067037228, 0.0781680726827284, 0.06387730629670896, 0.07768498344225339, 0.04878643201364141, 0.05263217480059412, 0.08286204686501408, 0.04245325388998267, 0.11290846322077197, 0.01652953289758441, 0.08214894976755205, 0.021082419323113943, 0.10761143558966269, 0.08632044560390528, 0.06143339501261036, 0.051969562694941684, 0.0008828749185784135, 0.15413284843824782, 0.07726635458575637, 0.09706537252250969, 0.10537536959450389, 0.006352565168212587, 0.03998278225714802, 0.10119788687071685, 0.05401349899003727, 0.16150783426470205, 0.0029788390899775363, 9.999999999998899e-05, 0.06359471975754694, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0008390315278762328, 9.999999999998899e-05, 0.011440788509556321, 0.02255533434163337, 9.999999999998899e-05, 9.999999999998899e-05, 0.03103948081369834, 9.999999999998899e-05, 0.02334947742642146, 0.06529405261754528, 9.999999999998899e-05, 0.005309442778223317, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05840623345382523, 0.06943819602610424, 0.08598442596757128, 0.06310020607430322, 0.03650096277644965, 0.024040411215144553, 0.11953262428484668, 0.02444526930549551, 0.007821972485246409, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.18253370720590023, 0.16841381073213635, 0.1982184880576513, 0.12495499539727684, 0.1714106525261042, 0.11241899254413346, 0.1964553327265881, 0.14752843898786627, 0.174560672248123, 0.025101784964062013, 0.017983969321691662, 0.0033554594189392217, 0.04204398715717039, 0.029775102209058435, 0.049890073822181136, 0.03478853635002832, 0.03660816532220701, 0.05496133951938209, 0.1259394719631427, 0.15089957688677025, 0.18548260349361434, 0.14011540727247962, 0.1532057745543539, 0.16660290123158628, 0.12248274733735054, 0.13175878120236828, 0.13296541350975222, 0.14100113073740306, 0.1462647549490479, 0.13766618415886678, 0.18184253132986195, 0.14515572381634267, 0.1366231821679823, 0.14965651127072965, 0.13096724652515512, 0.11598896720860108, 0.07480862284690992, 0.07140842313681839, 0.07597453134369747, 0.11675341558544838, 0.10083358187578428, 0.09478960652315249, 0.0990145402560405, 0.07801819050496706, 0.06165667615865422, 0.18117422995227184, 0.1221625177504908, 0.1481115930725242, 0.18257577599657493, 0.13648489148875576, 0.16566961743090491, 0.17668045527795329, 0.13335660277250483, 0.17707739042016546, 0.1336551039847076, 0.013820749914558283, 0.13940063991796725, 0.15450860810509326, 0.1571524483264597, 0.12669948151968025, 0.15393172665719734, 9.999999999998899e-05, 0.12754866102762863, 0.13161283652840505, 0.12556239128948654, 0.16831012108380106, 0.14761776878177735, 0.17278657639920836, 0.11398737886990007, 0.11372249237603682, 0.12074002347166302, 0.1613230444900544, 0.17284759047282272, 0.14428556074018284, 0.08395046232535575, 0.11984237772080264, 0.14654035771486762, 0.14663751031028205, 0.09515339160872227, 0.06181656412874892, 0.1573927908117625, 0.18859318827558924, 0.18914787002320965, 0.17035205164337874, 0.18189060164828974, 0.17489565009874108, 0.18101921117949993, 0.1797289608583751, 0.17625750361128667, 0.18051134508188893, 0.062174732183524095, 0.05907049591239555, 0.07337196227868759, 0.04418095544083955, 0.049745052135632295, 0.057435100242783976, 0.045889469767273816, 0.04316842791102371, 0.041677976423411534]}, "mutation_prompt": null}
{"id": "9cf8f55b-d1a2-44f4-b997-4d624a0bcbff", "solution": "import numpy as np\n\nclass FireworkAlgorithm:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n\n    def __call__(self, func):\n        def generate_fireworks(n, dim):\n            return np.random.uniform(-5.0, 5.0, size=(n, dim))\n\n        def explode_fireworks(fireworks, n_explosions):\n            explosions = np.repeat(fireworks, n_explosions, axis=0)\n            spread = np.random.uniform(-1, 1, size=explosions.shape)\n            return explosions + spread\n\n        n_fireworks = 10\n        n_explosions = 5\n        fireworks = generate_fireworks(n_fireworks, self.dim)\n        best_solution = None\n        best_fitness = np.inf\n\n        for _ in range(self.budget):\n            fireworks = explode_fireworks(fireworks, n_explosions)\n            fitness = np.array([func(firework) for firework in fireworks])\n            min_idx = np.argmin(fitness)\n            if fitness[min_idx] < best_fitness:\n                best_solution = fireworks[min_idx]\n                best_fitness = fitness[min_idx]\n\n        return best_solution", "name": "FireworkAlgorithm", "description": "Novel Firework Algorithm for Black Box Optimization with Exploration-Exploitation Balance", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "77c9ca8a-906b-4404-b050-97bb3eb171e3", "metadata": {"aucs": [0.14676301472146502, 0.14970507744434602, 0.1629458757167631, 0.05840591767985037, 0.08634302852312414, 0.07941822140472032, 0.10269156729828077, 0.134287531496337, 0.13458473336107524, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.028203595462428566, 0.03821237777636488, 0.026240875486653548, 0.05130042703405413, 0.03594441031701756, 0.044648712583412964, 0.041790404997337105, 0.04252585490028249, 0.019375238070262424, 0.02997326095895292, 0.002830462574944792, 0.018263551778802456, 0.056805547279425106, 9.999999999998899e-05, 0.014288924168655681, 0.031160923586049494, 0.008476747620574487, 9.999999999998899e-05, 0.08971453541838181, 0.05693193067037228, 0.0781680726827284, 0.06387730629670896, 0.07768498344225339, 0.04878643201364141, 0.05263217480059412, 0.08286204686501408, 0.04245325388998267, 0.11290846322077197, 0.01652953289758441, 0.08214894976755205, 0.021082419323113943, 0.10761143558966269, 0.08632044560390528, 0.06143339501261036, 0.051969562694941684, 0.0008828749185784135, 0.15413284843824782, 0.07726635458575637, 0.09706537252250969, 0.10537536959450389, 0.006352565168212587, 0.03998278225714802, 0.10119788687071685, 0.05401349899003727, 0.16150783426470205, 0.0029788390899775363, 9.999999999998899e-05, 0.06359471975754694, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0008390315278762328, 9.999999999998899e-05, 0.011440788509556321, 0.02255533434163337, 9.999999999998899e-05, 9.999999999998899e-05, 0.03103948081369834, 9.999999999998899e-05, 0.02334947742642146, 0.06529405261754528, 9.999999999998899e-05, 0.005309442778223317, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05840623345382523, 0.06943819602610424, 0.08598442596757128, 0.06310020607430322, 0.03650096277644965, 0.024040411215144553, 0.11953262428484668, 0.02444526930549551, 0.007821972485246409, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.18253370720590023, 0.16841381073213635, 0.1982184880576513, 0.12495499539727684, 0.1714106525261042, 0.11241899254413346, 0.1964553327265881, 0.14752843898786627, 0.174560672248123, 0.025101784964062013, 0.017983969321691662, 0.0033554594189392217, 0.04204398715717039, 0.029775102209058435, 0.049890073822181136, 0.03478853635002832, 0.03660816532220701, 0.05496133951938209, 0.1259394719631427, 0.15089957688677025, 0.18548260349361434, 0.14011540727247962, 0.1532057745543539, 0.16660290123158628, 0.12248274733735054, 0.13175878120236828, 0.13296541350975222, 0.14100113073740306, 0.1462647549490479, 0.13766618415886678, 0.18184253132986195, 0.14515572381634267, 0.1366231821679823, 0.14965651127072965, 0.13096724652515512, 0.11598896720860108, 0.07480862284690992, 0.07140842313681839, 0.07597453134369747, 0.11675341558544838, 0.10083358187578428, 0.09478960652315249, 0.0990145402560405, 0.07801819050496706, 0.06165667615865422, 0.18117422995227184, 0.1221625177504908, 0.1481115930725242, 0.18257577599657493, 0.13648489148875576, 0.16566961743090491, 0.17668045527795329, 0.13335660277250483, 0.17707739042016546, 0.1336551039847076, 0.013820749914558283, 0.13940063991796725, 0.15450860810509326, 0.1571524483264597, 0.12669948151968025, 0.15393172665719734, 9.999999999998899e-05, 0.12754866102762863, 0.13161283652840505, 0.12556239128948654, 0.16831012108380106, 0.14761776878177735, 0.17278657639920836, 0.11398737886990007, 0.11372249237603682, 0.12074002347166302, 0.1613230444900544, 0.17284759047282272, 0.14428556074018284, 0.08395046232535575, 0.11984237772080264, 0.14654035771486762, 0.14663751031028205, 0.09515339160872227, 0.06181656412874892, 0.1573927908117625, 0.18859318827558924, 0.18914787002320965, 0.17035205164337874, 0.18189060164828974, 0.17489565009874108, 0.18101921117949993, 0.1797289608583751, 0.17625750361128667, 0.18051134508188893, 0.062174732183524095, 0.05907049591239555, 0.07337196227868759, 0.04418095544083955, 0.049745052135632295, 0.057435100242783976, 0.045889469767273816, 0.04316842791102371, 0.041677976423411534]}, "mutation_prompt": null}
