{"id": "fb78aa42-6ecf-43a9-9af0-39fed6be17ed", "solution": "", "name": "", "description": "", "configspace": "", "generation": 0, "fitness": -Infinity, "feedback": "No code was extracted.", "error": "", "parent_id": null, "metadata": {}, "mutation_prompt": null}
{"id": "ffc159fa-8c5d-4c19-87b3-a0ce2f88cc80", "solution": "import numpy as np\n\nclass EvolutionaryStrategy:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.population = np.random.uniform(-5.0, 5.0, (budget, dim))\n\n    def __call__(self, func):\n        for _ in range(self.budget):\n            offspring = self.population + np.random.normal(0, 1, (self.budget, self.dim))\n            scores = [func(individual) for individual in offspring]\n            self.population = offspring[np.argsort(scores)]\n\n        return self.population[0]", "name": "EvolutionaryStrategy", "description": "An Evolutionary Strategy algorithm that optimizes black box functions using a population-based approach with mutation and selection.", "configspace": "", "generation": 1, "fitness": 0.089868945349628, "feedback": "", "error": "", "parent_id": "fb78aa42-6ecf-43a9-9af0-39fed6be17ed", "metadata": {"aucs": [0.18363923461329645, 0.17646729423995444, 0.16407044944560945, 0.17292965671070182, 0.16615058266265037, 0.14847084231563712, 0.18449938588516057, 0.1517656720932149, 0.16015865735149926, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.04667698404588305, 0.04161971109975926, 0.049073867120167924, 0.05040632955764557, 0.051594701065469595, 0.034890756134387635, 0.06327474866590177, 0.039236658459594786, 0.044105325808526885, 0.03718667441328072, 0.03653881342576892, 0.03224461032596826, 0.033349739406143275, 0.031387666789793545, 0.026999009857397005, 0.026840582933524315, 0.0495644446752993, 0.04434489403107489, 0.10083573358332965, 0.0925177855642183, 0.10572677200203418, 0.09120282096036425, 0.09399328227682713, 0.09136045250958158, 0.11405383490796173, 0.09997531032730766, 0.08768712075328877, 0.06494610252463495, 0.06666433604157407, 0.10837565578889641, 0.05663510020156626, 0.0624686453742086, 0.07246089440394532, 0.0873116286408454, 0.08093224175136926, 0.1441790261776743, 0.12510426418234033, 0.16146820017681152, 0.1275366323391205, 0.11289543538970992, 0.12863689933575406, 0.12479534256357727, 0.13519970036745366, 0.12606636134118687, 0.11726443276737142, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.00696146309026735, 0.007782426581374624, 0.008385861092069513, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0108875253502978, 9.999999999998899e-05, 0.013463283919554314, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.007851191568893245, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.04441262609266816, 0.09340780697833617, 0.02291145891202706, 0.055010117387329194, 0.03482584649538423, 0.038925613129357606, 0.06669441013761401, 0.07791675752391436, 0.037544411783933196, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.22601894723097915, 0.19551479865997667, 0.19726879732590397, 0.16937060433888307, 0.17546417129368197, 0.19106805419312545, 0.20331590035709712, 0.18809975050711514, 0.200326980527045, 0.03408616212540494, 0.07158874444241048, 0.03346482859315347, 0.062103608000985466, 0.043751631361698906, 0.04335229059697299, 0.07245913286525374, 0.0506852318163441, 0.04244656034232086, 0.12308819100481483, 0.15637199652334344, 0.16629959959140628, 0.12702474914247575, 0.13907558648834606, 0.13560349806239358, 0.13954465863660204, 0.13288867770075863, 0.17284011937725574, 0.15725405989530994, 0.18304284456830633, 0.17791169836684317, 0.1668735461453572, 0.1618332782943478, 0.1599827940612788, 0.17226360483240843, 0.17371806264576772, 0.16949127440008938, 0.10171898424207682, 0.11826441275075772, 0.12326088074030539, 0.1012050002253505, 0.09721523901694751, 0.11192977194161302, 0.09886797632251021, 0.10138324943829935, 0.11064285990994771, 0.15502979157322538, 0.1533466747197072, 0.16470922930715293, 0.17258348849014782, 0.16671047634962, 0.16543242264428593, 0.15551267653661327, 0.15004722926581193, 0.14806866145536535, 0.1603401698576119, 0.16253915849837153, 0.1412549567353737, 0.14398049407638702, 0.13574556178149544, 0.15448855138435447, 0.14381252749890572, 0.15291833508695818, 0.15025038774053956, 0.16807898866982574, 0.17244590196927057, 0.15742633377604798, 0.18247362901000985, 0.15631778753923886, 0.16517498184404233, 0.13991045883584796, 0.16628321006994684, 0.15097581678716576, 0.17324048958099325, 0.16866734298005726, 0.18319063915541323, 0.16535114673518514, 0.16451849999645363, 0.15904850451171237, 0.1367045497561976, 0.16381713895540728, 0.1878931378536799, 0.18919190609107972, 0.17135418131697966, 0.1821322764419483, 0.18645556554741405, 0.18773028485441923, 0.18313928649763878, 0.1831578521233912, 0.18329550048289545, 0.18021323263781908, 0.061725499152943675, 0.05003675489825088, 0.07260089054078722, 0.04911448585931377, 0.04399361397176804, 0.05607442707951127, 0.04859553946082873, 0.05597119756541358, 0.04907543563627115]}, "mutation_prompt": null}
