{"id": "61a3fb28-e21d-45bd-836d-4078ee65c450", "solution": "import numpy as np\n\nclass HarmonySearch:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.hmcr = 0.95  # Harmony Memory Consideration Rate\n        self.par = 0.3  # Pitch Adjustment Rate\n        self.lower_bound = -5.0\n        self.upper_bound = 5.0\n\n    def generate_harmony(self):\n        return np.random.uniform(self.lower_bound, self.upper_bound, self.dim)\n\n    def __call__(self, func):\n        harmony_memory = [self.generate_harmony() for _ in range(self.budget)]\n        for _ in range(self.budget):\n            new_harmony = []\n            for i in range(self.dim):\n                if np.random.rand() < self.hmcr:\n                    new_harmony.append(harmony_memory[np.random.randint(0, len(harmony_memory))][i])\n                else:\n                    new_harmony.append(np.random.uniform(self.lower_bound, self.upper_bound))\n                    if np.random.rand() < self.par:\n                        new_harmony[i] += np.random.uniform(-1, 1) * (self.upper_bound - self.lower_bound)\n            if func(new_harmony) < func(harmony_memory[np.argmax([func(h) for h in harmony_memory])]):\n                harmony_memory[np.argmax([func(h) for h in harmony_memory])] = new_harmony\n        return harmony_memory[np.argmin([func(h) for h in harmony_memory])]", "name": "HarmonySearch", "description": "Novel Harmony Search Algorithm for Black Box Optimization with Adaptive Parameter Control for Exploration and Exploitation Balance.", "configspace": "", "generation": 0, "fitness": 0.09144002726303686, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.177698904020133, 0.17577351321559997, 0.1702418623884523, 0.17148557395731645, 0.18816141387163188, 0.17432566359336377, 0.17855231694593499, 0.16274375001547836, 0.19004702603367252, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.04207181118819958, 0.046534993343592346, 0.036839400040932224, 0.04102398203254376, 0.03731678832126328, 0.03948500884606787, 0.052837959370626075, 0.06701700520165099, 0.058704524243635925, 0.025976348019386974, 0.032503811627128565, 0.048140545759044806, 0.02779852731570409, 0.04926201901559579, 0.057020421632281604, 0.037681439463333355, 0.0399184079264987, 0.029894809412322698, 0.08745933491651847, 0.07417093651580797, 0.09086452553041158, 0.08822053797112728, 0.08031943387062934, 0.08638493666894187, 0.08221839134334818, 0.08620004895713751, 0.07932563663815018, 0.07972844179036476, 0.08042730830735467, 0.10170851224899724, 0.06782645730138115, 0.06227013342806498, 0.06129030325903351, 0.09471475613642377, 0.061019071492969146, 0.09991551377554608, 0.12552280210582722, 0.19307748305686678, 0.14822025136524664, 0.10470376617905308, 0.09684121112678024, 0.13122176631088567, 0.12593706656203285, 0.13683318227600916, 0.11598618367054636, 0.004349402882483311, 0.004559187058575498, 0.006203749059789931, 0.004186899678921718, 9.999999999998899e-05, 0.0004336370390359834, 9.999999999998899e-05, 9.999999999998899e-05, 0.01987030630860409, 0.008146892275586848, 0.06956470724551678, 9.999999999998899e-05, 0.011986350149935432, 0.03535840065101015, 0.011858682588383629, 0.017991458835385332, 0.006567324527671059, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05293066605635832, 0.06858148785699814, 0.045269797804220024, 0.06941112816724648, 0.032581605697584615, 0.05576390958740174, 0.05294955197922957, 0.05008036188466414, 0.06420917905398615, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.006753660557978547, 9.999999999998899e-05, 0.22079753857186502, 0.1929665707189533, 0.19493310234416872, 0.20555914619402627, 0.189214447886644, 0.20724934380317916, 0.199887724781301, 0.17858591536104507, 0.2040713909391504, 0.05000674134022598, 0.04250081260442207, 0.04401354380985645, 0.043175496421032356, 0.0404410678349314, 0.0460047386241913, 0.07325431533122828, 0.04398834099198412, 0.052292007466137824, 0.13751447625046764, 0.12736563022453684, 0.1372004293314263, 0.14126519919414493, 0.14113763878659324, 0.13012593699422526, 0.1503273015825054, 0.14860093965429422, 0.13383634010038037, 0.17180977675469677, 0.16055402722692036, 0.176028872958087, 0.16777796610308893, 0.18213398616334076, 0.17695698322810827, 0.16590156211630658, 0.1737638829580852, 0.15373766217082907, 0.11533015291175852, 0.10381055238742187, 0.11847750050851391, 0.1123607988169184, 0.1360913411361706, 0.11675651491386563, 0.10627516141721893, 0.12373029402302016, 0.12290564950921745, 0.141049312726222, 0.16232629349167726, 0.15832921750443218, 0.16014405891832162, 0.14534409580618413, 0.16234484119350223, 0.15532084249135147, 0.17353738309665678, 0.18275834357348464, 0.14193485213802493, 0.14586449451848382, 0.14259041461358923, 0.14100097576108184, 0.1441010484178551, 0.15280612144374717, 0.14094849417856947, 0.14173886399410018, 0.16206245603310943, 0.18400861827003112, 0.1667788294439868, 0.16655847931321188, 0.15962784341698022, 0.15118956856737698, 0.14118296762189353, 0.16138219178679736, 0.16338726572497997, 0.1764813443543739, 0.15766821400139963, 0.15831841354707377, 0.1648849890324955, 0.15031423802330024, 0.18883921340696475, 0.16043845483253794, 0.1685434116683706, 0.17336519276468187, 0.20285710705021043, 0.17572661170916548, 0.19093562010682485, 0.17585198563041993, 0.18682351215133675, 0.21355847147121432, 0.18381552630914333, 0.17593190879729825, 0.18933472584676292, 0.2056740242823787, 0.058337591726141724, 0.055311508372997586, 0.06584479092933959, 0.05185770465577788, 0.059342307643750924, 0.05592727983955936, 0.07531744645000493, 0.05491089411749617, 0.06072253704938846]}, "mutation_prompt": null}
{"id": "09375b05-a386-456c-b02b-3136273e893f", "solution": "import numpy as np\n\nclass HarmonySearch:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.hmcr = 0.95  # Harmony Memory Consideration Rate\n        self.par = 0.3  # Pitch Adjustment Rate\n        self.lower_bound = -5.0\n        self.upper_bound = 5.0\n\n    def generate_harmony(self):\n        return np.random.uniform(self.lower_bound, self.upper_bound, self.dim)\n\n    def __call__(self, func):\n        harmony_memory = [self.generate_harmony() for _ in range(self.budget)]\n        for _ in range(self.budget):\n            new_harmony = []\n            for i in range(self.dim):\n                if np.random.rand() < self.hmcr:\n                    new_harmony.append(harmony_memory[np.random.randint(0, len(harmony_memory))][i])\n                else:\n                    new_harmony.append(np.random.uniform(self.lower_bound, self.upper_bound))\n                    if np.random.rand() < self.par:\n                        new_harmony[i] += np.random.uniform(-1, 1) * (self.upper_bound - self.lower_bound) * np.exp(-2.0 * _ / self.budget)\n            if func(new_harmony) < func(harmony_memory[np.argmax([func(h) for h in harmony_memory])]):\n                harmony_memory[np.argmax([func(h) for h in harmony_memory])] = new_harmony\n        return harmony_memory[np.argmin([func(h) for h in harmony_memory])]", "name": "HarmonySearch", "description": "Improved Harmony Search Algorithm with Dynamic Bandwidth Adjustment for Enhanced Exploration and Exploitation Balance", "configspace": "", "generation": 1, "fitness": 0.09144002726303686, "feedback": "", "error": "", "parent_id": "61a3fb28-e21d-45bd-836d-4078ee65c450", "metadata": {"aucs": [0.177698904020133, 0.17577351321559997, 0.1702418623884523, 0.17148557395731645, 0.18816141387163188, 0.17432566359336377, 0.17855231694593499, 0.16274375001547836, 0.19004702603367252, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.04207181118819958, 0.046534993343592346, 0.036839400040932224, 0.04102398203254376, 0.03731678832126328, 0.03948500884606787, 0.052837959370626075, 0.06701700520165099, 0.058704524243635925, 0.025976348019386974, 0.032503811627128565, 0.048140545759044806, 0.02779852731570409, 0.04926201901559579, 0.057020421632281604, 0.037681439463333355, 0.0399184079264987, 0.029894809412322698, 0.08745933491651847, 0.07417093651580797, 0.09086452553041158, 0.08822053797112728, 0.08031943387062934, 0.08638493666894187, 0.08221839134334818, 0.08620004895713751, 0.07932563663815018, 0.07972844179036476, 0.08042730830735467, 0.10170851224899724, 0.06782645730138115, 0.06227013342806498, 0.06129030325903351, 0.09471475613642377, 0.061019071492969146, 0.09991551377554608, 0.12552280210582722, 0.19307748305686678, 0.14822025136524664, 0.10470376617905308, 0.09684121112678024, 0.13122176631088567, 0.12593706656203285, 0.13683318227600916, 0.11598618367054636, 0.004349402882483311, 0.004559187058575498, 0.006203749059789931, 0.004186899678921718, 9.999999999998899e-05, 0.0004336370390359834, 9.999999999998899e-05, 9.999999999998899e-05, 0.01987030630860409, 0.008146892275586848, 0.06956470724551678, 9.999999999998899e-05, 0.011986350149935432, 0.03535840065101015, 0.011858682588383629, 0.017991458835385332, 0.006567324527671059, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.05293066605635832, 0.06858148785699814, 0.045269797804220024, 0.06941112816724648, 0.032581605697584615, 0.05576390958740174, 0.05294955197922957, 0.05008036188466414, 0.06420917905398615, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.006753660557978547, 9.999999999998899e-05, 0.22079753857186502, 0.1929665707189533, 0.19493310234416872, 0.20555914619402627, 0.189214447886644, 0.20724934380317916, 0.199887724781301, 0.17858591536104507, 0.2040713909391504, 0.05000674134022598, 0.04250081260442207, 0.04401354380985645, 0.043175496421032356, 0.0404410678349314, 0.0460047386241913, 0.07325431533122828, 0.04398834099198412, 0.052292007466137824, 0.13751447625046764, 0.12736563022453684, 0.1372004293314263, 0.14126519919414493, 0.14113763878659324, 0.13012593699422526, 0.1503273015825054, 0.14860093965429422, 0.13383634010038037, 0.17180977675469677, 0.16055402722692036, 0.176028872958087, 0.16777796610308893, 0.18213398616334076, 0.17695698322810827, 0.16590156211630658, 0.1737638829580852, 0.15373766217082907, 0.11533015291175852, 0.10381055238742187, 0.11847750050851391, 0.1123607988169184, 0.1360913411361706, 0.11675651491386563, 0.10627516141721893, 0.12373029402302016, 0.12290564950921745, 0.141049312726222, 0.16232629349167726, 0.15832921750443218, 0.16014405891832162, 0.14534409580618413, 0.16234484119350223, 0.15532084249135147, 0.17353738309665678, 0.18275834357348464, 0.14193485213802493, 0.14586449451848382, 0.14259041461358923, 0.14100097576108184, 0.1441010484178551, 0.15280612144374717, 0.14094849417856947, 0.14173886399410018, 0.16206245603310943, 0.18400861827003112, 0.1667788294439868, 0.16655847931321188, 0.15962784341698022, 0.15118956856737698, 0.14118296762189353, 0.16138219178679736, 0.16338726572497997, 0.1764813443543739, 0.15766821400139963, 0.15831841354707377, 0.1648849890324955, 0.15031423802330024, 0.18883921340696475, 0.16043845483253794, 0.1685434116683706, 0.17336519276468187, 0.20285710705021043, 0.17572661170916548, 0.19093562010682485, 0.17585198563041993, 0.18682351215133675, 0.21355847147121432, 0.18381552630914333, 0.17593190879729825, 0.18933472584676292, 0.2056740242823787, 0.058337591726141724, 0.055311508372997586, 0.06584479092933959, 0.05185770465577788, 0.059342307643750924, 0.05592727983955936, 0.07531744645000493, 0.05491089411749617, 0.06072253704938846]}, "mutation_prompt": null}
