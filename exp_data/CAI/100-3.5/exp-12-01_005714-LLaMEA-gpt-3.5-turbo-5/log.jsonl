{"id": "5974c25e-b93b-4317-ae24-50ce5c1ec134", "solution": "import numpy as np\n\nclass HarmonySearchOptimizer:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.lower_bound = -5.0\n        self.upper_bound = 5.0\n        self.bandwidth = 0.01\n\n    def __call__(self, func):\n        def generate_harmony():\n            return np.random.uniform(self.lower_bound, self.upper_bound, self.dim)\n\n        def improvise_harmony(memory, pitch_adjustment_rate):\n            new_harmony = np.array([max(min(note + np.random.uniform(-pitch_adjustment_rate, pitch_adjustment_rate), self.upper_bound), self.lower_bound) for note in memory])\n            return new_harmony\n\n        harmonies = [generate_harmony() for _ in range(5)]\n        fitness_values = [func(harmony) for harmony in harmonies]\n\n        for _ in range(self.budget - 5):\n            pitch_adjustment_rate = (1.0 - ((_) / (self.budget - 5))) * self.bandwidth\n            new_harmony = improvise_harmony(harmonies[np.argmax(fitness_values)], pitch_adjustment_rate)\n            new_fitness = func(new_harmony)\n\n            if new_fitness < max(fitness_values):\n                index_to_replace = np.argmax(fitness_values)\n                harmonies[index_to_replace] = new_harmony\n                fitness_values[index_to_replace] = new_fitness\n\n        return harmonies[np.argmin(fitness_values)]", "name": "HarmonySearchOptimizer", "description": "Harmony Search Optimizer for Black Box Optimization over a bounded search space.", "configspace": "", "generation": 0, "fitness": 0.02984675145828615, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.0773288248240036, 0.06669104282771587, 0.09153078020424088, 0.021667267419091196, 0.05267361210777377, 0.027431982029967883, 0.03222514068478122, 0.051926560117397824, 0.06711154613058024, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0012186513362246743, 9.999999999998899e-05, 0.018248263482334326, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.045179741609489454, 0.033667547960281485, 0.04287777107098589, 0.039088515291900494, 0.04687545855643349, 0.03058144271518759, 0.03327721672346584, 0.048986754550083944, 0.025975903368220532, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.00031549654350837564, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.032420390398068766, 9.999999999998899e-05, 9.999999999998899e-05, 0.004562218041036625, 9.999999999998899e-05, 9.999999999998899e-05, 0.026279303607937843, 9.999999999998899e-05, 0.00990846602666351, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0110626079238485, 0.013872965425800965, 0.005693430515157916, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.029407087000402732, 0.1070271971752389, 0.14838054695461433, 0.06845294934585322, 0.08051072568095674, 0.04457031991552973, 0.09461470627041313, 0.1016477479917216, 0.11428681122064532, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0267656688986897, 0.0570176786646851, 0.06735693451091307, 0.05468846648487902, 0.09855305120349966, 0.06581597144687368, 0.05643121168494414, 0.035425536348623776, 0.025876799553841034, 0.07726393575557644, 0.09125260076425479, 0.0962505644704219, 0.10359778603806002, 0.10273960207795751, 0.08299910073640826, 0.0679401066982891, 0.11420206329748472, 0.1001363042967901, 0.07132591053364068, 0.033318937593247444, 0.030850512655025697, 0.03464785118471059, 0.044650675553987496, 0.0154886331024634, 0.0284366169571878, 0.05648699256316181, 0.038530072755655564, 0.006085082791499552, 0.0916346253723066, 0.04276975942751238, 0.06804331621272863, 0.09130231661935506, 0.06747178230817008, 0.06909381357387978, 0.12245976138762271, 0.04841409155719634, 0.08902628122675849, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.06191656908468923, 0.056143274529988574, 0.06263956066849985, 0.07281561209584564, 0.1207914665021157, 0.02167170536874563, 0.06305837526933644, 0.056615725614002965, 0.07221857038893509, 0.03600096115587692, 0.03967402848431323, 0.01726525566055448, 0.018606112313171663, 0.03421159566915433, 0.045511073114331335, 0.02379066189814949, 0.01611124758086757, 0.030851750248025, 0.14948651240932964, 0.13789721360994955, 0.15126077784584047, 0.18750921090860717, 0.1710701367285583, 0.1748911387125529, 0.1494684367267135, 0.1421583349089548, 0.17153191351546393, 9.999999999998899e-05, 0.0021606320767044718, 0.009977089842196252, 9.999999999998899e-05, 0.0058749879062220955, 9.999999999998899e-05, 0.00378771705097114, 9.999999999998899e-05, 0.007003257745281877]}, "mutation_prompt": null}
{"id": "1ade6144-3c97-47d1-8148-8d73bac49a0c", "solution": "import numpy as np\n\nclass HarmonySearchOptimizer:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        self.lower_bound = -5.0\n        self.upper_bound = 5.0\n        self.bandwidth = 0.01\n\n    def __call__(self, func):\n        def generate_harmony():\n            return np.random.uniform(self.lower_bound, self.upper_bound, self.dim)\n\n        def improvise_harmony(memory, pitch_adjustment_rate):\n            new_harmony = np.array([max(min(note + np.random.uniform(-pitch_adjustment_rate, pitch_adjustment_rate), self.upper_bound), self.lower_bound) for note in memory])\n            return new_harmony\n\n        harmonies = [generate_harmony() for _ in range(5)]\n        fitness_values = [func(harmony) for harmony in harmonies]\n\n        for _ in range(self.budget - 5):\n            pitch_adjustment_rate = (1.0 - ((_) / (self.budget - 5))) * self.bandwidth\n            new_harmony = improvise_harmony(harmonies[np.argmax(fitness_values)], pitch_adjustment_rate)\n            new_fitness = func(new_harmony)\n\n            if new_fitness < max(fitness_values):\n                index_to_replace = np.argmax(fitness_values)\n                harmonies[index_to_replace] = new_harmony\n                fitness_values[index_to_replace] = new_fitness\n\n        return harmonies[np.argmin(fitness_values)]", "name": "HarmonySearchOptimizer", "description": "Harmony Search Optimizer for Black Box Optimization over a bounded search space.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "5974c25e-b93b-4317-ae24-50ce5c1ec134", "metadata": {"aucs": [0.0773288248240036, 0.06669104282771587, 0.09153078020424088, 0.021667267419091196, 0.05267361210777377, 0.027431982029967883, 0.03222514068478122, 0.051926560117397824, 0.06711154613058024, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0012186513362246743, 9.999999999998899e-05, 0.018248263482334326, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.045179741609489454, 0.033667547960281485, 0.04287777107098589, 0.039088515291900494, 0.04687545855643349, 0.03058144271518759, 0.03327721672346584, 0.048986754550083944, 0.025975903368220532, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.00031549654350837564, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.032420390398068766, 9.999999999998899e-05, 9.999999999998899e-05, 0.004562218041036625, 9.999999999998899e-05, 9.999999999998899e-05, 0.026279303607937843, 9.999999999998899e-05, 0.00990846602666351, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0110626079238485, 0.013872965425800965, 0.005693430515157916, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.029407087000402732, 0.1070271971752389, 0.14838054695461433, 0.06845294934585322, 0.08051072568095674, 0.04457031991552973, 0.09461470627041313, 0.1016477479917216, 0.11428681122064532, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0267656688986897, 0.0570176786646851, 0.06735693451091307, 0.05468846648487902, 0.09855305120349966, 0.06581597144687368, 0.05643121168494414, 0.035425536348623776, 0.025876799553841034, 0.07726393575557644, 0.09125260076425479, 0.0962505644704219, 0.10359778603806002, 0.10273960207795751, 0.08299910073640826, 0.0679401066982891, 0.11420206329748472, 0.1001363042967901, 0.07132591053364068, 0.033318937593247444, 0.030850512655025697, 0.03464785118471059, 0.044650675553987496, 0.0154886331024634, 0.0284366169571878, 0.05648699256316181, 0.038530072755655564, 0.006085082791499552, 0.0916346253723066, 0.04276975942751238, 0.06804331621272863, 0.09130231661935506, 0.06747178230817008, 0.06909381357387978, 0.12245976138762271, 0.04841409155719634, 0.08902628122675849, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.06191656908468923, 0.056143274529988574, 0.06263956066849985, 0.07281561209584564, 0.1207914665021157, 0.02167170536874563, 0.06305837526933644, 0.056615725614002965, 0.07221857038893509, 0.03600096115587692, 0.03967402848431323, 0.01726525566055448, 0.018606112313171663, 0.03421159566915433, 0.045511073114331335, 0.02379066189814949, 0.01611124758086757, 0.030851750248025, 0.14948651240932964, 0.13789721360994955, 0.15126077784584047, 0.18750921090860717, 0.1710701367285583, 0.1748911387125529, 0.1494684367267135, 0.1421583349089548, 0.17153191351546393, 9.999999999998899e-05, 0.0021606320767044718, 0.009977089842196252, 9.999999999998899e-05, 0.0058749879062220955, 9.999999999998899e-05, 0.00378771705097114, 9.999999999998899e-05, 0.007003257745281877]}, "mutation_prompt": null}
