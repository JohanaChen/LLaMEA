{"id": "e27740a2-07d6-4e8f-9219-f695dfb5c3fb", "solution": "import numpy as np\n\nclass QIEA:\n    def __init__(self, budget, dim, pop_size=50, mutation_rate=0.1):\n        self.budget = budget\n        self.dim = dim\n        self.pop_size = pop_size\n        self.mutation_rate = mutation_rate\n\n    def __call__(self, func):\n        def evolve_population(population, fitness):\n            fitness_order = np.argsort(fitness)\n            new_population = []\n            for i in range(self.pop_size):\n                parent1 = population[fitness_order[i % self.pop_size]]\n                parent2 = population[fitness_order[(i+1) % self.pop_size]]\n                child = parent1 + np.random.uniform(-1, 1, self.dim) * (parent2 - parent1)\n                if np.random.rand() < self.mutation_rate:\n                    child += np.random.normal(0, 1, self.dim)\n                new_population.append(child)\n            return np.array(new_population)\n        \n        population = np.random.uniform(-5.0, 5.0, (self.pop_size, self.dim))\n        fitness = np.array([func(individual) for individual in population])\n        \n        for _ in range(self.budget // self.pop_size):\n            new_population = evolve_population(population, fitness)\n            new_fitness = np.array([func(individual) for individual in new_population])\n            mask = new_fitness < fitness\n            population[mask] = new_population[mask]\n            fitness[mask] = new_fitness[mask]\n            \n        best_idx = np.argmin(fitness)\n        return population[best_idx]", "name": "QIEA", "description": "Quantum-Inspired Evolutionary Algorithm (QIEA) that leverages quantum concepts like superposition and entanglement to guide the search for optimal solutions in a population-based metaheuristic.", "configspace": "", "generation": 0, "fitness": 0.2671509295524546, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.7617673626981509, 0.7802844306286931, 0.738240654134704, 0.7218164628575505, 0.7710251594448566, 0.75322443190065, 0.72771828581248, 0.7089959493585931, 0.7439719149231201, 0.474741936278149, 0.5114674014959552, 0.5168258218562372, 0.5464206924364824, 0.46500690566153513, 0.4924217820793819, 0.46678158156879057, 0.5093337488593855, 0.551225434433492, 0.1505858013774226, 0.14489304732265718, 0.12716575004580755, 0.12242973349864006, 0.12431817608910678, 0.13207558986878687, 0.13238884945493246, 0.15097360916151992, 0.2978585488328932, 0.12860575765362248, 0.09760955946495997, 0.09067863993341763, 0.10541440370532817, 0.12941045317975441, 0.11411001525259856, 0.10691908292074204, 0.11929697685982954, 0.10760009967762763, 0.9195277956830763, 0.9465305060805292, 0.9459778415068534, 0.9587099920511966, 0.9444234783315328, 0.953828126207179, 0.9581708441164922, 0.9526810773619286, 0.9504817774908726, 0.23738558209791216, 0.21390352771293042, 0.2430228751505782, 0.2438302728235886, 0.2123792343212887, 0.22645443469190973, 0.18467703122487678, 0.19064684575274382, 0.1856335718205142, 0.348650123484472, 0.4690005939540365, 0.22279484428462615, 0.49834182141477024, 0.2564379734683191, 0.2581362118660351, 0.21569886781440983, 0.22372036775593296, 0.3043933484003357, 0.12594905649187038, 0.18639905542274426, 0.12487042613896504, 0.1394062300296084, 0.328435292581327, 0.14263982374742168, 0.1535230873974791, 0.3132079389617425, 0.14780701957144016, 0.13631004226204035, 0.1831362036997266, 0.15235902379874555, 0.15941582826864198, 0.13006580612770247, 0.13054325909020104, 0.14113646628753718, 0.1879240069086432, 0.19601390027758603, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.009104145727832136, 0.0368501878123223, 0.006142860833762476, 0.05480016240203822, 0.04208275952576279, 0.052356540422297204, 0.08663544587022665, 0.0623269528637842, 0.04023318594817138, 0.07924342529213713, 0.09526755363750505, 0.06882659531180091, 0.06961051073078683, 0.07230841547687028, 0.247585686175122, 0.07779017645334074, 0.10560026599334593, 0.03950733719506261, 0.10984788606810503, 0.1289243648323698, 0.15320063402809614, 0.06895130513091319, 0.15917792529236163, 0.11278903788404804, 0.09426297407067463, 0.17082877410784425, 0.10206648540856955, 0.257371877349297, 0.14941672781040993, 0.12081034225342069, 0.11544906597839066, 0.44987632270134814, 0.5317538313598024, 0.5280812134921596, 0.4817806180032109, 0.44244041789712163, 0.4242597354340665, 0.5072322038957134, 0.47431273447020617, 0.529026990744216, 0.12282710128869645, 0.130285241988788, 0.09001512864570782, 0.13978554981863367, 0.12473111757091515, 0.10047240389125767, 0.10281273788185896, 0.1051797775646175, 0.11317121005993136, 0.18539931576284185, 0.13788645690646884, 0.12645060799140462, 0.14910269383699504, 0.29707958767140585, 0.1292951616645005, 0.13138735375138644, 0.12771467245181034, 0.13921148396443805, 0.28874139660847464, 0.36569749643816707, 0.32213159671862146, 0.36985261914689815, 0.2610397122829935, 0.33003902076160196, 0.4035366385965321, 0.4144473633180633, 0.3776424625119761, 0.26893098165077656, 0.31793566510025006, 0.27208477048077273, 0.27503155597110873, 0.2795331463723606, 0.3191322292504376, 0.2286766459020647, 0.27857854223342415, 0.27365034206721917, 0.23399037584312565, 0.19667497148510082, 0.20608235780909068, 0.2150541126281309, 0.20379973121233386, 0.22718577614545998, 0.19121674668766386, 0.20617041108361767, 0.20312802620961856, 0.18922292694430676, 0.2251686931503203, 0.23686712767590734, 0.22559724155042982, 0.21167054219675918, 0.2076189920709871, 0.20590361895923948, 0.19869547884981198, 0.2233919993389799, 0.1839706576551, 0.18200340867607756, 0.4472406364567034, 0.5960710117998245, 0.7215703401218465, 0.5321542806764046, 0.16524517644258563, 0.16289754731048156, 0.7096414425073074, 0.20419438455771943, 0.21956497368787187, 0.34576877222429425, 0.35375190100292264, 0.20445989901612815, 0.21113390564611523, 0.40078695184064295, 0.1821596259191418, 0.16048193469878946, 0.17826411748412907, 0.16849834727131474, 0.1954335081864439, 0.19866514057871432, 0.18283364585707051, 0.1751222870417436, 0.1714310814668415, 0.18182705602406724, 0.19297043654863277, 0.11365387379406511, 0.08639128222630699, 0.08846896649891711, 0.10920196980712393, 0.08709396709556316, 0.10406123441437809, 0.081431092273901, 0.08926167546753061, 0.0831461725444862]}, "mutation_prompt": null}
{"id": "19d5adbc-4d3a-43ac-859b-76e235364863", "solution": "import numpy as np\n\nclass QIEA:\n    def __init__(self, budget, dim, pop_size=50, mutation_rate=0.1):\n        self.budget = budget\n        self.dim = dim\n        self.pop_size = pop_size\n        self.mutation_rate = mutation_rate\n\n    def __call__(self, func):\n        def evolve_population(population, fitness):\n            fitness_order = np.argsort(fitness)\n            new_population = []\n            for i in range(self.pop_size):\n                parent1 = population[fitness_order[i % self.pop_size]]\n                parent2 = population[fitness_order[(i+1) % self.pop_size]]\n                child = parent1 + np.random.uniform(-1, 1, self.dim) * (parent2 - parent1)\n                if np.random.rand() < self.mutation_rate:\n                    child += np.random.normal(0, 1, self.dim)\n                new_population.append(child)\n            return np.array(new_population)\n        \n        population = np.random.uniform(-5.0, 5.0, (self.pop_size, self.dim))\n        fitness = np.array([func(individual) for individual in population])\n        \n        for _ in range(self.budget // self.pop_size):\n            new_population = evolve_population(population, fitness)\n            new_fitness = np.array([func(individual) for individual in new_population])\n            mask = new_fitness < fitness\n            population[mask] = new_population[mask]\n            fitness[mask] = new_fitness[mask]\n            \n        best_idx = np.argmin(fitness)\n        return population[best_idx]", "name": "QIEA", "description": "Quantum-Inspired Evolutionary Algorithm (QIEA) that leverages quantum concepts like superposition and entanglement to guide the search for optimal solutions in a population-based metaheuristic.", "configspace": "", "generation": 1, "fitness": -Infinity, "feedback": "No code was extracted. The code should be encapsulated with ``` in your response.", "error": "The code should be encapsulated with ``` in your response.", "parent_id": "e27740a2-07d6-4e8f-9219-f695dfb5c3fb", "metadata": {"aucs": [0.7617673626981509, 0.7802844306286931, 0.738240654134704, 0.7218164628575505, 0.7710251594448566, 0.75322443190065, 0.72771828581248, 0.7089959493585931, 0.7439719149231201, 0.474741936278149, 0.5114674014959552, 0.5168258218562372, 0.5464206924364824, 0.46500690566153513, 0.4924217820793819, 0.46678158156879057, 0.5093337488593855, 0.551225434433492, 0.1505858013774226, 0.14489304732265718, 0.12716575004580755, 0.12242973349864006, 0.12431817608910678, 0.13207558986878687, 0.13238884945493246, 0.15097360916151992, 0.2978585488328932, 0.12860575765362248, 0.09760955946495997, 0.09067863993341763, 0.10541440370532817, 0.12941045317975441, 0.11411001525259856, 0.10691908292074204, 0.11929697685982954, 0.10760009967762763, 0.9195277956830763, 0.9465305060805292, 0.9459778415068534, 0.9587099920511966, 0.9444234783315328, 0.953828126207179, 0.9581708441164922, 0.9526810773619286, 0.9504817774908726, 0.23738558209791216, 0.21390352771293042, 0.2430228751505782, 0.2438302728235886, 0.2123792343212887, 0.22645443469190973, 0.18467703122487678, 0.19064684575274382, 0.1856335718205142, 0.348650123484472, 0.4690005939540365, 0.22279484428462615, 0.49834182141477024, 0.2564379734683191, 0.2581362118660351, 0.21569886781440983, 0.22372036775593296, 0.3043933484003357, 0.12594905649187038, 0.18639905542274426, 0.12487042613896504, 0.1394062300296084, 0.328435292581327, 0.14263982374742168, 0.1535230873974791, 0.3132079389617425, 0.14780701957144016, 0.13631004226204035, 0.1831362036997266, 0.15235902379874555, 0.15941582826864198, 0.13006580612770247, 0.13054325909020104, 0.14113646628753718, 0.1879240069086432, 0.19601390027758603, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.009104145727832136, 0.0368501878123223, 0.006142860833762476, 0.05480016240203822, 0.04208275952576279, 0.052356540422297204, 0.08663544587022665, 0.0623269528637842, 0.04023318594817138, 0.07924342529213713, 0.09526755363750505, 0.06882659531180091, 0.06961051073078683, 0.07230841547687028, 0.247585686175122, 0.07779017645334074, 0.10560026599334593, 0.03950733719506261, 0.10984788606810503, 0.1289243648323698, 0.15320063402809614, 0.06895130513091319, 0.15917792529236163, 0.11278903788404804, 0.09426297407067463, 0.17082877410784425, 0.10206648540856955, 0.257371877349297, 0.14941672781040993, 0.12081034225342069, 0.11544906597839066, 0.44987632270134814, 0.5317538313598024, 0.5280812134921596, 0.4817806180032109, 0.44244041789712163, 0.4242597354340665, 0.5072322038957134, 0.47431273447020617, 0.529026990744216, 0.12282710128869645, 0.130285241988788, 0.09001512864570782, 0.13978554981863367, 0.12473111757091515, 0.10047240389125767, 0.10281273788185896, 0.1051797775646175, 0.11317121005993136, 0.18539931576284185, 0.13788645690646884, 0.12645060799140462, 0.14910269383699504, 0.29707958767140585, 0.1292951616645005, 0.13138735375138644, 0.12771467245181034, 0.13921148396443805, 0.28874139660847464, 0.36569749643816707, 0.32213159671862146, 0.36985261914689815, 0.2610397122829935, 0.33003902076160196, 0.4035366385965321, 0.4144473633180633, 0.3776424625119761, 0.26893098165077656, 0.31793566510025006, 0.27208477048077273, 0.27503155597110873, 0.2795331463723606, 0.3191322292504376, 0.2286766459020647, 0.27857854223342415, 0.27365034206721917, 0.23399037584312565, 0.19667497148510082, 0.20608235780909068, 0.2150541126281309, 0.20379973121233386, 0.22718577614545998, 0.19121674668766386, 0.20617041108361767, 0.20312802620961856, 0.18922292694430676, 0.2251686931503203, 0.23686712767590734, 0.22559724155042982, 0.21167054219675918, 0.2076189920709871, 0.20590361895923948, 0.19869547884981198, 0.2233919993389799, 0.1839706576551, 0.18200340867607756, 0.4472406364567034, 0.5960710117998245, 0.7215703401218465, 0.5321542806764046, 0.16524517644258563, 0.16289754731048156, 0.7096414425073074, 0.20419438455771943, 0.21956497368787187, 0.34576877222429425, 0.35375190100292264, 0.20445989901612815, 0.21113390564611523, 0.40078695184064295, 0.1821596259191418, 0.16048193469878946, 0.17826411748412907, 0.16849834727131474, 0.1954335081864439, 0.19866514057871432, 0.18283364585707051, 0.1751222870417436, 0.1714310814668415, 0.18182705602406724, 0.19297043654863277, 0.11365387379406511, 0.08639128222630699, 0.08846896649891711, 0.10920196980712393, 0.08709396709556316, 0.10406123441437809, 0.081431092273901, 0.08926167546753061, 0.0831461725444862]}, "mutation_prompt": null}
