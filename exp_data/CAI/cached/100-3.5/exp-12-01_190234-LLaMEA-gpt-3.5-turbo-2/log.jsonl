{"id": "55bd0a1a-a8da-4b74-9fc7-48bd26b2756b", "solution": "import numpy as np\n\nclass AdaptiveHarmonySearch:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        \n    def __call__(self, func):\n        def initialize_harmony(memory_size, dim):\n            return np.random.uniform(-5.0, 5.0, (memory_size, dim))\n        \n        def evaluate_harmony(harmony, func):\n            return np.array([func(h) for h in harmony])\n        \n        memory_size = 10\n        harmony_memory = initialize_harmony(memory_size, self.dim)\n        harmony_fitness = evaluate_harmony(harmony_memory, func)\n        \n        for _ in range(self.budget - memory_size):\n            new_harmony = np.clip(harmony_memory[np.argsort(harmony_fitness)[:2]] + np.random.normal(0, 1, (2, self.dim)), -5.0, 5.0)\n            new_fitness = evaluate_harmony(new_harmony, func)\n            replace_idx = np.argmax(harmony_fitness)\n            if new_fitness.min() < harmony_fitness[replace_idx]:\n                harmony_memory[replace_idx] = new_harmony[new_fitness.argmin()]\n                harmony_fitness[replace_idx] = new_fitness.min()\n        \n        return harmony_memory[harmony_fitness.argmin()]", "name": "AdaptiveHarmonySearch", "description": "An Adaptive Harmony Search Algorithm (AHS) that dynamically adjusts its search strategy based on the problem characteristics and history of function evaluations to efficiently optimize black box functions within a limited budget.", "configspace": "", "generation": 0, "fitness": 0.17126752539320142, "feedback": "", "error": "", "parent_id": null, "metadata": {"aucs": [0.2912425723968476, 0.28949025716302357, 0.3122656604687287, 0.31133189882143997, 0.2969507796519745, 0.29054606616818446, 0.29296963954398325, 0.27168319216845105, 0.28205856888724123, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.08629553351075048, 0.0910207382400029, 0.09516956328848958, 0.10196830288428027, 0.07676887089735607, 0.08941237274905012, 0.08077482960734617, 0.07186670676227114, 0.07362430893033067, 0.08205466929459637, 0.08134813044583766, 0.07879604363908543, 0.07407128360856263, 0.09491120705257294, 0.07507004087235813, 0.07361510163880991, 0.07245434726417388, 0.07570555963058945, 0.9900751212402873, 0.9830589978684621, 0.9873231906379246, 0.9889520735018015, 0.9847002981253224, 0.9849351565054761, 0.9695988779845536, 0.9680674949750324, 0.9706671845192998, 0.18003688836781107, 0.17221631025919104, 0.20802985983360145, 0.16877142074975815, 0.1629010594890642, 0.19184930658931143, 0.18166564037637867, 0.17768198594502305, 0.1952651349758977, 0.2274515627877517, 0.2126248402839045, 0.21960469303738261, 0.2467419248477729, 0.2210746735595841, 0.2224587097597177, 0.21528330509608173, 0.22520272841871225, 0.2162102996515708, 0.12025683088242334, 0.08225885443950043, 0.11710773237514327, 0.08999952411627998, 0.085468152595788, 0.10442817692759765, 0.11146957796907919, 0.10403845982565085, 0.10317996962872511, 0.09887625203338324, 0.042701945942770325, 0.10271106705721667, 0.10169396818712617, 0.0941612796197756, 0.11523717281264578, 0.10648419529302666, 0.10116159116266987, 0.11570166657851477, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.11286169271171187, 0.031318966120261416, 0.1142595101463949, 0.11982757675357258, 0.08825253288238943, 0.06442066393236257, 0.09298054477555084, 0.09281575210611315, 0.06295937697335796, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.04194580471330811, 0.0422251170043908, 0.0466566894816377, 0.0464078392436732, 0.029580853173743704, 0.044879861476868066, 0.033550396209023337, 0.03335446743799053, 0.04496973480331612, 0.2826804131875641, 0.3023203403984659, 0.30070708753385555, 0.31489804308971125, 0.28113554188010137, 0.29420670344189037, 0.29152328709684006, 0.30015018306286767, 0.28434400586400443, 0.11455598986152304, 0.09169615609522841, 0.08474749043598584, 0.09359073644561067, 0.07981706092909446, 0.09339586327948324, 0.09016615452268328, 0.07691006068920192, 0.11956761452826925, 0.14427670438740903, 0.13939002215215857, 0.15878220644979302, 0.17695352569331657, 0.14705378689561655, 0.1638414568401806, 0.1403174250714888, 0.15248992814658813, 0.17557260418097265, 0.23257687549814687, 0.2289923285009845, 0.22687139160480718, 0.26347533758371355, 0.21500287046608435, 0.2370329612724389, 0.22435968292424124, 0.22951506793267362, 0.22712710100043643, 0.18241196040540752, 0.16682106562033316, 0.16299481630930912, 0.17475329380156368, 0.16543109124164312, 0.17111369588070158, 0.17197234943562967, 0.14432585212618798, 0.16884940429064577, 0.20485351498805204, 0.18887734493057917, 0.2140546257719601, 0.21933340615159336, 0.1999720273268324, 0.21230377023412994, 0.21507127313979468, 0.20407060313786207, 0.19558442900912054, 0.17129238762024956, 0.18175439720114583, 0.18210455843017814, 0.17104976471225886, 0.17668517623549962, 0.18434832753598207, 0.18049662632975028, 0.1824372424771592, 0.18833621643381526, 0.18071189736695648, 0.11275821502292438, 0.19536011936495046, 0.393845827576503, 0.18518229700317412, 0.1371400685082963, 0.14942343991011653, 0.11959332463438954, 0.14933028587716413, 0.0818910097155382, 0.11145776292885734, 0.12606522984893653, 0.38987469249714035, 0.14793000839337345, 0.20301432448302925, 0.16266596646290166, 0.150790826795009, 0.11181830878582533, 0.17612420608458867, 0.19676131029188182, 0.1882458357297475, 0.1821182805334325, 0.1860621674231675, 0.17700214650795476, 0.18900796541582132, 0.18315774618066283, 0.1869342838704109, 0.08007744239158654, 0.07576923965066129, 0.07571265957681372, 0.07498934758951292, 0.0765194905166523, 0.09179215706130794, 0.08868777712874598, 0.08378260398485704, 0.08202520773181099]}, "mutation_prompt": null}
{"id": "1fc0d5a4-4777-436c-a20d-ffb9339967cb", "solution": "import numpy as np\n\nclass AdaptiveHarmonySearch:\n    def __init__(self, budget, dim):\n        self.budget = budget\n        self.dim = dim\n        \n    def __call__(self, func):\n        def initialize_harmony(memory_size, dim):\n            return np.random.uniform(-5.0, 5.0, (memory_size, dim))\n        \n        def evaluate_harmony(harmony, func):\n            return np.array([func(h) for h in harmony])\n        \n        memory_size = 10\n        harmony_memory = initialize_harmony(memory_size, self.dim)\n        harmony_fitness = evaluate_harmony(harmony_memory, func)\n        \n        for _ in range(self.budget - memory_size):\n            step_size = np.random.uniform(0.1, 1.0)\n            new_harmony = np.clip(harmony_memory[np.argsort(harmony_fitness)[:2]] + np.random.normal(0, step_size, (2, self.dim)), -5.0, 5.0)\n            new_fitness = evaluate_harmony(new_harmony, func)\n            replace_idx = np.argmax(harmony_fitness)\n            if new_fitness.min() < harmony_fitness[replace_idx]:\n                harmony_memory[replace_idx] = new_harmony[new_fitness.argmin()]\n                harmony_fitness[replace_idx] = new_fitness.min()\n        \n        return harmony_memory[harmony_fitness.argmin()]", "name": "AdaptiveHarmonySearch", "description": "Further enhances Adaptive Harmony Search by incorporating self-adaptation of step size during exploration.", "configspace": "", "generation": 1, "fitness": 0.20653662225064123, "feedback": "", "error": "", "parent_id": "55bd0a1a-a8da-4b74-9fc7-48bd26b2756b", "metadata": {"aucs": [0.42059331111277565, 0.40674228218576736, 0.4374644510875425, 0.4151429858099299, 0.4189990059608656, 0.4406774773846399, 0.41648084143977737, 0.3972705335463542, 0.4224458062943436, 0.004544568931647119, 0.0011143976928924548, 9.999999999998899e-05, 0.0050456130125525744, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.15096514378570647, 0.11429376651292023, 0.0936709900463375, 0.1261163453318106, 0.1078288445075104, 0.15311277525291278, 0.10222926496020901, 0.10012192917106966, 0.08808519502900802, 0.11724285997049044, 0.08232929494548447, 0.08002081861921884, 0.11871495562522827, 0.08126202373300184, 0.082896132089323, 0.10510400927720454, 0.08743405563396844, 0.075620926656779, 0.9620352043126381, 0.9827784753326595, 0.9855910941877691, 0.9861179166448731, 0.9752274185289512, 0.9772052961374597, 0.974930796817836, 0.9815367644988877, 0.9730703241633907, 0.316940728796833, 0.27127305004042623, 0.30292073647781903, 0.2980267349887129, 0.3006542344656098, 0.2692838931095539, 0.309787531784004, 0.27841437082605225, 0.2737716668124319, 0.22860972211041142, 0.2455799662179453, 0.2223208485041308, 0.3374001373645308, 0.28127671778450625, 0.3419173370038141, 0.2298070156707268, 0.8003549841566391, 0.36747606583858883, 0.1073955556037477, 0.16755334590025395, 0.14428911335925954, 0.1530297753501313, 0.1648271118999879, 0.12734549059801759, 0.17117165923007938, 0.1759703796445823, 0.12675014296552012, 0.14839658290200863, 0.0903914185029775, 0.1740412304002299, 0.1582159429454345, 0.17626739174850714, 0.14012964694473062, 0.15041137510199842, 0.0639483737426837, 0.18702356863619019, 9.999999999998899e-05, 9.999999999998899e-05, 0.03516484290092026, 0.0002945390369580858, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.0019225459234970543, 0.0024257424205489375, 0.09096279316835953, 0.10670217055000408, 0.09606105886764194, 0.13434804085271768, 0.023820740347369584, 0.03477331212533208, 0.13992948765123858, 0.03840320984337975, 0.07333414283266049, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 9.999999999998899e-05, 0.07230600653510832, 0.07819012514446544, 0.08672522905284763, 0.09350918401510389, 0.0888243294648624, 0.10999423226144223, 0.06930746372890795, 0.0813697012830995, 0.07695571953024805, 0.3854298862990033, 0.39800095408403335, 0.40007786391041156, 0.3836267622656877, 0.3903245409573225, 0.37837663551904366, 0.41653328823233915, 0.39795977566009466, 0.4137719921750461, 0.07288551035397561, 0.07933118183123788, 0.1354090811095794, 0.11878948843267478, 0.12408429149627265, 0.10644101128332273, 0.09021376624091548, 0.1121389592605716, 0.10340144586307631, 0.21662610008686822, 0.24363388383562867, 0.17478394344532422, 0.2550295495515842, 0.16966815073188968, 0.23465321354686652, 0.16985337724966998, 0.1703336590831548, 0.21575260546410113, 0.2707645389858674, 0.18517285746970402, 0.2691151682454689, 0.2763340215162151, 0.1573036657426412, 0.23580552552912992, 0.2075260520696025, 0.21982641309286788, 0.19865230376612375, 0.2276653618924369, 0.21993143825449757, 0.2262634928524494, 0.2300741156641869, 0.14127169947879614, 0.2134842601286543, 0.18086086409032331, 0.1718676923144472, 0.23178937932918375, 0.22190433452630964, 0.16496799088566694, 0.17868732748850857, 0.18691471136631665, 0.20000697113343335, 0.21472498977528864, 0.2107547099004755, 0.19574154808296873, 0.22914430921348528, 0.18451966730645153, 0.21724535230618836, 0.19605101287345095, 0.21125143373672095, 0.18441061271114056, 0.1868656918517927, 0.18026533326064387, 0.2068955341708797, 0.17308074076861246, 0.13692911353850523, 0.11388123786085869, 0.13601814329236128, 0.5978850499307233, 0.20157508730699691, 0.12405658527674912, 0.15309809370830385, 0.12660234173208595, 0.15981001113172644, 0.08345876725038048, 0.11335420818684161, 0.4797010268467483, 0.4570741757692711, 0.15551635230788252, 0.21349382435101238, 0.16831253133848845, 0.15156935503717817, 0.4136822882736494, 0.18188403760767058, 0.18340888840506642, 0.18887876046971286, 0.18410095661888326, 0.17830398687090232, 0.19132264421640388, 0.18694063222298585, 0.2027532753163921, 0.1933364773307562, 0.10523105455152859, 0.08023525396112308, 0.0842719546542785, 0.12319216452809978, 0.10117453604336446, 0.1144455817101041, 0.10359324876536935, 0.08293984447152669, 0.08324451430641877]}, "mutation_prompt": null}
